{"version":3,"sources":["Reducer/jungleSwapSlice.js","config.js","components/NavBar.js","components/Footer.js","images/JungleSwap_Home.png","images/JungleSwap_Icon.png","components/Home.js","components/SignUp.js","components/SignIn.js","components/LogOut.js","components/CreatePlantForm.js","components/PlantDetails.js","components/UpdatePlantForm.js","components/CheckoutForm.js","components/CheckoutPage.js","components/RequestsPage.js","components/CreateRequestForm.js","components/RequestDetails.js","components/UpdateRequestForm.js","components/NotFound.js","components/Chat.js","App.js","store.js","index.js"],"names":["rootPath","process","readUserData","createAsyncThunk","a","dispatch","axios","get","withCredentials","response","setLoggedInUser","data","setIsFetchingUser","console","log","fetchAllPlants","setPlants","fetchQueryPlants","query","err","createPlant","uploadForm","name","description","size","location","price","post","imageUrl","imagePublicId","newPlant","value","addPlant","setError","error","readPlant","plantId","setPlant","imageChange","destroyImageData","image","plant","FormData","append","clonePlant","JSON","parse","stringify","updatePlant","updatedPlant","patch","setPlantChanges","deletePlant","delete","removePlant","createPayment","setClientSecret","payPlant","fetchAllRequests","setRequests","createRequest","newRequest","addRequest","readRequest","requestId","setRequest","updateRequest","updatedRequest","setRequestChanges","deleteRequest","removeRequest","signUp","newUser","signIn","user","logOut","jungleSwapSlice","createSlice","initialState","isFetchingUser","loggedInUser","isUserChange","plants","requests","request","amountOfRequests","isNewRequest","intervalId","minutesCounter","headerContainerHeight","aboutContainerHeight","clientSecret","reducers","state","action","payload","push","_id","map","singlePlant","filter","setPromise","promise","buyer","seller","message","reply","singleRequest","setAmountOfRequests","setIsNewRequest","setIntervalId","setIsUserChange","setMinutesCounter","payback","setElementsHeight","actions","NavBar","useSelector","jungleSwap","useDispatch","useEffect","clearInterval","currentRequest","length","setInterval","currentAmountOfRequests","Navbar","className","variant","expand","fixed","Brand","to","onClick","scroll","scrollToTop","Toggle","aria-controls","Collapse","id","Nav","scrollTo","title","username","Footer","href","Home","useState","setQuery","Math","round","document","querySelector","getBoundingClientRect","height","src","alt","icon","type","placeholder","onChange","event","target","class","role","SignUp","history","useHistory","onSubmit","preventDefault","email","password","toLowerCase","htmlFor","formnovalidate","SignIn","LogOut","CreatePlantForm","isLoggedInUser","plantImage","files","min","PlantDetails","useParams","creator","handleDeletePlant","UpdatePlantForm","handlePlantEntryChange","itemNumber","handleImageChange","handleUpdatePlant","CheckoutForm","isSucceeded","setIsSucceeded","isProcessing","setIsProcessing","isDisabled","setIsDisabled","paymentError","setPaymentError","stripe","useStripe","elements","useElements","handleChange","empty","handleSubmitPayment","confirmCardPayment","payment_method","card","getElement","CardElement","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","disabled","CheckoutPage","loadStripe","RequestsPage","handleResetAll","loggedInUsername","CreateRequestForm","handleCreateRequest","cols","rows","RequestDetails","handleDeleteRequest","UpdateRequestForm","cloneRequest","handleCreateReply","handleUpdateRequest","NotFound","KommunicateChat","d","m","s","createElement","async","getElementsByTagName","appendChild","window","kommunicate","_globals","withRouter","exact","path","component","store","configureStore","reducer","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.68840051.chunk.js","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport config from \"../config\";\r\nimport axios from \"axios\";\r\n\r\nconst initialState = {\r\n  isFetchingUser: true,\r\n  loggedInUser: null,\r\n  isUserChange: false,\r\n  plants: [],\r\n  plant: {},\r\n  requests: [],\r\n  request: {},\r\n  amountOfRequests: 0,\r\n  isNewRequest: false,\r\n  intervalId: null,\r\n  minutesCounter: 0,\r\n  headerContainerHeight: 0,\r\n  aboutContainerHeight: 0,\r\n  clientSecret: \"\",\r\n  error: null\r\n}\r\n\r\nconst rootPath = `${config.API_URL}/api`;\r\n\r\n// Read user data\r\nexport const readUserData = createAsyncThunk(\r\n  \"jungeSwap/readUserData\",\r\n  async ({ dispatch }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${rootPath}/user`,\r\n        { withCredentials: true }\r\n      );\r\n      dispatch(setLoggedInUser(response.data));\r\n      dispatch(setIsFetchingUser(false));\r\n    }\r\n    catch (err) {\r\n      console.log(\"Initializing fetching failed\", err);\r\n      dispatch(setIsFetchingUser(false));\r\n    }\r\n  }\r\n);\r\n\r\n// Fetch all plants\r\nexport const fetchAllPlants = createAsyncThunk(\r\n  \"jungeSwap/fetchAllPlants\",\r\n  async ({ dispatch }) => {\r\n    try {\r\n      const response = await axios.get(`${rootPath}/plants/fetch`);\r\n      dispatch(setPlants(response.data));\r\n    }\r\n    catch (err) {\r\n      console.log(\"Fetching plants failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n// Fetch query plants\r\nexport const fetchQueryPlants = createAsyncThunk(\r\n  \"jungeSwap/fetchQueryPlants\",\r\n  async (query, { dispatch }) => {\r\n    try {\r\n      const response = axios.get(`${rootPath}/plants/search?q=${query}`);\r\n      dispatch(setPlants(response.data));\r\n    }\r\n    catch (err) {\r\n      console.log(\"Fetching query plants failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n// Create plant\r\nexport const createPlant = createAsyncThunk(\r\n  \"jungeSwap/createPlant\",\r\n  async (uploadForm, { name, description, size, location, price }, { dispatch }) => {\r\n    try {\r\n      let response = await axios.post(\r\n        `${rootPath}/upload`,\r\n        uploadForm\r\n      );\r\n      const { imageUrl, imagePublicId } = response.data;\r\n      const newPlant = {\r\n        name: name.value,\r\n        description: description.value,\r\n        size: size.value,\r\n        imageUrl,\r\n        imagePublicId,\r\n        location: location.value,\r\n        price: price.value\r\n      };\r\n      try {\r\n        response = await axios.post(\r\n          `${rootPath}/plants/create`,\r\n          newPlant,\r\n          { withCredentials: true }\r\n        );\r\n        dispatch(addPlant(response.data));\r\n      }\r\n      catch (err) {\r\n        dispatch(setError(err.response.data.error));\r\n      }\r\n    }\r\n    catch (err) {\r\n      dispatch(setError(err.response.data.error));\r\n    }\r\n  }\r\n);\r\n\r\n// Read plant\r\nexport const readPlant = createAsyncThunk(\r\n  \"jungeSwap/readPlant\",\r\n  async (plantId, { dispatch }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${rootPath}/plants/read/${plantId}`,\r\n        { withCredentials: true }\r\n      );\r\n      dispatch(setPlant(response.data));\r\n    }\r\n    catch {\r\n      console.log(\"Read plant failed\");\r\n    }\r\n  }\r\n);\r\n\r\n// Plant image change\r\nexport const imageChange = createAsyncThunk(\r\n  \"jungleSwap/imageChange\",\r\n  async (destroyImageData, image, plant, { dispatch }) => {\r\n    try {\r\n      await axios.post(\r\n        `${rootPath}/destroy`,\r\n        destroyImageData\r\n      );\r\n      try {\r\n        const uploadForm = new FormData();\r\n        uploadForm.append(\"image\", image);\r\n        const response = await axios.post(\r\n          `${rootPath}/upload`,\r\n          uploadForm\r\n        );\r\n        const { imagePublicId, imageUrl } = response.data;\r\n        const clonePlant = JSON.parse(JSON.stringify(plant));\r\n        clonePlant.imagePublicId = imagePublicId;\r\n        clonePlant.imageUrl = imageUrl;\r\n        dispatch(setPlant(clonePlant));\r\n      }\r\n      catch (err) {\r\n        console.log(\"Image upload failed\", err);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(\"Delete old image failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n// Update plant\r\nexport const updatePlant = createAsyncThunk(\r\n  \"jungleSwap/updatePlant\",\r\n  async (plantId, updatedPlant, { dispatch }) => {\r\n    try {\r\n      const response = await axios.patch(\r\n        `${rootPath}/plants/update/${plantId}`,\r\n        updatedPlant\r\n      );\r\n      dispatch(setPlantChanges(response.data));\r\n    }\r\n    catch (err) {\r\n      console.log(\"Update plant failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n// Delete Plant\r\nexport const deletePlant = createAsyncThunk(\r\n  \"jungleSwap/deletePlant\",\r\n  async (imagePublicId, plantId, { dispatch }) => {\r\n    try {\r\n      const destroyImageData = {\r\n        imagePublicId\r\n      }\r\n      await axios.post(\r\n        `${rootPath}/destroy`,\r\n        destroyImageData\r\n      );\r\n      try {\r\n        await axios.delete(`${rootPath}/plants/delete/${plantId}`);\r\n        dispatch(removePlant(plantId));\r\n      }\r\n      catch (err) {\r\n        console.log(\"Delete plant failed\", err);\r\n      }\r\n    }\r\n    catch (err) {\r\n      console.log(\"Delete image failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n// Create plant payment\r\nexport const createPayment = createAsyncThunk(\r\n  \"jungleSwap/createPayment\",\r\n  async (plant, { dispatch }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${rootPath}/create-payment-intent`,\r\n        { price: plant.price }\r\n      );\r\n      dispatch(setClientSecret(response.data));\r\n    }\r\n    catch (err) {\r\n      console.log(\"Create payment failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n// Pay plant\r\nexport const payPlant = createAsyncThunk(\r\n  \"jungleSwap/payPlant\",\r\n  async ({ dispatch }) => {\r\n    try {\r\n      await axios.post(\r\n        `${rootPath}/create-payment-intent`,\r\n        {},\r\n        { withCredentials: true }\r\n      );\r\n    }\r\n    catch (err) {\r\n      console.log(\"Checkout failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n// Fetch all requests\r\nexport const fetchAllRequests = createAsyncThunk(\r\n  \"jungleSwap/fetchAllRequests\",\r\n  async ({ dispatch }) => {\r\n    try {\r\n      const response = await axios.get(`${rootPath}/requests/fetch`);\r\n      dispatch(setRequests(response.data));\r\n    }\r\n    catch (err) {\r\n      console.log(\"Fetching requests failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n// Create request\r\nexport const createRequest = createAsyncThunk(\r\n  \"jungleSwap/createRequest\",\r\n  async (newRequest, { dispatch }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${rootPath}/requests/create`,\r\n        newRequest,\r\n        { withCredentials: true }\r\n      );\r\n      dispatch(addRequest(response.data));\r\n    }\r\n    catch (err) {\r\n      dispatch(setError(err.response.data.error));\r\n    }\r\n  }\r\n);\r\n\r\n// Read request\r\nexport const readRequest = createAsyncThunk(\r\n  \"jungleswap/readRequest\",\r\n  async (requestId, { dispatch }) => {\r\n    try {\r\n      const response = await axios.get(\r\n        `${rootPath}/requests/read/${requestId}`,\r\n        { withCredentials: true }\r\n      );\r\n      dispatch(setRequest(response.data));\r\n    }\r\n    catch {\r\n      console.log(\"Read request failed\");\r\n    }\r\n  }\r\n);\r\n\r\n// Update request\r\nexport const updateRequest = createAsyncThunk(\r\n  \"jungleSwap/updateRequest\",\r\n  async (requestId, updatedRequest, { dispatch }) => {\r\n    try {\r\n      const response = await axios.patch(\r\n        `${rootPath}/requests/update/${requestId}`,\r\n        updatedRequest\r\n      );\r\n      dispatch(setRequestChanges(response.data));\r\n    }\r\n    catch (err) {\r\n      console.log(\"Update request failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n// Delete request\r\nexport const deleteRequest = createAsyncThunk(\r\n  \"jungleSwap/deleteRequest\",\r\n  async (requestId, { dispatch }) => {\r\n    try {\r\n      await axios.delete(`${rootPath}/requests/delete/${requestId}`);\r\n      dispatch(removeRequest(requestId));\r\n    }\r\n    catch (err) {\r\n      console.log(\"Delete request failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n\r\n// Sign up\r\nexport const signUp = createAsyncThunk(\r\n  \"jungleSwap/signUp\",\r\n  async (newUser, { dispatch }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${rootPath}/signup`,\r\n        newUser\r\n      );\r\n      dispatch(setLoggedInUser(response.data));\r\n    }\r\n    catch (err) {\r\n      dispatch(setError(err.response.data.error));\r\n    }\r\n  }\r\n);\r\n\r\n// Sign in\r\nexport const signIn = createAsyncThunk(\r\n  \"jungleSwap/signIn\",\r\n  async (user, { dispatch }) => {\r\n    try {\r\n      const response = await axios.post(\r\n        `${rootPath}/signin`,\r\n        user,\r\n        { withCredentials: true }\r\n      );\r\n      dispatch(setLoggedInUser(response.data));\r\n    }\r\n    catch (err) {\r\n      dispatch(setError(err.response.data.error));\r\n    }\r\n  }\r\n);\r\n\r\n// LogOut\r\nexport const logOut = createAsyncThunk(\r\n  \"jungleSwap/logOut\",\r\n    async({ dispatch }) => {\r\n    try {\r\n      await axios.post(\r\n        `${rootPath}/logout`,\r\n        {},\r\n        { withCredentials: true }\r\n      );\r\n      dispatch(setLoggedInUser(null));\r\n    }\r\n    catch (err) {\r\n      console.log(\"Logout failed\", err);\r\n    }\r\n  }\r\n);\r\n\r\n\r\nexport const jungleSwapSlice = createSlice({\r\n  name: \"jungleSwap\",\r\n  initialState,\r\n  reducers: {\r\n    setPlant: (state, action) => {\r\n      state.plant = action.payload;\r\n    },\r\n    setPlants: (state, action) => {\r\n      state.plants = action.payload;\r\n    },\r\n    addPlant: (state, action) => {\r\n      state.plants.push(action.payload);\r\n    },\r\n    setPlantChanges: (state, action) => {\r\n      const { _id, name, description, size, image, imagePublicId, location, price } = action.payload;\r\n      state.plants = state.plants.map(\r\n        singlePlant => {\r\n          if (singlePlant._id === _id) {\r\n            singlePlant.name = name;\r\n            singlePlant.description = description;\r\n            singlePlant.size = size;\r\n            singlePlant.image = image;\r\n            singlePlant.imagePublicId = imagePublicId;\r\n            singlePlant.location = location;\r\n            singlePlant.price = price;\r\n          }\r\n          return singlePlant;\r\n        }\r\n      );\r\n    },\r\n    removePlant: (state, action) => {\r\n      state.plants = state.plants.filter(plant => plant._id !== action.payload);\r\n    },\r\n    setError: (state, action) => {\r\n      state.error = action.payload;\r\n    },\r\n    setLoggedInUser: (state, action) => {\r\n      state.loggedInUser = action.payload;\r\n    },\r\n    setIsFetchingUser: (state, action) => {\r\n      state.isFetchingUser = action.payload;\r\n    },\r\n    setPromise: (state, action) => {\r\n      state.promise = action.payload;\r\n    },\r\n    setClientSecret: (state, action) => {\r\n      state.clientSecret = action.payload;\r\n    },\r\n    setRequests: (state, action) => {\r\n      state.requests = action.payload;\r\n    },\r\n    setRequest: (state, action) => {\r\n      state.request = action.payload;\r\n    },\r\n    addRequest: (state, action) => {\r\n      state.requests.push(action.payload);\r\n    },\r\n    setRequestChanges: (state, action) => {\r\n      const { _id, buyer, seller, plant, message, reply } = action.payload;\r\n      state.requests = state.requests.map(\r\n        singleRequest => {\r\n          if (singleRequest._id === _id) {\r\n            singleRequest.buyer = buyer;\r\n            singleRequest.seller = seller;\r\n            singleRequest.plant = plant;\r\n            singleRequest.message = message;\r\n            singleRequest.reply = reply;\r\n          }\r\n          return singleRequest;\r\n        }\r\n      )\r\n    },\r\n    removeRequest: (state, action) => {\r\n      state.requests = state.requests.filter(request => request._id !== action.payload);\r\n    },\r\n    setAmountOfRequests: (state, action) => {\r\n      state.amountOfRequests = action.payload;\r\n    },\r\n    setIsNewRequest: (state, action) => {\r\n      state.isNewRequest = action.payload;\r\n    },\r\n    setIntervalId: (state, action) => {\r\n      state.intervalId = action.payload;\r\n    },\r\n    setIsUserChange: (state, action) => {\r\n      state.isUserChange = action.payload;\r\n    },\r\n    setMinutesCounter: (state, action) => {\r\n      state.minutesCounter = action.payback;\r\n    },\r\n    setElementsHeight: (state, action) => {\r\n      const {headerContainerHeight, aboutContainerHeight} = action.payback;\r\n      state.headerContainerHeight = headerContainerHeight;\r\n      state.aboutContainerHeight = aboutContainerHeight;\r\n    }\r\n  }\r\n});\r\n\r\nexport const {\r\n  setPlant,\r\n  setPlants,\r\n  addPlant,\r\n  setPlantChanges,\r\n  removePlant,\r\n  setError,\r\n  setLoggedInUser,\r\n  setIsFetchingUser,\r\n  setPromise,\r\n  setClientSecret,\r\n  setRequests,\r\n  setRequest,\r\n  addRequest,\r\n  setRequestChanges,\r\n  removeRequest,\r\n  setAmountOfRequests,\r\n  setIntervalId,\r\n  setIsUserChange,\r\n  setMinutesCounter,\r\n  setIsNewRequest,\r\n  setElementsHeight\r\n} = jungleSwapSlice.actions;\r\n\r\nexport default jungleSwapSlice.reducer;","export default {API_URL: process.env.REACT_APP_SERVER_URL};","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { fetchAllRequests, setIsUserChange, setIntervalId, setMinutesCounter, setAmountOfRequests, setIsNewRequest } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst NavBar = () => {\r\n  const loggedInUser = useSelector(state => state.jungleSwap.loggedInUser);\r\n  const isUserChange = useSelector(state => state.jungleSwap.isUserChange);\r\n  const requests = useSelector(state => state.jungleSwap.requests);\r\n  const isNewRequest = useSelector(state => state.jungleSwap.isNewRequest);\r\n  const intervalId = useSelector(state => state.jungleSwap.intervalId);\r\n  const minutesCounter = useSelector(state => state.jungleSwap.minutesCounter);\r\n  const amountOfRequests = useSelector(state => state.jungleSwap.amountOfRequests);\r\n  const headerContainerHeight = useSelector(state => state.jungleSwap.headerContainerHeight);\r\n  const aboutContainerHeight = useSelector(state => state.jungleSwap.aboutContainerHeight);\r\n  const dispatch = useDispatch();\r\n\r\n  // Stop interval at cleanup\r\n  useEffect(\r\n    () => {\r\n      return () => {\r\n        if (intervalId) {\r\n          clearInterval(intervalId);\r\n          dispatch(setIntervalId(null));\r\n          dispatch(setMinutesCounter(0));\r\n        }\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  // Start request check if user changes\r\n  useEffect(\r\n    () => {\r\n      if (isUserChange) {\r\n        dispatch(fetchAllRequests());\r\n        dispatch(setAmountOfRequests(requests.filter(currentRequest => currentRequest.seller._id === loggedInUser._id).length));\r\n        dispatch(setIntervalId(setInterval(\r\n          () => dispatch(setMinutesCounter(minutesCounter => minutesCounter += 1)),\r\n          10000 // every minute\r\n        )));\r\n        dispatch(setIsUserChange(false));\r\n      }\r\n    },\r\n    [isUserChange]\r\n  );\r\n\r\n  // Check new requests for logged in user every minute\r\n  useEffect(\r\n    () => {\r\n      dispatch(fetchAllRequests());\r\n      const currentAmountOfRequests = requests.filter(currentRequest => currentRequest.seller._id === loggedInUser._id).length;\r\n      if (amountOfRequests < currentAmountOfRequests) {\r\n        dispatch(setAmountOfRequests(currentAmountOfRequests));\r\n        dispatch(setIsNewRequest(true));\r\n      }\r\n    },\r\n    [minutesCounter]\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className=\"pl-5\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n        <Navbar.Brand> <Link to=\"/\" onClick={scroll.scrollToTop}> JungleSwap </Link> </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <div>\r\n              <Link to=\"/\" className=\"p-2\" onClick={() => scroll.scrollTo(headerContainerHeight + aboutContainerHeight)}> All Plants </Link>\r\n            </div>\r\n            {\r\n              loggedInUser && (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/plants/create\"> Create Plant </Link>\r\n                  <Link className={isNewRequest ? \"p-2 alertColor\" : \"p-2\"} to=\"/requests/fetch\" title={isNewRequest ? \"new message\" : null}> Messages </Link>\r\n                </div>\r\n              )\r\n            }\r\n            {\r\n              loggedInUser ? (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/logout\" title={loggedInUser.username}> Log out </Link>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/signin\"> Sign in </Link>\r\n                  <Link className=\"p-2\" to=\"/signup\"> Sign up </Link>\r\n                </div>\r\n              )\r\n            }\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-row\">\r\n      <footer>\r\n        © 2021\r\n        <Link href=\"https://www.linkedin.com/in/christian-gerbig/\"> Christian Gerbig </Link>\r\n        &\r\n        <Link href=\"https://www.linkedin.com/in/lisa-montebaur/\"> Lisa Montebaur </Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/JungleSwap_Home.c4ed9b4c.png\";","export default __webpack_public_path__ + \"static/media/JungleSwap_Icon.a6c7c44a.png\";","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { setElementsHeight, fetchAllPlants, fetchQueryPlants, readUserData } from \"../Reducer/jungleSwapSlice\";\r\nimport image from \"../images/JungleSwap_Home.png\";\r\nimport icon from \"../images/JungleSwap_Icon.png\";\r\n\r\nconst Home = () => {\r\n  const loggedInUser = useSelector(state => state.jungleSwap.loggedInUser);\r\n  const plants = useSelector(state => state.jungleSwap.plants);\r\n  const headerContainerHeight = useSelector(state => state.jungleSwap.headerContainerHeight);\r\n  const [query, setQuery] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n\r\n  // Get height of header and about elements and load plants and user data as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      dispatch(fetchAllPlants());\r\n      !loggedInUser && dispatch(readUserData());\r\n      const headerContainerHeight = Math.round(document.querySelector(\"#titleId\").getBoundingClientRect().height);\r\n      const aboutContainerHeight = Math.round(document.querySelector(\"#aboutId\").getBoundingClientRect().height);\r\n      dispatch(setElementsHeight(headerContainerHeight, aboutContainerHeight));\r\n    },\r\n    []\r\n  );\r\n\r\n  // Handle plant search result if user types in query\r\n  useEffect(\r\n    () => {\r\n      dispatch(fetchQueryPlants(query));\r\n      query ? dispatch(fetchQueryPlants(query)) : dispatch(fetchAllPlants())\r\n    },\r\n    [query]\r\n  );\r\n\r\n  // Search plant\r\n  const handleSearchPlant = event => setQuery(event.target.value)\r\n\r\n  if (!plants) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading plants... </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"text-center pt-5 pb-5 headerImg\" id=\"titleId\">\r\n        <div className=\"row my-5\">\r\n          <div className=\"col-6 offset-3 my-5 borderAround\">\r\n            <h2 className=\"title mb-2\"> JungleSwap </h2>\r\n            <h5 className=\"mt-3 mb-5\"> Share your green heart </h5>\r\n            <div className=\"mb-5\">\r\n              <Link className=\"biggerFontSize\" onClick={() => scroll.scrollTo(headerContainerHeight)}> Try it! </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <section id=\"aboutId\">\r\n        <div className=\"about centered container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 col-md-5 col-lg-6\">\r\n              <img className=\"image\" src={image} alt=\"plants\" />\r\n            </div>\r\n            <br />\r\n            <div className=\"about col-sm-6 col-md-5 col-lg-6 px-5 noOverflow\">\r\n              <h4> Welcome to JungleSwap! </h4>\r\n              <h5> Add green to your Home </h5>\r\n              <p> It\"s easy-peasy. <br />\r\n                Share your plant offshoots. <br />\r\n                Make money! <br />\r\n                Or swap them for another plant. <br />\r\n                Don\"t have any baby plants? <br />\r\n                You can simply shop and give a plant a new home.\r\n              </p>\r\n              <img className=\"icon\" src={icon} alt=\"icon\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section>\r\n        <div className=\"container mt-5\">\r\n          <div className=\"mt-5 mb-3\">\r\n            <h2> Plants </h2>\r\n            <hr />\r\n            <h4> Search a plant </h4>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <input className=\"smallWidth form-control\" type=\"text\" placeholder=\"Search...\" value={query} onChange={handleSearchPlant} />\r\n          </div>\r\n          <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n            {\r\n              plants.map(\r\n                plant => {\r\n                  const { _id, name, image, price } = plant;\r\n                  return (\r\n                    <div className=\"col mb-5\" key={_id}>\r\n                      <div className=\"card card-medium-width text-center h-100\">\r\n                        <img className=\"card-img-top mediumPicSize\" src={image} alt={name} />\r\n                        <div className=\"card-body mb-5\">\r\n                          <h5> {name} </h5>\r\n                          <p> {price} € </p>\r\n                          <Link className=\"btn btn-outline-dark\" to={`/plants/read/${_id}`}> Details </Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { setError, setIsNewRequest, signUp, setIsUserChange } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst SignUp = () => {\r\n  const error = useSelector(state => state.jungleSwap.error);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Clear variables and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      dispatch(setError(null));\r\n      dispatch(setIsNewRequest(false));\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  // Sign up\r\n  const handleSignUp = event => {\r\n    event.preventDefault();\r\n    const { username, email, password } = event.target;\r\n    const newUser = {\r\n      username: username.value,\r\n      email: email.value.toLowerCase(),\r\n      password: password.value\r\n    };\r\n    dispatch(signUp(newUser));\r\n    dispatch(setIsUserChange(true));\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Sign Up </h2>\r\n        <form onSubmit={handleSignUp}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputUsername\"> Username </label>\r\n            <input type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputEmail\"> Email address </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputPassword\"> Password </label>\r\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\" />\r\n          </div>\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\" formnovalidate=\"formnovalidate\"> Sign up </button>\r\n          <p className=\"padding\"> Already have an account? </p>\r\n          <Link to={\"/signin\"}> Sign in </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { setError, setIsNewRequest, signIn, setIsUserChange } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst SignIn = () => {\r\n  const error = useSelector(state => state.jungleSwap.error);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Clear variables and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      dispatch(setError(null));\r\n      dispatch(setIsNewRequest(false));\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  // Sign in\r\n  const handleSignIn = event => {\r\n    event.preventDefault();\r\n    const { email, password } = event.target;\r\n    const user = {\r\n      email: email.value,\r\n      password: password.value\r\n    };\r\n    dispatch(signIn(user));\r\n    dispatch(setIsUserChange(true));\r\n    history.push(\"/\");\r\n  }\r\n\r\n  return (\r\n    <div className=\"container row mt-5 custom fullscreen\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Sign In </h2>\r\n        <form onSubmit={handleSignIn}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputEmail\"> Email address </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputPassword\"> Password </label>\r\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\" />\r\n          </div>\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\" formnovalidate=\"formnovalidate\"> Sign in </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { logOut, setIsNewRequest, setIntervalId, setMinutesCounter } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst LogOut = () => {\r\n  const intervalId = useSelector(state => state.jungleSwap.intervalId);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Log out, stop interval, reset variables and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      dispatch(logOut);\r\n      clearInterval(intervalId);\r\n      dispatch(setIntervalId(null));\r\n      dispatch(setMinutesCounter(0));\r\n      dispatch(setIsNewRequest(false));\r\n      history.push(\"/\");\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (<div />);\r\n}\r\n\r\nexport default LogOut;","import React, { useEffect } from \"react\";\r\nimport { Link, Redirect, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { createPlant, setError } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst CreatePlantForm = () => {\r\n  const isLoggedInUser = useSelector(state => state.jungleSwap.isLoggedInUser);\r\n  const headerContainerHeight = useSelector(state => state.jungleSwap.headerContainerHeight);\r\n  const aboutContainerHeight = useSelector(state => state.jungleSwap.aboutContainerHeight);\r\n  const error = useSelector(state => state.jungleSwap.error);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Scroll to top as soon as page loads and scroll to plants section during cleanup\r\n  useEffect(\r\n    () => {\r\n      dispatch(setError(null));\r\n      scroll.scrollToTop();\r\n      return () => scroll.scrollTo(headerContainerHeight + aboutContainerHeight);\r\n    },\r\n    []\r\n  );\r\n\r\n  // Create plant\r\n  const handleCreatePlant = event => {\r\n    event.preventDefault();\r\n    const { plantImage } = event.target;\r\n    const image = plantImage.files[0];\r\n    const uploadForm = new FormData();\r\n    uploadForm.append(\"image\", image);\r\n    dispatch(createPlant(uploadForm, event.target));\r\n    history.push(\"/\");\r\n  }\r\n\r\n  if (!isLoggedInUser) return (<Redirect to={\"/signup\"} />);\r\n\r\n  return (\r\n    <div className=\"container row mt-5 fullscreen\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-6\">\r\n        <h2 className=\"mb-5\"> Create a plant </h2>\r\n        <form onSubmit={handleCreatePlant}>\r\n          <input className=\"mb-4\" name=\"name\" type=\"text\" placeholder=\"Enter name\" />\r\n          <input className=\"mb-4\" name=\"description\" type=\"text\" placeholder=\"Enter description\" />\r\n          <input className=\"mb-4 smallWidth\" name=\"size\" type=\"number\" min=\"1\" placeholder=\"Size\" /> cm <br />\r\n          <select className=\"mb-4 p-1\" name=\"location\" type=\"text\">\r\n            <option> Select location </option>\r\n            <option value=\"sun\"> sun </option>\r\n            <option value=\"shade\"> shade </option>\r\n            <option value=\"sun and shade\"> sun and shade </option>\r\n          </select>\r\n          <br />\r\n          <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" placeholder=\"Price\" /> € <br />\r\n          <input className=\"mb-4\" name=\"plantImage\" type=\"file\" />\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <div className=\"col-12\">\r\n            <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\" > Create </button>\r\n            <Link to={\"/\"}> <button className=\"btn btn-sm mx-5\"> Go back </button> </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePlantForm;","import React, { useEffect } from \"react\";\r\nimport { Link, Redirect, useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { readPlant, deletePlant } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst PlantDetails = () => {\r\n  const isLoggedInUser = useSelector(state => state.jungleSwap.isLoggedInUser);\r\n  const plant = useSelector(state => state.jungleSwap.plant);\r\n  const headerContainerHeight = useSelector(state => state.jungleSwap.headerContainerHeight);\r\n  const aboutContainerHeight = useSelector(state => state.jungleSwap.aboutContainerHeight);\r\n  const { plantId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Read plant data and scroll to top as soon as page loads  \r\n  useEffect(\r\n    () => {\r\n      dispatch(readPlant(plantId));\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  // Delete plant\r\n  const handleDeletePlant = (imagePublicId, plantId) => {\r\n    dispatch(deletePlant(imagePublicId, plantId));\r\n    history.push(\"/\");\r\n    scroll.scrollTo(headerContainerHeight + aboutContainerHeight);\r\n  }\r\n\r\n  if (!isLoggedInUser) return (<Redirect to={\"/signup\"} />);\r\n\r\n  const { _id, name, description, size, imageUrl, imagePublicId, location, price, creator } = plant;\r\n  if (!creator) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading plant details... </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container mt-5 row row-md-10 offset-md-4\">\r\n      <div className=\"mt-4 mb-3 pt-4 container\">\r\n        <h2> Plant details </h2>\r\n      </div>\r\n      <div className=\"col\">\r\n        <div className=\"card cardMediumWidth\">\r\n          {imageUrl && (<img className=\"card-img-top mediumPicSize\" src={imageUrl} alt={name} />)}\r\n          <div className=\"ml-2 mt-2\"> <span> Name: </span> {name} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Description: </span> {description} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Size: </span> {size} cm </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Likes: </span> {location} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Price: </span> {price} € </div>\r\n          <div className=\"ml-2 mt-2 col justify-content-center\">\r\n            <div className=\"row-2 justify-content-center\">\r\n              <div className=\"card-body\">\r\n                {\r\n                  isLoggedInUser._id === creator._id ? (\r\n                    <div>\r\n                      <Link to={\"/plants/update\"}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Update </button> </Link>\r\n                      <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={() => handleDeletePlant(imagePublicId, _id)}> Delete </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <Link to=\"/plants/checkout\"> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Buy </button> </Link>\r\n                      <Link to=\"/requests/create\"> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Swap </button> </Link>\r\n                    </div>\r\n                  )\r\n                }\r\n                <Link to={\"/\"} onClick={() => scroll.scrollTo(headerContainerHeight + aboutContainerHeight)}> <button className=\"btn btn-sm ml-2\"> Go back </button> </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlantDetails;","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { imageChange, updatePlant, setPlant } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst UpdatePlantForm = () => {\r\n  const plant = useSelector(state => state.jungleSwap.plant);\r\n  const headerContainerHeight = useSelector(state => state.jungleSwap.headerContainerHeight);\r\n  const aboutContainerHeight = useSelector(state => state.jungleSwap.aboutContainerHeight);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Scroll to top as soon as page loads\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n\r\n  // Check which plant values changed\r\n  const handlePlantEntryChange = ({ target }, plant, itemNumber) => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    // eslint-disable-next-line default-case\r\n    switch (itemNumber) {\r\n      case 0:\r\n        clonePlant.name = target.value;\r\n        break;\r\n      case 1:\r\n        clonePlant.description = target.value;\r\n        break;\r\n      case 2:\r\n        clonePlant.size = target.value;\r\n        break;\r\n      case 3:\r\n        clonePlant.location = target.value;\r\n        break;\r\n      case 4:\r\n        clonePlant.price = target.value;\r\n    }\r\n    dispatch(setPlant(clonePlant));\r\n  }\r\n\r\n  // Plant image changed\r\n  const handleImageChange = ({ target }, plant) => {\r\n    const image = target.files[0];\r\n    const { imagePublicId } = plant;\r\n    const destroyImageData = {\r\n      imagePublicId\r\n    }\r\n    dispatch(imageChange(destroyImageData, image, plant));\r\n  }\r\n\r\n  const handleUpdatePlant = ({ _id, name, description, size, imageUrl, imagePublicId, location, price }) => {\r\n    const updatedPlant = {\r\n      name,\r\n      description,\r\n      size,\r\n      imageUrl,\r\n      imagePublicId,\r\n      location,\r\n      price\r\n    };\r\n    dispatch(updatePlant(_id, updatedPlant));\r\n    history.push(\"/\");\r\n    scroll.scrollTo(headerContainerHeight + aboutContainerHeight);\r\n  }\r\n\r\n  const { _id, name, description, size, imageUrl, price } = plant;\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mt-5 mb-4\"> Update your plant </h2>\r\n        <div className=\"card cardSmallWidth mb-5\">\r\n          <img className=\"mb-2 smallPicSize\" src={imageUrl} alt={name} />\r\n          <div className=\"card-body\">\r\n            <input className=\"mb-2\" onChange={event => handleImageChange(event, plant)} type=\"file\" />\r\n            <input className=\"mb-2\" type=\"text\" onChange={event => handlePlantEntryChange(event, plant, 0)} value={name} />\r\n            <input className=\"mb-2\" type=\"text\" onChange={event => handlePlantEntryChange(event, plant, 1)} value={description} />\r\n            <input className=\"mb-2 smallWidth\" type=\"number\" onChange={event => handlePlantEntryChange(event, plant, 2)} value={size} /> cm <br />\r\n            <select className=\"mb-2\" onChange={event => handlePlantEntryChange(event, plant, 3)} name=\"location\" type=\"text\" placeholder=\"Select\">\r\n              <option value=\"sun\"> sun </option>\r\n              <option value=\"shade\"> shade </option>\r\n              <option value=\"sun and shade\"> sun and shade </option>\r\n            </select> <br />\r\n            <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" onChange={event => handlePlantEntryChange(event, plant, 4)} value={price} /> €\r\n            <div className=\"row justify-content-around\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" onClick={() => handleUpdatePlant(plant)}> Save changes </button>\r\n              <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePlantForm;","import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport { payPlant, createPayment } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst CheckoutForm = () => {\r\n  const [isSucceeded, setIsSucceeded] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [paymentError, setPaymentError] = useState(null);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const clientSecret = useSelector(state => state.jungleSwap.clientSecret);\r\n  const plant = useSelector(state => state.jungleSwap.plant);\r\n  const headerContainerHeight = useSelector(state => state.jungleSwap.headerContainerHeight);\r\n  const aboutContainerHeight = useSelector(state => state.jungleSwap.aboutContainerHeight);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Create payment as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      dispatch(createPayment(plant));\r\n      return () => scroll.scrollTo(headerContainerHeight + aboutContainerHeight);\r\n    },\r\n    []\r\n  );\r\n\r\n  // Card styling\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": { color: \"#32325d\" }\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Plant payment\r\n  const handlePayPlant = () => {\r\n    dispatch(payPlant);\r\n    history.push(\"/\");\r\n  }\r\n\r\n  // Listen for changes in Card element and display any errors as customer types card details\r\n  const handleChange = async event => {\r\n    setIsDisabled(event.empty);\r\n    setPaymentError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  // Submit payment\r\n  const handleSubmitPayment = async event => {\r\n    event.preventDefault();\r\n    setIsProcessing(true);\r\n    const payload = await stripe.confirmCardPayment(\r\n      clientSecret,\r\n      { payment_method: { card: elements.getElement(CardElement) } }\r\n    );\r\n    if (payload.error) {\r\n      setPaymentError(`Payment failed ${payload.error.message}`);\r\n      setIsProcessing(false);\r\n    }\r\n    else {\r\n      setPaymentError(null);\r\n      setIsProcessing(false);\r\n      setIsSucceeded(true);\r\n    }\r\n  }\r\n\r\n  const { _id, name, price } = plant;\r\n  return (\r\n    <div className=\"container col-9\">\r\n      <form className=\"checkoutForm mt-5\" id=\"payment-form\" onSubmit={handleSubmitPayment}>\r\n        <h2 className=\"text-center mb-2 p-2\"> {name} </h2>\r\n        <h3 className=\"text-center mb-4 p-2\"> {price} € </h3>\r\n        <CardElement\r\n          className=\"p-2\"\r\n          id=\"card-element\"\r\n          options={cardStyle}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"row justify-content-center\">\r\n          <button onClick={handlePayPlant} className=\"btn btn-sm mt-5 mb-4\" disabled={isProcessing || isDisabled || isSucceeded} id=\"submit\">\r\n            <span id=\"button-text\">\r\n              {isProcessing ? <div className=\"spinner\" id=\"spinner\" /> : \"Pay now\"}\r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* Show any error that happens when processing the payment */\r\n          paymentError && (<div className=\"card-error\" role=\"alert\"> {paymentError} </div>)\r\n        /* Show success message upon completion */}\r\n        <p className={isSucceeded ? \"result-message text-center\" : \"result-message hidden text-center\"}>\r\n          Payment succeeded.\r\n        </p>\r\n      </form>\r\n      <div className=\"row justify-content-center\">\r\n        {\r\n          isSucceeded ? (\r\n            <Link to={\"/\"}> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n          )\r\n            : (\r\n              <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutForm;","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport { setPromise } from \"../Reducer/jungleSwapSlice\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\n\r\nconst CheckoutPage = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Load Stripe and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      const promise = loadStripe(\"pk_test_51IQBsPA6EAM4YnfDyrjHWnLHzZ5KkI9tsERzYhBGVoctZBrFUb4Sda035HvcQKpp7thFiqW6QmO8ytPbOAMTg33z00cHvcbojv\");\r\n      dispatch(setPromise(promise));\r\n      scroll.scrollToTop()\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-6 offset-1 offset-md-5 App\">\r\n        <Elements>\r\n          <CheckoutForm />\r\n        </Elements>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;","import React, { useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { fetchAllRequests, setIsNewRequest } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst RequestsPage = () => {\r\n  const loggedInUser = useSelector(state => state.jungleSwap.loggedInUser);\r\n  const requests = useSelector(state => state.jungleSwap.requests);\r\n  const amountOfRequests = useSelector(state => state.jungleSwap.amountOfRequests);\r\n  const dispatch = useDispatch();\r\n\r\n  // Fetch all requests and reset values as soon as page loads and reset values during cleanup\r\n  useEffect(\r\n    () => {\r\n      const handleResetAll = () => {\r\n        dispatch(setIsNewRequest(false));\r\n        scroll.scrollToTop();\r\n      }\r\n\r\n      dispatch(fetchAllRequests());\r\n      handleResetAll();\r\n      return () => handleResetAll()\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!loggedInUser) return (<Redirect to={\"/signup\"} />);\r\n\r\n  if (!requests) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading requests... </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 > Your messages </h2>\r\n        <h3 className=\"mb-4\"> [{amountOfRequests}] </h3>\r\n        <Link to={\"/\"}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n        {\r\n          requests.map(\r\n            request => {\r\n              const { _id, buyer, seller, plant } = request;\r\n              return (\r\n                seller._id === loggedInUser._id && (\r\n                  <div className=\"card p-3 mt-4 \" key={_id}>\r\n                    <h4> Request for: {plant.name} </h4>\r\n                    <h5> by: {buyer.loggedInUsername} </h5>\r\n                    <div>\r\n                      <Link className=\"btn btn-outline-dark\" to={`/requests/read/${_id}`}> Details </Link>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              );\r\n            }\r\n          )\r\n        }\r\n        {amountOfRequests !== 0 && (<Link to={\"/\"}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestsPage;","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { createRequest, setError } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst CreateRequestForm = () => {\r\n  const plant = useSelector(state => state.jungleSwap.plant);\r\n  const error = useSelector(state => state.jungleSwap.error);\r\n  const dispatch = useDispatch();\r\n\r\n  // Set variable and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      dispatch(setError(null));\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  // Create request\r\n  const handleCreateRequest = (event, { _id, creator }) => {\r\n    event.preventDefault();\r\n    const { message } = event.target;\r\n    const newRequest = {\r\n      seller: creator._id,\r\n      plant: _id,\r\n      message: message.value\r\n    };\r\n    dispatch(createRequest(newRequest));\r\n  }\r\n\r\n  const { _id, name } = plant;\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-4\"> Your mesage </h2>\r\n        <h3 className=\"mb-4\"> {name} </h3>\r\n        <form onSubmit={(event) => handleCreateRequest(event, plant)}>\r\n          <div>\r\n            <textarea className=\"mb-4\" name=\"message\" cols=\"35\" rows=\"7\" />\r\n          </div>\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\"> Send </button>\r\n          <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateRequestForm;","import React, { useEffect } from \"react\";\r\nimport { Link, useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { readRequest, deleteRequest, setAmountOfRequests } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst RequestDetails = () => {\r\n  const request = useSelector(state => state.jungleSwap.request);\r\n  const { requestId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Read request and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      dispatch(readRequest(requestId));\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  // Delete request\r\n  const handleDeleteRequest = requestId => {\r\n    dispatch(deleteRequest(requestId));\r\n    dispatch(setAmountOfRequests(amountOfRequests => amountOfRequests -= 1));\r\n    history.push(\"/requests/fetch\");\r\n  }\r\n\r\n  const { _id, buyer, plant, message, reply } = request;\r\n  if (!buyer || !plant) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading request... </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Your request </h2>\r\n        <h4> for: {plant.name} </h4>\r\n        <h5> by: {buyer.username} </h5>\r\n        <p> {message} </p>\r\n        {\r\n          reply && (\r\n            <div>\r\n              <h5> Your reply: </h5>\r\n              <p> {reply} </p>\r\n            </div>\r\n          )\r\n        }\r\n        <div>\r\n          {!reply && (<Link to={`/requests/update/${_id}`}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Reply </button> </Link>)}\r\n          <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={() => handleDeleteRequest(_id)}> Delete </button>\r\n        </div>\r\n        <Link to={\"/requests/fetch\"} onClick={scroll.scrollToTop}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestDetails;","import React, { useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { setRequest, updateRequest } from \"../Reducer/jungleSwapSlice\";\r\n\r\nconst UpdateRequestForm = () => {\r\n  const request = useSelector(state => state.jungleSwap.request);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  // Scroll to top as soon as page loads\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n\r\n  // Create reply\r\n  const handleCreateReply = ({ target }, request) => {\r\n    const cloneRequest = JSON.parse(JSON.stringify(request));\r\n    cloneRequest.reply = target.value;\r\n    dispatch(setRequest(cloneRequest));\r\n  }\r\n\r\n  // Update request\r\n  const handleUpdateRequest = ({ _id, buyer, seller, plant, message, reply }) => {\r\n    const updatedRequest = {\r\n      buyer,\r\n      seller,\r\n      plant,\r\n      message,\r\n      reply\r\n    };\r\n    dispatch(updateRequest(_id, updatedRequest));\r\n    history.push(`/requests/read/${_id}`);\r\n  }\r\n\r\n  const { _id, message } = request;\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mt-5 mb-4\"> Reply your request </h2>\r\n        <div className=\"card cardSmallWidth mb-5\">\r\n          <div className=\"card-body\">\r\n            <p> {message} </p>\r\n            <textarea className=\"mb-4\" name=\"reply\" cols=\"31\" rows=\"6\" placeholder=\"Your reply\" onChange={event => handleCreateReply(event, request)} />\r\n            <div className=\"row justify-content-around\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" onClick={() => handleUpdateRequest(request)}> Submit </button>\r\n              <Link to={`/requests/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateRequestForm;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"notFound\">\r\n      <div>\r\n        <h2>\r\n          Oh-oh! <br /> <br />\r\n          We think you got lost in the jungle!\r\n        </h2>\r\n        <h3> 404 Not Found </h3>\r\n        <Link to={\"/\"}> <button className=\"btn btn-sm ml-2\"> Take me home </button> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React, { useEffect } from \"react\";\r\n\r\nconst KommunicateChat = () => {\r\n  // Create launcher icon as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      (\r\n        (d, m) => {\r\n          const kommunicateSettings = {\r\n            \"appId\": \"10b22c52854a305b79bbdecc356bea5\",\r\n            \"popupWidget\": true,\r\n            \"automaticChatOpenOnNavigation\": true\r\n          };\r\n          const s = document.createElement(\"script\");\r\n          s.type = \"text/javascript\";\r\n          s.async = true;\r\n          s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n          const h = document.getElementsByTagName(\"head\")[0];\r\n          h.appendChild(s);\r\n          window.kommunicate = m;\r\n          m._globals = kommunicateSettings;\r\n        }\r\n      )\r\n        (\r\n          document,\r\n          window.kommunicate || {}\r\n        );\r\n    },\r\n    []\r\n  );\r\n\r\n  return (<div />);\r\n}\r\n\r\nexport default KommunicateChat;","import React from \"react\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.min.css\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./components/Home\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport LogOut from \"./components/LogOut\";\r\nimport CreatePlantForm from \"./components/CreatePlantForm\";\r\nimport PlantDetails from \"./components/PlantDetails\";\r\nimport UpdatePlantForm from \"./components/UpdatePlantForm\";\r\nimport CheckoutPage from \"./components/CheckoutPage\";\r\nimport RequestsPage from \"./components/RequestsPage\";\r\nimport CreateRequestForm from \"./components/CreateRequestForm\";\r\nimport RequestDetails from \"./components/RequestDetails\";\r\nimport UpdateRequestForm from \"./components/UpdateRequestForm\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport KommunicateChat from \"./components/Chat\";\r\n\r\nconst App = () => {\r\n  const isFetchingUser = useSelector(state => state.jungleSwap.isFetchingUser);\r\n\r\n  if (isFetchingUser) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div class=\"main\">\r\n      <NavBar />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/plants/create\">\r\n          <CreatePlantForm />\r\n        </Route>\r\n        <Route path=\"/plants/read/:plantId\">\r\n          <PlantDetails />\r\n        </Route>\r\n        <Route path=\"/plants/update\">\r\n          <UpdatePlantForm />\r\n        </Route>\r\n        <Route path=\"/plants/checkout\">\r\n          <CheckoutPage />\r\n        </Route>\r\n\r\n        <Route path=\"/requests/fetch\">\r\n          <RequestsPage />\r\n        </Route>\r\n        <Route path=\"/requests/create\">\r\n          <CreateRequestForm />\r\n        </Route>\r\n        <Route path=\"/requests/read/:requestId\">\r\n          <RequestDetails />\r\n        </Route>\r\n        <Route path=\"/requests/update\">\r\n          <UpdateRequestForm />\r\n        </Route>\r\n\r\n        <Route path=\"/signup\">\r\n          <SignUp />\r\n        </Route>\r\n        <Route path=\"/signin\">\r\n          <SignIn />\r\n        </Route>\r\n        <Route path=\"/logout\">\r\n          <LogOut />\r\n        </Route>\r\n\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n      <KommunicateChat />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport jungleSwapSlice from \"./Reducer/jungleSwapSlice\";\r\n\r\nexport const store = configureStore({ reducer: {jungleSwap: jungleSwapSlice} });","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from \"./store\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}