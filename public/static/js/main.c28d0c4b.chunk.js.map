{"version":3,"sources":["config.js","components/NavBar.js","components/Footer.js","images/JungleSwap_Home.png","images/JungleSwap_Icon.png","components/Home.js","components/SignUp.js","components/SignIn.js","components/LogOut.js","components/CreatePlantForm.js","components/PlantDetails.js","components/UpdatePlantForm.js","components/CheckoutForm.js","components/CheckoutPage.js","components/RequestsPage.js","components/CreateRequestForm.js","components/RequestDetails.js","components/UpdateRequestForm.js","components/NotFound.js","components/Chat.js","App.js","index.js"],"names":["process","NavBar","user","isNewRequest","headerHeight","aboutHeight","Navbar","className","variant","expand","fixed","Brand","to","onClick","scroll","scrollToTop","Toggle","aria-controls","Collapse","id","Nav","scrollTo","title","username","Footer","href","Home","plants","query","onSearchPlant","onGetElementsHeight","useEffect","src","image","alt","icon","type","placeholder","value","onChange","map","plant","_id","name","price","class","role","SignUp","error","onSignUp","onClearError","onClearNewRequest","onSubmit","htmlFor","formnovalidate","SignIn","onSignIn","LogOut","onLogOut","CreatePlantForm","onCreatePlant","min","PlantDetails","onReadPlant","onDeletePlant","plantId","useParams","description","size","imagePublicId","location","creator","pathname","UpdatePlantForm","onImageChange","onPlantEntryChange","onUpdatePlant","event","CheckoutForm","onCheckout","useState","isSucceeded","setIsSucceeded","isProcessing","setIsProcessing","isDisabled","setIsDisabled","clientSecret","setClientSecret","setError","stripe","useStripe","elements","useElements","window","fetch","config","method","headers","body","JSON","stringify","then","res","json","data","handleChange","a","empty","message","handleSubmitPayment","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","payload","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","disabled","promise","loadStripe","CheckoutPage","useLocation","RequestsPage","requests","amountOfRequests","onFetchAllRequests","handleResetAll","request","buyer","seller","CreateRequestForm","onCreateRequest","cols","rows","RequestDetails","onReadRequest","onDeleteRequest","requestId","reply","UpdateRequestForm","onCreateReply","onUpdateRequest","NotFound","KommunicateChat","d","m","s","document","createElement","async","getElementsByTagName","appendChild","kommunicate","_globals","withRouter","isFetchingUser","setIsFetchingUser","loggedInUser","setLoggedInUser","isUserChange","setIsUserChange","setPlants","setQuery","setPlant","setRequests","setRequest","setAmountOfRequests","setIsNewRequest","intervalId","setIntervalId","minutesCounter","setMinutesCounter","setHeaderHeight","setAboutHeight","history","useHistory","rootPath","handleClearError","handleFetchAllPlants","axios","get","response","catch","err","console","log","withCredentials","clearInterval","filter","currentRequest","length","setInterval","currentAmountOfRequests","handleClearNewRequest","handleLogOut","post","push","exact","path","target","Math","round","querySelector","getBoundingClientRect","height","plantImage","files","uploadForm","FormData","append","newPlant","destroyImageData","delete","clonePlant","parse","itemNumber","updatedPlant","patch","singlePlant","newRequest","cloneRequest","updatedRequest","singleRequest","email","password","newUser","toLowerCase","component","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c28d0c4b.chunk.js","sourcesContent":["export default {API_URL: process.env.REACT_APP_SERVER_URL};","import React from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst NavBar = ({ user, isNewRequest, headerHeight, aboutHeight }) => {\r\n  return (\r\n    <div>\r\n      <Navbar className=\"pl-5\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n        <Navbar.Brand> <Link to=\"/\" onClick={scroll.scrollToTop}> JungleSwap </Link> </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <div>\r\n              <Link to=\"/\" className=\"p-2\" onClick={() => scroll.scrollTo(headerHeight + aboutHeight)}> All Plants </Link>\r\n            </div>\r\n            {\r\n              user && (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/plants/create\"> Create Plant </Link>\r\n                  <Link className={isNewRequest ? \"p-2 alertColor\" : \"p-2\"} to=\"/requests/fetch\" title={isNewRequest ? \"new message\" : null}> Messages </Link>\r\n                </div>\r\n              )\r\n            }\r\n            {\r\n              user ? (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/logout\" title={user.username}> Log out </Link>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/signin\"> Sign in </Link>\r\n                  <Link className=\"p-2\" to=\"/signup\"> Sign up </Link>\r\n                </div>\r\n              )\r\n            }\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-row\">\r\n      <footer>\r\n        © 2021\r\n        <Link href=\"https://www.linkedin.com/in/christian-gerbig/\"> Christian Gerbig </Link>\r\n        &\r\n        <Link href=\"https://www.linkedin.com/in/lisa-montebaur/\"> Lisa Montebaur </Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/JungleSwap_Home.c4ed9b4c.png\";","export default __webpack_public_path__ + \"static/media/JungleSwap_Icon.a6c7c44a.png\";","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport image from \"../images/JungleSwap_Home.png\";\r\nimport icon from \"../images/JungleSwap_Icon.png\";\r\n\r\nconst Home = ({ plants, query, headerHeight, onSearchPlant, onGetElementsHeight }) => {\r\n  // Get height of header and about elements as soon as page loads\r\n  useEffect(\r\n    () => onGetElementsHeight(),\r\n    []\r\n  );\r\n\r\n  if (!plants) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <header className=\"text-center pt-5 pb-5 headerImg\" id=\"titleId\">\r\n        <div className=\"row my-5\">\r\n          <div className=\"col-6 offset-3 my-5 borderAround\">\r\n            <h2 className=\"title mb-2\"> JungleSwap </h2>\r\n            <h5 className=\"mt-3 mb-5\"> Share your green heart </h5>\r\n            <div className=\"mb-5\">\r\n              <Link className=\"biggerFontSize\" onClick={() => scroll.scrollTo(headerHeight)}> Try it! </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <section id=\"aboutId\">\r\n        <div className=\"about centered container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 col-md-5 col-lg-6\">\r\n              <img className=\"image\" src={image} alt=\"plants\" />\r\n            </div>\r\n            <br />\r\n            <div className=\"about col-sm-6 col-md-5 col-lg-6 px-5 noOverflow\">\r\n              <h4> Welcome to JungleSwap! </h4>\r\n              <h5> Add green to your Home </h5>\r\n              <p> It\"s easy-peasy. <br />\r\n                Share your plant offshoots. <br />\r\n                Make money! <br />\r\n                Or swap them for another plant. <br />\r\n                Don\"t have any baby plants? <br />\r\n                You can simply shop and give a plant a new home.\r\n              </p>\r\n              <img className=\"icon\" src={icon} alt=\"icon\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section>\r\n        <div className=\"container mt-5\">\r\n          <div className=\"mt-5 mb-3\">\r\n            <h2> Plants </h2>\r\n            <hr />\r\n            <h4> Search a plant </h4>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <input className=\"smallWidth form-control\" type=\"text\" placeholder=\"Search...\" value={query} onChange={onSearchPlant} />\r\n          </div>\r\n          <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n            {\r\n              plants.map(\r\n                plant => {\r\n                  const { _id, name, image, price } = plant;\r\n                  return (\r\n                    <div className=\"col mb-5\" key={_id}>\r\n                      <div className=\"card card-medium-width text-center h-100\">\r\n                        <img className=\"card-img-top mediumPicSize\" src={image} alt={name} />\r\n                        <div className=\"card-body mb-5\">\r\n                          <h5> {name} </h5>\r\n                          <p> {price} € </p>\r\n                          <Link className=\"btn btn-outline-dark\" to={`/plants/read/${_id}`}> Details </Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst SignUp = ({ error, onSignUp, onClearError, onClearNewRequest }) => {\r\n  // Clear values and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      onClearNewRequest();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Sign Up </h2>\r\n        <form onSubmit={onSignUp}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputUsername\"> Username </label>\r\n            <input type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputEmail\"> Email address </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputPassword\"> Password </label>\r\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\" />\r\n          </div>\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\" formnovalidate=\"formnovalidate\"> Sign up </button>\r\n          <p className=\"padding\"> Already have an account? </p>\r\n          <Link to={\"/signin\"}> Sign in </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import React, { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst SignIn = ({ error, onSignIn, onClearError, onClearNewRequest }) => {\r\n  // Clear values and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      onClearNewRequest();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5 custom fullscreen\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Sign In </h2>\r\n        <form onSubmit={onSignIn}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputEmail\"> Email address </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\" />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputPassword\"> Password </label>\r\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\" />\r\n          </div>\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\" formnovalidate=\"formnovalidate\"> Sign in </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React, { useEffect } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst LogOut = ({ onLogOut, onClearNewRequest }) => {\r\n  // Log out and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      onLogOut();\r\n      onClearNewRequest();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (<div />);\r\n}\r\n\r\nexport default LogOut;","import React, { useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst CreatePlantForm = ({ user, headerHeight, aboutHeight, error, onCreatePlant, onClearError }) => {\r\n  // Scroll to top as soon as page loads and scroll to plants section during cleanup\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      scroll.scrollToTop();\r\n      return () => scroll.scrollTo(headerHeight + aboutHeight);\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={\"/signup\"} />);\r\n\r\n  return (\r\n    <div className=\"container row mt-5 fullscreen\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-6\">\r\n        <h2 className=\"mb-5\"> Create a plant </h2>\r\n        <form onSubmit={onCreatePlant}>\r\n          <input className=\"mb-4\" name=\"name\" type=\"text\" placeholder=\"Enter name\" />\r\n          <input className=\"mb-4\" name=\"description\" type=\"text\" placeholder=\"Enter description\" />\r\n          <input className=\"mb-4 smallWidth\" name=\"size\" type=\"number\" min=\"1\" placeholder=\"Size\" /> cm <br />\r\n          <select className=\"mb-4 p-1\" name=\"location\" type=\"text\">\r\n            <option> Select location </option>\r\n            <option value=\"sun\"> sun </option>\r\n            <option value=\"shade\"> shade </option>\r\n            <option value=\"sun and shade\"> sun and shade </option>\r\n          </select>\r\n          <br />\r\n          <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" placeholder=\"Price\" /> € <br />\r\n          <input className=\"mb-4\" name=\"plantImage\" type=\"file\" />\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <div className=\"col-12\">\r\n            <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\" > Create </button>\r\n            <Link to={\"/\"}> <button className=\"btn btn-sm mx-5\"> Go back </button> </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePlantForm;","import React, { useEffect } from \"react\";\r\nimport { Link, Redirect, useParams } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst PlantDetails = ({ user, plant, headerHeight, aboutHeight, onReadPlant, onDeletePlant }) => {\r\n  const { plantId } = useParams();\r\n  // Read plant data and scroll to top as soon as page loads  \r\n  useEffect(\r\n    () => {\r\n      onReadPlant(plantId);\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={\"/signup\"} />);\r\n\r\n  const { _id, name, description, size, image, imagePublicId, location, price, creator } = plant;\r\n  if (!creator) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container mt-5 row row-md-10 offset-md-4\">\r\n      <div className=\"mt-4 mb-3 pt-4 container\">\r\n        <h2> Plant details </h2>\r\n      </div>\r\n      <div className=\"col\">\r\n        <div className=\"card cardMediumWidth\">\r\n          {image && (<img className=\"card-img-top mediumPicSize\" src={image} alt={name} />)}\r\n          <div className=\"ml-2 mt-2\"> <span> Name: </span> {name} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Description: </span> {description} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Size: </span> {size} cm </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Likes: </span> {location} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Price: </span> {price} € </div>\r\n          <div className=\"ml-2 mt-2 col justify-content-center\">\r\n            <div className=\"row-2 justify-content-center\">\r\n              <div className=\"card-body\">\r\n                {\r\n                  user._id === creator._id ? (\r\n                    <div>\r\n                      <Link to={\"/plants/update\"}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Update </button> </Link>\r\n                      <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={() => onDeletePlant(_id, imagePublicId)}> Delete </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <Link to={{ pathname: \"/plants/checkout\", plant: plant }}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Buy </button> </Link>\r\n                      <Link to={{ pathname: \"/requests/create\", plant: plant }}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Swap </button> </Link>\r\n                    </div>\r\n                  )\r\n                }\r\n                <Link to={\"/\"} onClick={() => scroll.scrollTo(headerHeight + aboutHeight)}> <button className=\"btn btn-sm ml-2\"> Go back </button> </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlantDetails;","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst UpdatePlantForm = ({ plant, onImageChange, onPlantEntryChange, onUpdatePlant }) => {\r\n  // Scroll to top as soon as page loads\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n\r\n  const { _id, name, description, size, image, price } = plant;\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mt-5 mb-4\"> Update your plant </h2>\r\n        <div className=\"card cardSmallWidth mb-5\">\r\n          <img className=\"mb-2 smallPicSize\" src={image} alt={name} />\r\n          <div className=\"card-body\">\r\n            <input className=\"mb-2\" onChange={event => onImageChange(event, plant)} type=\"file\" />\r\n            <input className=\"mb-2\" type=\"text\" onChange={event => onPlantEntryChange(event, 0)} value={name} />\r\n            <input className=\"mb-2\" type=\"text\" onChange={event => onPlantEntryChange(event, 1)} value={description} />\r\n            <input className=\"mb-2 smallWidth\" type=\"number\" onChange={event => onPlantEntryChange(event, 2)} value={size} /> cm <br />\r\n            <select className=\"mb-2\" onChange={event => onPlantEntryChange(event, 3)} name=\"location\" type=\"text\" placeholder=\"Select\">\r\n              <option value=\"sun\"> sun </option>\r\n              <option value=\"shade\"> shade </option>\r\n              <option value=\"sun and shade\"> sun and shade </option>\r\n            </select> <br />\r\n            <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" onChange={event => onPlantEntryChange(event, 4)} value={price} /> €\r\n            <div className=\"row justify-content-around\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" onClick={() => onUpdatePlant(plant)}> Save changes </button>\r\n              <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePlantForm;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport config from \"../config\";\r\n\r\nconst CheckoutForm = ({ plant, headerHeight, aboutHeight, onCheckout }) => {\r\n  const [isSucceeded, setIsSucceeded] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n\r\n  // Create PaymentIntent as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      window\r\n        .fetch(\r\n          `${config.API_URL}/api/create-payment-intent`,\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ price: plant.price })\r\n          }\r\n        )\r\n        .then(\r\n          res => res.json()\r\n        )\r\n        .then(\r\n          data => setClientSecret(data.clientSecret)\r\n        );\r\n      return () => scroll.scrollTo(headerHeight + aboutHeight);\r\n    },\r\n    []\r\n  );\r\n\r\n  // Card styling\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": { color: \"#32325d\" }\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Listen for changes in Card element and display any errors as customer types card details\r\n  const handleChange = async event => {\r\n    setIsDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  // Handle payment\r\n  const handleSubmitPayment = async event => {\r\n    event.preventDefault();\r\n    setIsProcessing(true);\r\n    const payload = await stripe.confirmCardPayment(\r\n      clientSecret,\r\n      { payment_method: { card: elements.getElement(CardElement) } }\r\n    );\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setIsProcessing(false);\r\n    }\r\n    else {\r\n      setError(null);\r\n      setIsProcessing(false);\r\n      setIsSucceeded(true);\r\n    }\r\n  }\r\n\r\n  const { _id, name, price } = plant;\r\n  return (\r\n    <div className=\"container col-9\">\r\n      <form className=\"checkoutForm mt-5\" id=\"payment-form\" onSubmit={handleSubmitPayment}>\r\n        <h2 className=\"text-center mb-2 p-2\"> {name} </h2>\r\n        <h3 className=\"text-center mb-4 p-2\"> {price} € </h3>\r\n        <CardElement\r\n          className=\"p-2\"\r\n          id=\"card-element\"\r\n          options={cardStyle}\r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"row justify-content-center\">\r\n          <button onClick={onCheckout} className=\"btn btn-sm mt-5 mb-4\" disabled={isProcessing || isDisabled || isSucceeded} id=\"submit\">\r\n            <span id=\"button-text\">\r\n              {isProcessing ? <div className=\"spinner\" id=\"spinner\" /> : \"Pay now\"}\r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* Show any error that happens when processing the payment */\r\n          error && (<div className=\"card-error\" role=\"alert\"> {error} </div>)\r\n        /* Show success message upon completion */}\r\n        <p className={isSucceeded ? \"result-message text-center\" : \"result-message hidden text-center\"}>\r\n          Payment succeeded.\r\n        </p>\r\n      </form>\r\n      <div className=\"row justify-content-center\">\r\n        {\r\n          isSucceeded ? (\r\n            <Link to={\"/\"}> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n          )\r\n            : (\r\n              <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n            )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutForm;","import React, { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\n\r\nconst promise = loadStripe(\"pk_test_51IQBsPA6EAM4YnfDyrjHWnLHzZ5KkI9tsERzYhBGVoctZBrFUb4Sda035HvcQKpp7thFiqW6QmO8ytPbOAMTg33z00cHvcbojv\");\r\n\r\nconst CheckoutPage = ({ headerHeight, aboutHeight, onCheckout }) => {\r\n  const location = useLocation();\r\n  // Scroll to top as soon as page loads\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n\r\n  const { plant } = location;\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-6 offset-1 offset-md-5 App\">\r\n        <Elements stripe={promise}>\r\n          <CheckoutForm\r\n            onCheckout={onCheckout}\r\n            plant={plant}\r\n            headerHeight={headerHeight}\r\n            aboutHeight={aboutHeight}\r\n          />\r\n        </Elements>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;","import React, { useEffect } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst RequestsPage = ({ user, requests, amountOfRequests, onFetchAllRequests, onClearNewRequest }) => {\r\n  // Fetch all requests and reset values as soon as page loads and reset values during cleanup\r\n  useEffect(\r\n    () => {\r\n      const handleResetAll = () => {\r\n        onClearNewRequest();\r\n        scroll.scrollToTop();\r\n      }\r\n\r\n      onFetchAllRequests();\r\n      handleResetAll();\r\n      return () => handleResetAll()\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={\"/signup\"} />);\r\n\r\n  if (!requests) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 > Your messages </h2>\r\n        <h3 className=\"mb-4\"> [{amountOfRequests}] </h3>\r\n        <Link to={\"/\"}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n        {\r\n          requests.map(\r\n            request => {\r\n              const { _id, buyer, seller, plant } = request;\r\n              return (\r\n                seller._id === user._id && (\r\n                  <div className=\"card p-3 mt-4 \" key={_id}>\r\n                    <h4> Request for: {plant.name} </h4>\r\n                    <h5> by: {buyer.username} </h5>\r\n                    <div>\r\n                      <Link className=\"btn btn-outline-dark\" to={`/requests/read/${_id}`}> Details </Link>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              );\r\n            }\r\n          )\r\n        }\r\n        {amountOfRequests !== 0 && (<Link to={\"/\"}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestsPage;","import React, { useEffect } from \"react\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst CreateRequestForm = ({ error, onCreateRequest, onClearError }) => {\r\n  const location = useLocation();\r\n  // Scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  const { plant } = location;\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-4\"> Your mesage </h2>\r\n        <h3 className=\"mb-4\"> {plant.name} </h3>\r\n        <form onSubmit={(event) => onCreateRequest(event, plant)}>\r\n          <div>\r\n            <textarea className=\"mb-4\" name=\"message\" cols=\"35\" rows=\"7\" />\r\n          </div>\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\"> Send </button>\r\n          <Link to={`/plants/read/${plant._id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateRequestForm;","import React, { useEffect } from \"react\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst RequestDetails = ({ request, onReadRequest, onDeleteRequest }) => {\r\n  const { requestId } = useParams();\r\n  // Read request and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      onReadRequest(requestId);\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  const { _id, buyer, plant, message, reply } = request;\r\n  if (!buyer || !plant) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Your request </h2>\r\n        <h4> for: {plant.name} </h4>\r\n        <h5> by: {buyer.username} </h5>\r\n        <p> {message} </p>\r\n        {\r\n          reply && (\r\n            <div>\r\n              <h5> Your reply: </h5>\r\n              <p> {reply} </p>\r\n            </div>\r\n          )\r\n        }\r\n        <div>\r\n          {!reply && (<Link to={`/requests/update/${_id}`}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Reply </button> </Link>)}\r\n          <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={() => onDeleteRequest(_id)}> Delete </button>\r\n        </div>\r\n        <Link to={\"/requests/fetch\"} onClick={scroll.scrollToTop}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestDetails;","import React, { useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst UpdateRequestForm = ({ request, onCreateReply, onUpdateRequest }) => {\r\n  // Scroll to top as soon as page loads\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n\r\n  const { _id, message } = request;\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mt-5 mb-4\"> Reply your request </h2>\r\n        <div className=\"card cardSmallWidth mb-5\">\r\n          <div className=\"card-body\">\r\n            <p> {message} </p>\r\n            <textarea className=\"mb-4\" name=\"reply\" cols=\"31\" rows=\"6\" placeholder=\"Your reply\" onChange={onCreateReply} />\r\n            <div className=\"row justify-content-around\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" onClick={() => onUpdateRequest(request)}> Submit </button>\r\n              <Link to={`/requests/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateRequestForm;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"notFound\">\r\n      <div>\r\n        <h2>\r\n          Oh-oh! <br /> <br />\r\n          We think you got lost in the jungle!\r\n        </h2>\r\n        <h3> 404 Not Found </h3>\r\n        <Link to={\"/\"}> <button className=\"btn btn-sm ml-2\"> Take me home </button> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React, { useEffect } from \"react\";\r\n\r\nconst KommunicateChat = () => {\r\n  // Create launcher icon as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      (\r\n        (d, m) => {\r\n          const kommunicateSettings = {\r\n            \"appId\": \"10b22c52854a305b79bbdecc356bea5\",\r\n            \"popupWidget\": true,\r\n            \"automaticChatOpenOnNavigation\": true\r\n          };\r\n          const s = document.createElement(\"script\");\r\n          s.type = \"text/javascript\";\r\n          s.async = true;\r\n          s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n          const h = document.getElementsByTagName(\"head\")[0];\r\n          h.appendChild(s);\r\n          window.kommunicate = m;\r\n          m._globals = kommunicateSettings;\r\n        }\r\n      )\r\n        (\r\n          document,\r\n          window.kommunicate || {}\r\n        );\r\n    },\r\n    []\r\n  );\r\n\r\n  return (<div />);\r\n}\r\n\r\nexport default KommunicateChat;","import React, { useState, useEffect } from \"react\";\r\nimport { Route, Switch, withRouter, useHistory } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport config from \"./config\";\r\nimport axios from \"axios\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.min.css\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./components/Home\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport LogOut from \"./components/LogOut\";\r\nimport CreatePlantForm from \"./components/CreatePlantForm\";\r\nimport PlantDetails from \"./components/PlantDetails\";\r\nimport UpdatePlantForm from \"./components/UpdatePlantForm\";\r\nimport CheckoutPage from \"./components/CheckoutPage\";\r\nimport RequestsPage from \"./components/RequestsPage\";\r\nimport CreateRequestForm from \"./components/CreateRequestForm\";\r\nimport RequestDetails from \"./components/RequestDetails\";\r\nimport UpdateRequestForm from \"./components/UpdateRequestForm\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport KommunicateChat from \"./components/Chat\";\r\n\r\nconst App = () => {\r\n  const [isFetchingUser, setIsFetchingUser] = useState(true);\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const [isUserChange, setIsUserChange] = useState(false);\r\n  const [plants, setPlants] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [plant, setPlant] = useState({});\r\n  const [requests, setRequests] = useState([]);\r\n  const [request, setRequest] = useState({});\r\n  const [amountOfRequests, setAmountOfRequests] = useState(0);\r\n  const [isNewRequest, setIsNewRequest] = useState(false);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [minutesCounter, setMinutesCounter] = useState(0);\r\n  const [headerHeight, setHeaderHeight] = useState(0);\r\n  const [aboutHeight, setAboutHeight] = useState(0);\r\n  const [error, setError] = useState(null);\r\n\r\n  const history = useHistory();\r\n  const rootPath = `${config.API_URL}/api`;\r\n\r\n  // Get height of header and about elements\r\n  const handleGetElementsHeight = () => {\r\n    setHeaderHeight(Math.round(document.querySelector(\"#titleId\").getBoundingClientRect().height));\r\n    setAboutHeight(Math.round(document.querySelector(\"#aboutId\").getBoundingClientRect().height));\r\n  }\r\n\r\n  // Clear error message\r\n  const handleClearError = () => setError(null)\r\n\r\n  // ---------- Plants ----------\r\n\r\n  // Fetch all plants\r\n  const handleFetchAllPlants = () => {\r\n    axios.get(`${rootPath}/plants/fetch`)\r\n      .then(\r\n        response => setPlants(response.data)\r\n      )\r\n      .catch(\r\n        err => console.log(\"Fetching plants failed\", err)\r\n      );\r\n  }\r\n\r\n  // Load plants and user data as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      handleFetchAllPlants();\r\n      if (!loggedInUser) {\r\n        axios.get(`${rootPath}/user`, { withCredentials: true })\r\n          .then(\r\n            response => {\r\n              setLoggedInUser(response.data);\r\n              setIsFetchingUser(false);\r\n            }\r\n          )\r\n          .catch(\r\n            err => {\r\n              setIsFetchingUser(false);\r\n              console.log(\"Initializing fetching failed\", err);\r\n            }\r\n          );\r\n      }\r\n      return () => intervalId && clearInterval(intervalId);\r\n    },\r\n    []\r\n  );\r\n\r\n  // Search plant\r\n  const handleSearchPlant = event => setQuery(event.target.value)\r\n\r\n  // Handle plant search result\r\n  useEffect(\r\n    () => {\r\n      // Fetch query plants\r\n      const handleFetchQueryPlants = () => {\r\n        axios.get(`${rootPath}/plants/search?q=${query}`)\r\n          .then(\r\n            response => setPlants(response.data)\r\n          )\r\n          .catch(\r\n            err => console.log(\"Query fetching failed\", err)\r\n          );\r\n      }\r\n      query ? handleFetchQueryPlants() : handleFetchAllPlants()\r\n    },\r\n    [query]\r\n  );\r\n\r\n  // Create plant\r\n  const handleCreatePlant = event => {\r\n    event.preventDefault();\r\n    const { name, description, size, plantImage, location, price } = event.target;\r\n    const image = plantImage.files[0];\r\n    const uploadForm = new FormData();\r\n    uploadForm.append(\"image\", image);\r\n    axios.post(`${rootPath}/upload`, uploadForm)\r\n      .then(\r\n        response => {\r\n          const { image, imagePublicId } = response.data;\r\n          const newPlant = {\r\n            name: name.value,\r\n            description: description.value,\r\n            size: size.value,\r\n            image,\r\n            imagePublicId,\r\n            location: location.value,\r\n            price: price.value\r\n          };\r\n          axios.post(\r\n            `${rootPath}/plants/create`,\r\n            newPlant,\r\n            { withCredentials: true }\r\n          )\r\n            .then(\r\n              response => {\r\n                setPlants([response.data, ...plants]);\r\n                history.push(\"/\");\r\n              }\r\n            )\r\n            .catch(\r\n              err => setError(err.response.data.error)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        err => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Read plant\r\n  const handleReadPlant = plantId => {\r\n    axios.get(\r\n      `${rootPath}/plants/read/${plantId}`,\r\n      { withCredentials: true }\r\n    )\r\n      .then(\r\n        response => setPlant(response.data)\r\n      )\r\n      .catch(\r\n        () => console.log(\"Read plant failed\")\r\n      );\r\n  }\r\n\r\n  // Plant values changed\r\n  const handlePlantEntryChange = ({ target }, itemNumber) => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    // eslint-disable-next-line default-case\r\n    switch (itemNumber) {\r\n      case 0:\r\n        clonePlant.name = target.value;\r\n        break;\r\n      case 1:\r\n        clonePlant.description = target.value;\r\n        break;\r\n      case 2:\r\n        clonePlant.size = target.value;\r\n        break;\r\n      case 3:\r\n        clonePlant.location = target.value;\r\n        break;\r\n      case 4:\r\n        clonePlant.price = target.value;\r\n    }\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant image changed\r\n  const handleImageChange = ({ target }, plant) => {\r\n    const image = target.files[0];\r\n    const { imagePublicId } = plant;\r\n    const destroyImageData = {\r\n      imagePublicId\r\n    }\r\n    axios.post(\r\n      `${rootPath}/destroy`,\r\n      destroyImageData\r\n    )\r\n      .then(\r\n        () => {\r\n          const uploadForm = new FormData();\r\n          uploadForm.append(\"image\", image);\r\n          axios.post(\r\n            `${rootPath}/upload`,\r\n            uploadForm\r\n          )\r\n            .then(\r\n              response => {\r\n                const clonePlant = JSON.parse(JSON.stringify(plant));\r\n                const { imagePublicId, image } = response.data;\r\n                clonePlant.imagePublicId = imagePublicId;\r\n                clonePlant.image = image;\r\n                setPlant(clonePlant);\r\n              }\r\n            )\r\n            .catch(\r\n              err => console.log(\"Image upload failed\", err)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Delete old image failed\", err)\r\n      );\r\n  }\r\n\r\n  // Update plant\r\n  const handleUpdatePlant = ({ _id, name, description, size, image, imagePublicId, location, price }) => {\r\n    const updatedPlant = {\r\n      name,\r\n      description,\r\n      size,\r\n      image,\r\n      imagePublicId,\r\n      location,\r\n      price\r\n    };\r\n    axios.patch(\r\n      `${rootPath}/plants/update/${_id}`,\r\n      updatedPlant\r\n    )\r\n      .then(\r\n        () => {\r\n          setPlants(\r\n            plants.map(\r\n              singlePlant => {\r\n                if (singlePlant._id === _id) {\r\n                  singlePlant.name = name;\r\n                  singlePlant.description = description;\r\n                  singlePlant.size = size;\r\n                  singlePlant.image = image;\r\n                  singlePlant.imagePublicId = imagePublicId;\r\n                  singlePlant.location = location;\r\n                  singlePlant.price = price;\r\n                }\r\n                return singlePlant;\r\n              }\r\n            )\r\n          );\r\n          history.push(\"/\");\r\n          scroll.scrollTo(headerHeight + aboutHeight);\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Update plant failed\", err)\r\n      );\r\n  }\r\n\r\n  // Delete Plant\r\n  const handleDeletePlant = (plantId, imagePublicId) => {\r\n    const destroyImageData = {\r\n      imagePublicId\r\n    }\r\n    axios.post(\r\n      `${rootPath}/destroy`,\r\n      destroyImageData\r\n    )\r\n      .then(\r\n        () => {\r\n          axios.delete(`${rootPath}/plants/delete/${plantId}`)\r\n            .then(\r\n              () => {\r\n                setPlants(plants.filter(plant => plant._id !== plantId));\r\n                history.push(\"/\");\r\n                scroll.scrollTo(headerHeight + aboutHeight);\r\n              }\r\n            )\r\n            .catch(\r\n              err => console.log(\"Delete plant failed\", err)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Delete image failed\", err)\r\n      );\r\n  }\r\n\r\n  // Plant payment\r\n  const handleCheckout = () => {\r\n    axios.post(\r\n      `${rootPath}/create-payment-intent`,\r\n      {},\r\n      { withCredentials: true }\r\n    )\r\n      .then(\r\n        () => history.push(\"/\")\r\n      )\r\n      .catch(\r\n        err => console.log(\"Checkout failed\", err)\r\n      );\r\n  }\r\n\r\n  // ---------- Requests ----------\r\n\r\n  // Start request check if user changes\r\n  useEffect(\r\n    () => {\r\n      if (isUserChange) {\r\n        setIsUserChange(false);\r\n        axios.get(`${rootPath}/requests/fetch`)\r\n          .then(\r\n            response => {\r\n              setRequests(response.data);\r\n              setAmountOfRequests(requests.filter(currentRequest => currentRequest.seller._id === loggedInUser._id).length);\r\n              setIntervalId(\r\n                setInterval(\r\n                  () => setMinutesCounter(minutesCounter => minutesCounter += 1),\r\n                  10000 // every minute\r\n                )\r\n              );\r\n            }\r\n          )\r\n          .catch(\r\n            err => console.log(\"Checking requests failed\", err)\r\n          );\r\n      }\r\n    },\r\n    [isUserChange]\r\n  );\r\n\r\n  // Check new requests for logged in user every minute\r\n  useEffect(\r\n    () => {\r\n      axios.get(`${rootPath}/requests/fetch`)\r\n        .then(\r\n          response => {\r\n            setRequests(response.data);\r\n            const currentAmountOfRequests = requests.filter(currentRequest => currentRequest.seller._id === loggedInUser._id).length;\r\n            if (amountOfRequests < currentAmountOfRequests) {\r\n              setAmountOfRequests(currentAmountOfRequests);\r\n              setIsNewRequest(true);\r\n            }\r\n          }\r\n        )\r\n        .catch(\r\n          err => console.log(\"Checking requests failed\", err)\r\n        );\r\n    },\r\n    [minutesCounter]\r\n  );\r\n\r\n  // Clear state for new received requests\r\n  const handleClearNewRequest = () => setIsNewRequest(false)\r\n\r\n  // Fetch all requests\r\n  const handleFetchAllRequests = () => {\r\n    axios.get(`${rootPath}/requests/fetch`)\r\n      .then(\r\n        response => setRequests(response.data)\r\n      )\r\n      .catch(\r\n        err => console.log(\"Fetching requests failed\", err)\r\n      );\r\n  }\r\n\r\n  // Create request\r\n  const handleCreateRequest = (event, { _id, creator }) => {\r\n    event.preventDefault();\r\n    const { message } = event.target;\r\n    const newRequest = {\r\n      seller: creator._id,\r\n      plant: _id,\r\n      message: message.value\r\n    };\r\n    axios.post(\r\n      `${rootPath}/requests/create`,\r\n      newRequest,\r\n      { withCredentials: true }\r\n    )\r\n      .then(\r\n        response => {\r\n          setRequests([response.data, ...requests]);\r\n          history.push(`/plants/read/${_id}`);\r\n        }\r\n      )\r\n      .catch(\r\n        err => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Read request\r\n  const handleReadRequest = requestId => {\r\n    axios.get(\r\n      `${rootPath}/requests/read/${requestId}`,\r\n      { withCredentials: true }\r\n    )\r\n      .then(\r\n        response => setRequest(response.data)\r\n      )\r\n      .catch(\r\n        () => console.log(\"Read request failed\")\r\n      );\r\n  }\r\n\r\n  // Create reply\r\n  const handleCreateReply = event => {\r\n    const cloneRequest = JSON.parse(JSON.stringify(request));\r\n    cloneRequest.reply = event.target.value;\r\n    setRequest(cloneRequest);\r\n  }\r\n\r\n  // Update request\r\n  const handleUpdateRequest = ({ _id, buyer, seller, plant, message, reply }) => {\r\n    const updatedRequest = {\r\n      buyer,\r\n      seller,\r\n      plant,\r\n      message,\r\n      reply\r\n    };\r\n    axios.patch(\r\n      `${rootPath}/requests/update/${_id}`,\r\n      updatedRequest\r\n    )\r\n      .then(\r\n        () => {\r\n          setRequests(\r\n            requests.map(\r\n              singleRequest => {\r\n                if (singleRequest._id === _id) {\r\n                  singleRequest.buyer = buyer;\r\n                  singleRequest.seller = seller;\r\n                  singleRequest.plant = plant;\r\n                  singleRequest.message = message;\r\n                  singleRequest.reply = reply;\r\n                }\r\n                return singleRequest;\r\n              }\r\n            )\r\n          );\r\n          history.push(`/requests/read/${_id}`);\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Update request failed\", err)\r\n      );\r\n  }\r\n\r\n  // Delete request\r\n  const handleDeleteRequest = requestId => {\r\n    axios.delete(`${rootPath}/requests/delete/${requestId}`)\r\n      .then(\r\n        () => {\r\n          setRequests(requests.filter(request => request._id !== requestId));\r\n          setAmountOfRequests(amountOfRequests => amountOfRequests -= 1);\r\n          history.push(\"/requests/fetch\");\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Delete request failed\", err)\r\n      );\r\n  }\r\n\r\n  // ---------- Authentification ----------\r\n\r\n  // Signup\r\n  const handleSignUp = event => {\r\n    event.preventDefault();\r\n    const { username, email, password } = event.target;\r\n    const newUser = {\r\n      username: username.value,\r\n      email: email.value.toLowerCase(),\r\n      password: password.value\r\n    };\r\n    axios.post(\r\n      `${rootPath}/signup`,\r\n      newUser\r\n    )\r\n      .then(\r\n        response => {\r\n          setLoggedInUser(response.data);\r\n          setIsUserChange(true);\r\n          history.push(\"/\");\r\n        }\r\n      )\r\n      .catch(\r\n        err => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Signin\r\n  const handleSignIn = event => {\r\n    event.preventDefault();\r\n    const { email, password } = event.target;\r\n    const user = {\r\n      email: email.value,\r\n      password: password.value\r\n    };\r\n    axios.post(\r\n      `${rootPath}/signin`,\r\n      user,\r\n      { withCredentials: true }\r\n    )\r\n      .then(\r\n        response => {\r\n          setLoggedInUser(response.data);\r\n          setIsUserChange(true);\r\n          history.push(\"/\");\r\n        }\r\n      )\r\n      .catch(\r\n        err => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Logout\r\n  const handleLogOut = () => {\r\n    axios.post(\r\n      `${rootPath}/logout`,\r\n      {},\r\n      { withCredentials: true }\r\n    )\r\n      .then(\r\n        () => {\r\n          setLoggedInUser(null);\r\n          clearInterval(intervalId);\r\n          history.push(\"/\");\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Logout failed\", err)\r\n      );\r\n  }\r\n\r\n  if (isFetchingUser) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div class=\"main\">\r\n      <NavBar\r\n        onLogOut={handleLogOut}\r\n        isNewRequest={isNewRequest}\r\n        user={loggedInUser}\r\n        headerHeight={headerHeight}\r\n        aboutHeight={aboutHeight}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home\r\n            onSearchPlant={handleSearchPlant}\r\n            onGetElementsHeight={handleGetElementsHeight}\r\n            plants={plants}\r\n            query={query}\r\n            headerHeight={headerHeight}\r\n          />\r\n        </Route>\r\n        <Route path=\"/plants/create\">\r\n          <CreatePlantForm\r\n            onCreatePlant={handleCreatePlant}\r\n            onClearError={handleClearError}\r\n            user={loggedInUser}\r\n            headerHeight={headerHeight}\r\n            aboutHeight={aboutHeight}\r\n            error={error}\r\n          />\r\n        </Route>\r\n        <Route path=\"/plants/read/:plantId\">\r\n          <PlantDetails\r\n            onReadPlant={handleReadPlant}\r\n            onDeletePlant={handleDeletePlant}\r\n            plant={plant}\r\n            user={loggedInUser}\r\n            headerHeight={headerHeight}\r\n            aboutHeight={aboutHeight}\r\n          />\r\n        </Route>\r\n        <Route path=\"/plants/update\">\r\n          <UpdatePlantForm\r\n            onImageChange={handleImageChange}\r\n            onPlantEntryChange={handlePlantEntryChange}\r\n            onUpdatePlant={handleUpdatePlant}\r\n            plant={plant}\r\n            headerHeight={headerHeight}\r\n            aboutHeight={aboutHeight}\r\n          />\r\n        </Route>\r\n        <Route path=\"/plants/checkout\">\r\n          <CheckoutPage\r\n            onCheckout={handleCheckout}\r\n            headerHeight={headerHeight}\r\n            aboutHeight={aboutHeight}\r\n          />\r\n        </Route>\r\n\r\n        <Route path=\"/requests/fetch\">\r\n          <RequestsPage\r\n            onFetchAllRequests={handleFetchAllRequests}\r\n            onClearNewRequest={handleClearNewRequest}\r\n            user={loggedInUser}\r\n            requests={requests}\r\n            amountOfRequests={amountOfRequests}\r\n          />\r\n        </Route>\r\n        <Route path=\"/requests/create\">\r\n          <CreateRequestForm\r\n            onCreateRequest={handleCreateRequest}\r\n            onClearError={handleClearError}\r\n            user={loggedInUser}\r\n            error={error}\r\n          />\r\n        </Route>\r\n        <Route path=\"/requests/read/:requestId\">\r\n          <RequestDetails\r\n            onReadRequest={handleReadRequest}\r\n            onDeleteRequest={handleDeleteRequest}\r\n            request={request}\r\n            user={loggedInUser}\r\n          />\r\n        </Route>\r\n        <Route path=\"/requests/update\">\r\n          <UpdateRequestForm\r\n            onCreateReply={handleCreateReply}\r\n            onUpdateRequest={handleUpdateRequest}\r\n            request={request}\r\n          />\r\n        </Route>\r\n\r\n        <Route path=\"/signup\">\r\n          <SignUp\r\n            onSignUp={handleSignUp}\r\n            onClearError={handleClearError}\r\n            onClearNewRequest={handleClearNewRequest}\r\n            error={error}\r\n          />\r\n        </Route>\r\n        <Route path=\"/signin\">\r\n          <SignIn\r\n            onSignIn={handleSignIn}\r\n            onClearError={handleClearError}\r\n            onClearNewRequest={handleClearNewRequest}\r\n            error={error}\r\n          />\r\n        </Route>\r\n        <Route path=\"/logout\">\r\n          <LogOut\r\n            onLogOut={handleLogOut}\r\n            onClearNewRequest={handleClearNewRequest}\r\n          />\r\n        </Route>\r\n\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n      <KommunicateChat />\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}