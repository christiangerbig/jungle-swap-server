{"version":3,"sources":["config.js","components/NavBar.js","components/Footer.js","images/JungleSwap_Home.png","images/JungleSwap_Icon.png","components/Home.js","components/SignUp.js","components/SignIn.js","components/LogOut.js","components/CreatePlantForm.js","components/PlantDetails.js","components/UpdatePlantForm.js","components/CheckoutForm.js","components/CheckoutPage.js","components/RequestsPage.js","components/CreateRequestForm.js","components/RequestDetails.js","components/UpdateRequestForm.js","components/NotFound.js","components/Chat.js","App.js","index.js"],"names":["process","NavBar","user","isNewRequest","headerHeight","aboutHeight","Navbar","className","variant","expand","fixed","Brand","to","onClick","scroll","scrollToTop","Toggle","aria-controls","Collapse","id","Nav","scrollTo","title","username","Footer","href","Home","plants","query","onSearchPlant","onGetElementsHeight","useEffect","src","image","alt","icon","type","placeholder","value","onChange","map","plant","_id","name","price","class","role","SignUp","error","onSignUp","onClearError","onClearNewRequest","onSubmit","htmlFor","formnovalidate","SignIn","onSignIn","LogOut","onLogOut","CreatePlantForm","onCreatePlant","min","PlantDetails","onReadPlant","onDeletePlant","plantId","useParams","description","size","imagePublicId","location","creator","pathname","UpdatePlantForm","onNameChange","onDescriptionChange","onSizeChange","onPriceChange","onLocationChange","onImageChange","onUpdatePlant","CheckoutForm","onCheckout","useState","isSucceeded","setIsSucceeded","isProcessing","setIsProcessing","isDisabled","setIsDisabled","clientSecret","setClientSecret","setError","stripe","useStripe","elements","useElements","window","fetch","config","method","headers","body","JSON","stringify","then","res","json","data","handleChange","event","a","empty","message","handleSubmitPayment","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","payload","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","disabled","promise","loadStripe","CheckoutPage","useLocation","RequestsPage","requests","amountOfRequests","onFetchAllRequests","handleResetAll","request","buyer","seller","CreateRequestForm","onCreateRequest","cols","rows","RequestDetails","onReadRequest","onDeleteRequest","requestId","reply","UpdateRequestForm","onCreateReply","onUpdateRequest","NotFound","KommunicateChat","d","m","s","document","createElement","async","getElementsByTagName","appendChild","kommunicate","_globals","withRouter","isFetchingUser","setIsFetchingUser","loggedInUser","setLoggedInUser","isUserChange","setIsUserChange","setPlants","setQuery","setPlant","setRequests","setRequest","setAmountOfRequests","setIsNewRequest","intervalId","setIntervalId","minutesCounter","setMinutesCounter","setHeaderHeight","setAboutHeight","history","useHistory","handleClearError","handleFetchAllPlants","axios","get","response","catch","err","console","log","withCredentials","clearInterval","filter","currentRequest","length","setInterval","currentAmountOfRequests","handleClearNewRequest","handleLogOut","post","push","exact","path","target","Math","round","querySelector","getBoundingClientRect","height","plantImage","files","uploadForm","FormData","append","newPlant","destroyImageData","delete","clonePlant","parse","updatedPlant","patch","singlePlant","newRequest","cloneRequest","updatedRequest","singleRequest","email","password","newUser","toLowerCase","component","ReactDOM","render","StrictMode"],"mappings":"yPAAe,EAAUA,mC,uDC2CVC,EAtCA,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,aAAcC,EAA+B,EAA/BA,aAAcC,EAAiB,EAAjBA,YACjD,OACE,8BACE,eAACC,EAAA,EAAD,CAAQC,UAAU,OAAOC,QAAQ,OAAOC,OAAO,KAAKC,MAAM,MAA1D,UACE,eAACJ,EAAA,EAAOK,MAAR,eAAe,cAAC,IAAD,CAAMC,GAAG,IAAIC,QAASC,gBAAOC,YAA7B,0BAAf,OACA,cAACT,EAAA,EAAOU,OAAR,CAAeC,gBAAc,qBAC7B,cAACX,EAAA,EAAOY,SAAR,CAAiBC,GAAG,mBAApB,SACE,eAACC,EAAA,EAAD,CAAKb,UAAU,UAAf,UACE,8BACE,cAAC,IAAD,CAAMK,GAAG,IAAIL,UAAU,MAAMM,QAAS,kBAAMC,gBAAOO,SAASjB,EAAeC,IAA3E,4BAGAH,GACE,gCACE,cAAC,IAAD,CAAMK,UAAU,MAAMK,GAAG,iBAAzB,4BACA,cAAC,IAAD,CAAML,UAAWJ,EAAe,iBAAmB,MAAOS,GAAG,kBAAkBU,MAAOnB,EAAe,cAAgB,KAArH,2BAKJD,EACE,8BACE,cAAC,IAAD,CAAMK,UAAU,MAAMK,GAAG,UAAUU,MAAOpB,EAAKqB,SAA/C,yBAGF,gCACE,cAAC,IAAD,CAAMhB,UAAU,MAAMK,GAAG,UAAzB,uBACA,cAAC,IAAD,CAAML,UAAU,MAAMK,GAAG,UAAzB,qCChBHY,EAbA,WACb,OACE,qBAAKjB,UAAU,aAAf,SACE,+CAEE,cAAC,IAAD,CAAMkB,KAAK,gDAAX,gCAFF,IAIE,cAAC,IAAD,CAAMA,KAAK,8CAAX,oCCVO,MAA0B,4CCA1B,MAA0B,4CC6F1BC,EAvFF,SAAC,GAAuE,IAAtEC,EAAqE,EAArEA,OAAQC,EAA6D,EAA7DA,MAAOxB,EAAsD,EAAtDA,aAAcyB,EAAwC,EAAxCA,cAAeC,EAAyB,EAAzBA,oBAOzD,OALAC,qBACE,kBAAMD,MACN,IAGGH,EAOH,gCACE,wBAAQpB,UAAU,kCAAkCY,GAAG,UAAvD,SACE,qBAAKZ,UAAU,WAAf,SACE,sBAAKA,UAAU,mCAAf,UACE,oBAAIA,UAAU,aAAd,0BACA,oBAAIA,UAAU,YAAd,sCACA,qBAAKA,UAAU,OAAf,SACE,cAAC,IAAD,CAAMA,UAAU,iBAAiBM,QAAS,kBAAMC,gBAAOO,SAASjB,IAAhE,gCAMR,yBAASe,GAAG,UAAZ,SACE,qBAAKZ,UAAU,2BAAf,SACE,sBAAKA,UAAU,MAAf,UACE,qBAAKA,UAAU,6BAAf,SACE,qBAAKA,UAAU,QAAQyB,IAAKC,EAAOC,IAAI,aAEzC,uBACA,sBAAK3B,UAAU,mDAAf,UACE,0DACA,0DACA,mDAAqB,uBAArB,+BAC8B,uBAD9B,eAEc,uBAFd,mCAGkC,uBAHlC,+BAI8B,uBAJ9B,sDAOA,qBAAKA,UAAU,OAAOyB,IAAKG,EAAMD,IAAI,mBAM7C,kCACE,sBAAK3B,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,UACE,0CACA,uBACA,qDAEF,qBAAKA,UAAU,OAAf,SACE,uBAAOA,UAAU,0BAA0B6B,KAAK,OAAOC,YAAY,YAAYC,MAAOV,EAAOW,SAAUV,MAEzG,qBAAKtB,UAAU,mCAAf,SAEIoB,EAAOa,KACL,SAAAC,GAAU,IACDC,EAA2BD,EAA3BC,IAAKC,EAAsBF,EAAtBE,KAAMV,EAAgBQ,EAAhBR,MAAOW,EAASH,EAATG,MACzB,OACE,qBAAKrC,UAAU,WAAf,SACE,sBAAKA,UAAU,2CAAf,UACE,qBAAKA,UAAU,6BAA6ByB,IAAKC,EAAOC,IAAKS,IAC7D,sBAAKpC,UAAU,iBAAf,UACE,mCAAMoC,EAAN,OACA,kCAAKC,EAAL,cACA,cAAC,IAAD,CAAMrC,UAAU,uBAAuBK,GAAE,uBAAkB8B,GAA3D,8BANyBA,gBA1D/C,qBAAKG,MAAM,gCAAgCC,KAAK,SAAhD,SACE,sBAAMD,MAAM,kBAAZ,6BC2BSE,EAtCA,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,MAAOC,EAA+C,EAA/CA,SAAUC,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,kBAW9C,OATApB,qBACE,WACEmB,IACAC,IACArC,gBAAOC,gBAET,IAIA,qBAAKR,UAAU,qBAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,oBAAIA,UAAU,OAAd,uBACA,uBAAM6C,SAAUH,EAAhB,UACE,sBAAK1C,UAAU,aAAf,UACE,uBAAO8C,QAAQ,gBAAf,wBACA,uBAAOjB,KAAK,OAAO7B,UAAU,eAAeY,GAAG,gBAAgBwB,KAAK,gBAEtE,sBAAKpC,UAAU,aAAf,UACE,uBAAO8C,QAAQ,aAAf,6BACA,uBAAOjB,KAAK,QAAQ7B,UAAU,eAAeY,GAAG,aAAawB,KAAK,aAEpE,sBAAKpC,UAAU,aAAf,UACE,uBAAO8C,QAAQ,gBAAf,wBACA,uBAAOV,KAAK,WAAWP,KAAK,WAAW7B,UAAU,eAAeY,GAAG,qBAEpE6B,GAAU,oBAAGzC,UAAU,eAAb,cAA8ByC,EAA9B,OACX,wBAAQZ,KAAK,SAAS7B,UAAU,wCAAwC+C,eAAe,iBAAvF,uBACA,mBAAG/C,UAAU,UAAb,wCACA,cAAC,IAAD,CAAMK,GAAI,UAAV,gCCAK2C,EAhCA,SAAC,GAAwD,IAAvDP,EAAsD,EAAtDA,MAAOQ,EAA+C,EAA/CA,SAAUN,EAAqC,EAArCA,aAAcC,EAAuB,EAAvBA,kBAW9C,OATApB,qBACE,WACEmB,IACAC,IACArC,gBAAOC,gBAET,IAIA,qBAAKR,UAAU,uCAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,oBAAIA,UAAU,OAAd,uBACA,uBAAM6C,SAAUI,EAAhB,UACE,sBAAKjD,UAAU,aAAf,UACE,uBAAO8C,QAAQ,aAAf,6BACA,uBAAOjB,KAAK,QAAQ7B,UAAU,eAAeY,GAAG,aAAawB,KAAK,aAEpE,sBAAKpC,UAAU,aAAf,UACE,uBAAO8C,QAAQ,gBAAf,wBACA,uBAAOV,KAAK,WAAWP,KAAK,WAAW7B,UAAU,eAAeY,GAAG,qBAEpE6B,GAAU,oBAAGzC,UAAU,eAAb,cAA8ByC,EAA9B,OACX,wBAAQZ,KAAK,SAAS7B,UAAU,wCAAwC+C,eAAe,iBAAvF,gCCXKG,EAdA,SAAC,GAAmC,IAAlCC,EAAiC,EAAjCA,SAAUP,EAAuB,EAAvBA,kBAWzB,OATApB,qBACE,WACE2B,IACAP,IACArC,gBAAOC,gBAET,IAGM,yBC+BK4C,EAzCS,SAAC,GAA2E,IAA1EzD,EAAyE,EAAzEA,KAAME,EAAmE,EAAnEA,aAAcC,EAAqD,EAArDA,YAAa2C,EAAwC,EAAxCA,MAAOY,EAAiC,EAAjCA,cAAeV,EAAkB,EAAlBA,aAW/E,OATAnB,qBACE,WAGE,OAFAmB,IACApC,gBAAOC,cACA,kBAAMD,gBAAOO,SAASjB,EAAeC,MAE9C,IAGGH,EAGH,qBAAKK,UAAU,gCAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,oBAAIA,UAAU,OAAd,8BACA,uBAAM6C,SAAUQ,EAAhB,UACE,uBAAOrD,UAAU,OAAOoC,KAAK,OAAOP,KAAK,OAAOC,YAAY,eAC5D,uBAAO9B,UAAU,OAAOoC,KAAK,cAAcP,KAAK,OAAOC,YAAY,sBACnE,uBAAO9B,UAAU,kBAAkBoC,KAAK,OAAOP,KAAK,SAASyB,IAAI,IAAIxB,YAAY,SAHnF,OAG+F,uBAC7F,yBAAQ9B,UAAU,WAAWoC,KAAK,WAAWP,KAAK,OAAlD,UACE,uDACA,wBAAQE,MAAM,MAAd,mBACA,wBAAQA,MAAM,QAAd,qBACA,wBAAQA,MAAM,gBAAd,gCAEF,uBACA,uBAAO/B,UAAU,kBAAkBoC,KAAK,QAAQP,KAAK,SAASyB,IAAI,IAAIxB,YAAY,UAXpF,WAWgG,uBAC9F,uBAAO9B,UAAU,OAAOoC,KAAK,aAAaP,KAAK,SAC9CY,GAAU,oBAAGzC,UAAU,eAAb,cAA8ByC,EAA9B,OACX,sBAAKzC,UAAU,SAAf,UACE,wBAAQA,UAAU,8BAA8B6B,KAAK,SAArD,sBACA,eAAC,IAAD,CAAMxB,GAAI,IAAV,cAAgB,wBAAQL,UAAU,kBAAlB,uBAAhB,kBAtBS,cAAC,IAAD,CAAUK,GAAI,aCgDpBkD,EA3DM,SAAC,GAA0E,IAAzE5D,EAAwE,EAAxEA,KAAMuC,EAAkE,EAAlEA,MAAOrC,EAA2D,EAA3DA,aAAcC,EAA6C,EAA7CA,YAAa0D,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,cACnEC,EAAWC,cAAXD,QAUP,GARAlC,qBACE,WACEgC,EAAYE,GACZnD,gBAAOC,gBAET,KAGGb,EAAM,OAAQ,cAAC,IAAD,CAAUU,GAAI,YAX4D,IAatF8B,EAAgFD,EAAhFC,IAAKC,EAA2EF,EAA3EE,KAAMwB,EAAqE1B,EAArE0B,YAAaC,EAAwD3B,EAAxD2B,KAAMnC,EAAkDQ,EAAlDR,MAAOoC,EAA2C5B,EAA3C4B,cAAeC,EAA4B7B,EAA5B6B,SAAU1B,EAAkBH,EAAlBG,MAAO2B,EAAW9B,EAAX8B,QAC5E,OAAKA,EAOH,sBAAKhE,UAAU,2CAAf,UACE,qBAAKA,UAAU,2BAAf,SACE,mDAEF,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,uBAAf,UACG0B,GAAU,qBAAK1B,UAAU,6BAA6ByB,IAAKC,EAAOC,IAAKS,IACxE,sBAAKpC,UAAU,YAAf,cAA4B,2CAA5B,IAAkDoC,EAAlD,OACA,sBAAKpC,UAAU,YAAf,cAA4B,kDAA5B,IAAyD4D,EAAzD,OACA,sBAAK5D,UAAU,YAAf,cAA4B,2CAA5B,IAAkD6D,EAAlD,UACA,sBAAK7D,UAAU,YAAf,cAA4B,4CAA5B,IAAmD+D,EAAnD,OACA,sBAAK/D,UAAU,YAAf,cAA4B,4CAA5B,IAAmDqC,EAAnD,cACA,qBAAKrC,UAAU,uCAAf,SACE,qBAAKA,UAAU,+BAAf,SACE,sBAAKA,UAAU,YAAf,UAEIL,EAAKwC,MAAQ6B,EAAQ7B,IACnB,gCACE,eAAC,IAAD,CAAM9B,GAAI,iBAAV,cAA6B,wBAAQL,UAAU,mCAAlB,sBAA7B,OACA,wBAAQA,UAAU,mCAAmCM,QAAS,kBAAMmD,EAActB,EAAK2B,IAAvF,yBAGF,gCACE,eAAC,IAAD,CAAMzD,GAAI,CAAC4D,SAAU,mBAAoB/B,MAAOA,GAAhD,cAAyD,wBAAQlC,UAAU,mCAAlB,mBAAzD,OACA,eAAC,IAAD,CAAMK,GAAI,CAAC4D,SAAU,mBAAoB/B,MAAOA,GAAhD,cAAyD,wBAAQlC,UAAU,mCAAlB,oBAAzD,UAIN,eAAC,IAAD,CAAMK,GAAI,IAAKC,QAAS,kBAAMC,gBAAOO,SAASjB,EAAeC,IAA7D,cAA4E,wBAAQE,UAAU,kBAAlB,uBAA5E,sBAlCZ,qBAAKsC,MAAM,gCAAgCC,KAAK,SAAhD,SACE,sBAAMD,MAAM,kBAAZ,6BCoBS4B,EApCS,SAAC,GAA6H,IAA5HhC,EAA2H,EAA3HA,MAAOiC,EAAoH,EAApHA,aAAcC,EAAsG,EAAtGA,oBAAqBC,EAAiF,EAAjFA,aAAcC,EAAmE,EAAnEA,cAAeC,EAAoD,EAApDA,iBAAkBC,EAAkC,EAAlCA,cAAeC,EAAmB,EAAnBA,cAEhIjD,qBACE,kBAAMjB,gBAAOC,gBACb,IAJiJ,IAO5I2B,EAA8CD,EAA9CC,IAAKC,EAAyCF,EAAzCE,KAAMwB,EAAmC1B,EAAnC0B,YAAaC,EAAsB3B,EAAtB2B,KAAMnC,EAAgBQ,EAAhBR,MAAOW,EAASH,EAATG,MAC5C,OACE,qBAAKrC,UAAU,sBAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,oBAAIA,UAAU,YAAd,iCACA,sBAAKA,UAAU,2BAAf,UACE,qBAAKA,UAAU,oBAAoByB,IAAKC,EAAOC,IAAKS,IACpD,sBAAKpC,UAAU,YAAf,UACE,uBAAOA,UAAU,OAAOgC,SAAUwC,EAAe3C,KAAK,SACtD,uBAAO7B,UAAU,OAAQ6B,KAAK,OAAOG,SAAUmC,EAAcpC,MAAQK,IACrE,uBAAOpC,UAAU,OAAQ6B,KAAK,OAAOG,SAAUoC,EAAqBrC,MAAO6B,IAC3E,uBAAO5D,UAAU,kBAAmB6B,KAAK,SAASG,SAAUqC,EAActC,MAAO8B,IAJnF,OAI8F,uBAC5F,yBAAS7D,UAAU,OAAOgC,SAAUuC,EAAkBnC,KAAK,WAAWP,KAAK,OAAOC,YAAY,SAA9F,UACE,wBAAQC,MAAM,MAAd,mBACA,wBAAQA,MAAM,QAAd,qBACA,wBAAQA,MAAM,gBAAd,gCARJ,IASY,uBACV,uBAAO/B,UAAU,kBAAkBoC,KAAK,QAAQP,KAAK,SAASyB,IAAI,IAAItB,SAAUsC,EAAevC,MAAOM,IAVxG,UAWE,sBAAKrC,UAAU,6BAAf,UACE,wBAAQA,UAAU,8BAA8BM,QAAS,kBAAMmE,EAAcvC,IAA7E,4BACA,eAAC,IAAD,CAAM7B,GAAE,uBAAkB8B,GAA1B,cAAkC,wBAAQnC,UAAU,kBAAlB,uBAAlC,sB,yCCyFC0E,EAlHM,SAAC,GAAoD,IAAnDxC,EAAkD,EAAlDA,MAAOrC,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,YAAa6E,EAAgB,EAAhBA,WAAgB,EACjCC,oBAAS,GADwB,mBAChEC,EADgE,KACnDC,EADmD,OAE/BF,oBAAS,GAFsB,mBAEhEG,EAFgE,KAElDC,EAFkD,OAGnCJ,oBAAS,GAH0B,mBAGhEK,EAHgE,KAGpDC,EAHoD,OAI/BN,mBAAS,IAJsB,mBAIhEO,EAJgE,KAIlDC,EAJkD,OAK7CR,mBAAS,MALoC,mBAKhEnC,EALgE,KAKzD4C,EALyD,KAMjEC,EAASC,sBACTC,EAAWC,wBAGjBjE,qBACE,WAgBI,OAfFkE,OACGC,MADH,UAEOC,EAFP,8BAGI,CACEC,OAAQ,OACRC,QAAS,CAAC,eAAgB,oBAC1BC,KAAMC,KAAKC,UAAU,CAAC5D,MAAOH,EAAMG,UAGtC6D,MACC,SAAAC,GAAG,OAAIA,EAAIC,UAEZF,MACC,SAAAG,GAAI,OAAIjB,EAAgBiB,EAAKlB,iBAExB,kBAAM5E,gBAAOO,SAASjB,EAAeC,MAEhD,IAIF,IAiBMwG,EAAY,uCAAG,WAAMC,GAAN,SAAAC,EAAA,sDACnBtB,EAAcqB,EAAME,OACpBpB,EAASkB,EAAM9D,MAAQ8D,EAAM9D,MAAMiE,QAAU,IAF1B,2CAAH,sDAMZC,EAAmB,uCAAG,WAAMJ,GAAN,eAAAC,EAAA,6DAC1BD,EAAMK,iBACN5B,GAAgB,GAFU,SAGJM,EAAOuB,mBAC3B1B,EACA,CAAC2B,eAAgB,CAACC,KAAMvB,EAASwB,WAAWC,kBALpB,QAGpBC,EAHoB,QAOdzE,OACV4C,EAAS,kBAAD,OAAmB6B,EAAQzE,MAAMiE,UACzC1B,GAAgB,KAGhBK,EAAS,MACTL,GAAgB,GAChBF,GAAe,IAdS,2CAAH,sDAkBlB3C,EAAoBD,EAApBC,IAAKC,EAAeF,EAAfE,KAAMC,EAASH,EAATG,MAClB,OACE,sBAAKrC,UAAU,kBAAf,UACE,uBAAMA,UAAU,oBAAoBY,GAAG,eAAeiC,SAAU8D,EAAhE,UACE,qBAAI3G,UAAU,uBAAd,cAAuCoC,EAAvC,OACA,qBAAIpC,UAAU,uBAAd,cAAuCqC,EAAvC,cACA,cAAC,cAAD,CACErC,UAAU,MACVY,GAAG,eACHuG,QAlDU,CAChBC,MAAO,CACLC,KAAM,CACJC,MAAO,UACPC,WAAY,oBACZC,cAAe,cACfC,SAAU,OACV,gBAAiB,CAACH,MAAO,YAE3BI,QAAS,CACPJ,MAAO,UACPK,UAAW,aAwCT3F,SAAUsE,IAEZ,qBAAKtG,UAAU,6BAAf,SACE,wBAAQM,QAASqE,EAAY3E,UAAU,uBAAuB4H,SAAU7C,GAAgBE,GAAcJ,EAAajE,GAAG,SAAtH,SACE,sBAAMA,GAAG,cAAT,SACGmE,EAAe,qBAAK/E,UAAU,UAAUY,GAAG,YAAc,gBAK9D6B,GAAU,sBAAKzC,UAAU,aAAauC,KAAK,QAAjC,cAA2CE,EAA3C,OAEZ,mBAAGzC,UAAW6E,EAAc,6BAA+B,oCAA3D,mCAIF,qBAAK7E,UAAU,6BAAf,SAEI6E,EACE,eAAC,IAAD,CAAMxE,GAAI,IAAV,cAAgB,wBAAQL,UAAU,aAAlB,uBAAhB,OAGA,eAAC,IAAD,CAAMK,GAAE,uBAAkB8B,GAA1B,cAAkC,wBAAQnC,UAAU,aAAlB,uBAAlC,aCzGN6H,EAAUC,YAAW,+GA2BZC,EAzBM,SAAC,GAA6C,IAA5ClI,EAA2C,EAA3CA,aAAcC,EAA6B,EAA7BA,YAAa6E,EAAgB,EAAhBA,WAC1CZ,EAAWiE,cAEjBxG,qBACE,kBAAMjB,gBAAOC,gBACb,IAL8D,IAQzD0B,EAAS6B,EAAT7B,MACP,OACE,qBAAKlC,UAAU,qBAAf,SACE,qBAAKA,UAAU,gDAAf,SACE,cAAC,WAAD,CAAUsF,OAAQuC,EAAlB,SACE,cAAC,EAAD,CACElD,WAAYA,EACZzC,MAAOA,EACPrC,aAAcA,EACdC,YAAaA,WCgCVmI,EAtDM,SAAC,GAA+E,IAA9EtI,EAA6E,EAA7EA,KAAMuI,EAAuE,EAAvEA,SAAUC,EAA6D,EAA7DA,iBAAkBC,EAA2C,EAA3CA,mBAAoBxF,EAAuB,EAAvBA,kBAgB3E,OAdApB,qBACE,WACE,IAAM6G,EAAiB,WACrBzF,IACArC,gBAAOC,eAKT,OAFA4H,IACAC,IACO,kBAAMA,OAEf,IAGG1I,EAEAuI,EAOH,qBAAKlI,UAAU,qBAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,iDACA,qBAAIA,UAAU,OAAd,eAAwBmI,EAAxB,QACA,eAAC,IAAD,CAAM9H,GAAI,IAAV,cAAgB,wBAAQL,UAAU,kBAAlB,uBAAhB,OAEEkI,EAASjG,KACP,SAAAqG,GAAY,IACHnG,EAA6BmG,EAA7BnG,IAAKoG,EAAwBD,EAAxBC,MAAOC,EAAiBF,EAAjBE,OAAQtG,EAASoG,EAATpG,MAC3B,OACEsG,EAAOrG,MAAQxC,EAAKwC,KAClB,sBAAKnC,UAAU,iBAAf,UACE,gDAAmBkC,EAAME,KAAzB,OACA,uCAAUmG,EAAMvH,SAAhB,OACA,8BACE,cAAC,IAAD,CAAMhB,UAAU,uBAAuBK,GAAE,yBAAoB8B,GAA7D,2BAJiCA,MAYzB,IAArBgG,GAA2B,eAAC,IAAD,CAAM9H,GAAI,IAAV,cAAgB,wBAAQL,UAAU,kBAAlB,uBAAhB,YA7BhC,qBAAKsC,MAAM,gCAAgCC,KAAK,SAAhD,SACE,sBAAMD,MAAM,kBAAZ,4BAJe,cAAC,IAAD,CAAUjC,GAAI,aCcpBoI,EA9BW,SAAC,GAA4C,IAA3ChG,EAA0C,EAA1CA,MAAOiG,EAAmC,EAAnCA,gBAAiB/F,EAAkB,EAAlBA,aAC5CoB,EAAWiE,cAEjBxG,qBACE,WACEmB,IACApC,gBAAOC,gBAET,IARkE,IAW7D0B,EAAS6B,EAAT7B,MACP,OACE,qBAAKlC,UAAU,qBAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,oBAAIA,UAAU,OAAd,2BACA,qBAAIA,UAAU,OAAd,cAAuBkC,EAAME,KAA7B,OACA,uBAAMS,SAAU,SAAC0D,GAAD,OAAWmC,EAAgBnC,EAAOrE,IAAlD,UACE,8BACE,0BAAUlC,UAAU,OAAOoC,KAAK,UAAUuG,KAAK,KAAKC,KAAK,QAE1DnG,GAAU,oBAAGzC,UAAU,eAAb,cAA8ByC,EAA9B,OACX,wBAAQzC,UAAU,8BAA8B6B,KAAK,SAArD,oBACA,eAAC,IAAD,CAAMxB,GAAE,uBAAkB6B,EAAMC,KAAhC,cAAwC,wBAAQnC,UAAU,kBAAlB,uBAAxC,gBCoBK6I,EA3CQ,SAAC,GAA+C,IAA9CP,EAA6C,EAA7CA,QAASQ,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,gBACxCC,EAAarF,cAAbqF,UAEPxH,qBACE,WACEsH,EAAcE,GACdzI,gBAAOC,gBAET,IARkE,IAW7D2B,EAAqCmG,EAArCnG,IAAKoG,EAAgCD,EAAhCC,MAAOrG,EAAyBoG,EAAzBpG,MAAOwE,EAAkB4B,EAAlB5B,QAASuC,EAASX,EAATW,MACnC,OAAKV,GAAUrG,EAOb,qBAAKlC,UAAU,sBAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,oBAAIA,UAAU,OAAd,4BACA,wCAAWkC,EAAME,KAAjB,OACA,uCAAUmG,EAAMvH,SAAhB,OACA,kCAAK0F,EAAL,OAEEuC,GACE,gCACE,+CACA,kCAAKA,EAAL,UAIN,iCACIA,GAAU,eAAC,IAAD,CAAM5I,GAAE,2BAAsB8B,GAA9B,cAAsC,wBAAQnC,UAAU,mCAAlB,qBAAtC,OACZ,wBAAQA,UAAU,mCAAmCM,QAAS,kBAAMyI,EAAgB5G,IAApF,yBAEF,eAAC,IAAD,CAAM9B,GAAI,kBAAmBC,QAASC,gBAAOC,YAA7C,cAA2D,wBAAQR,UAAU,kBAAlB,uBAA3D,YAxBJ,qBAAKsC,MAAM,gCAAgCC,KAAK,SAAhD,SACE,sBAAMD,MAAM,kBAAZ,6BCaS4G,EA3BW,SAAC,GAA+C,IAA9CZ,EAA6C,EAA7CA,QAASa,EAAoC,EAApCA,cAAeC,EAAqB,EAArBA,gBAElD5H,qBACE,kBAAMjB,gBAAOC,gBACb,IAJqE,IAOhE2B,EAAgBmG,EAAhBnG,IAAKuE,EAAW4B,EAAX5B,QACZ,OACE,qBAAK1G,UAAU,sBAAf,SACE,sBAAKA,UAAU,4CAAf,UACE,oBAAIA,UAAU,YAAd,kCACA,qBAAKA,UAAU,2BAAf,SACE,sBAAKA,UAAU,YAAf,UACE,kCAAK0G,EAAL,OACA,0BAAU1G,UAAU,OAAOoC,KAAK,QAAQuG,KAAK,KAAKC,KAAK,IAAI9G,YAAY,aAAaE,SAAUmH,IAC9F,sBAAKnJ,UAAU,6BAAf,UACE,wBAAQA,UAAU,8BAA8BM,QAAS,kBAAM8I,EAAgBd,IAA/E,sBACA,eAAC,IAAD,CAAMjI,GAAE,yBAAoB8B,GAA5B,cAAoC,wBAAQnC,UAAU,kBAAlB,uBAApC,qBCJCqJ,EAfE,WACf,OACE,qBAAKrJ,UAAU,WAAf,SACE,gCACE,yCACS,uBADT,IACe,uBADf,0CAIA,iDACA,eAAC,IAAD,CAAMK,GAAI,IAAV,cAAgB,wBAAQL,UAAU,kBAAlB,4BAAhB,aCsBOsJ,EAhCS,WA6BtB,OA3BA9H,qBACE,YACE,SACG+H,EAAGC,GACF,IAKMC,EAAIC,SAASC,cAAc,UACjCF,EAAE5H,KAAO,kBACT4H,EAAEG,OAAQ,EACVH,EAAEhI,IAAM,mDACEiI,SAASG,qBAAqB,QAAQ,GAC9CC,YAAYL,GACd/D,OAAOqE,YAAcP,EACrBA,EAAEQ,SAZ0B,CAC1B,MAAS,kCACT,aAAe,EACf,+BAAiC,GALvC,CAkBEN,SACAhE,OAAOqE,aAAe,MAG1B,IAGM,yBCipBKE,eAtpBH,WAAO,IAAD,EAC4BrF,oBAAS,GADrC,mBACTsF,EADS,KACOC,EADP,OAEwBvF,mBAAS,MAFjC,mBAETwF,EAFS,KAEKC,EAFL,OAGwBzF,oBAAS,GAHjC,mBAGT0F,EAHS,KAGKC,EAHL,OAIY3F,mBAAS,IAJrB,mBAITxD,EAJS,KAIDoJ,EAJC,OAKU5F,mBAAS,IALnB,mBAKTvD,EALS,KAKFoJ,EALE,OAMU7F,mBAAS,IANnB,mBAMT1C,EANS,KAMFwI,EANE,OAOgB9F,mBAAS,IAPzB,mBAOTsD,EAPS,KAOCyC,EAPD,OAQc/F,mBAAS,IARvB,mBAQT0D,GARS,KAQAsC,GARA,QASgChG,mBAAS,GATzC,qBASTuD,GATS,MASS0C,GATT,SAUwBjG,oBAAS,GAVjC,qBAUThF,GAVS,MAUKkL,GAVL,SAWoBlG,mBAAS,MAX7B,qBAWTmG,GAXS,MAWGC,GAXH,SAY4BpG,mBAAS,GAZrC,qBAYTqG,GAZS,MAYOC,GAZP,SAawBtG,mBAAS,GAbjC,qBAaT/E,GAbS,MAaKsL,GAbL,SAcsBvG,mBAAS,GAd/B,qBAcT9E,GAdS,MAcIsL,GAdJ,SAeUxG,mBAAS,MAfnB,qBAeTnC,GAfS,MAeF4C,GAfE,MAiBVgG,GAAUC,cASVC,GAAmB,kBAAMlG,GAAS,OAKlCmG,GAAuB,WAC3BC,IAAMC,IAAN,UAAa9F,EAAb,sBACGM,MACC,SAAAyF,GAAQ,OAAInB,EAAUmB,EAAStF,SAEhCuF,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,yBAA0BF,OAKnDrK,qBACE,WAiBE,OAhBAgK,KACKpB,GACHqB,IAAMC,IAAN,UAAa9F,EAAb,aAAwC,CAACoG,iBAAiB,IACvD9F,MACC,SAAAyF,GACEtB,EAAgBsB,EAAStF,MACzB8D,GAAkB,MAGrByB,OACC,SAAAC,GACE1B,GAAkB,GAClB2B,QAAQC,IAAI,+BAAgCF,MAI7C,kBAAMd,IAAckB,cAAclB,OAE3C,IAOFvJ,qBACE,WAWEH,EAREoK,IAAMC,IAAN,UAAa9F,EAAb,gCAAmDvE,IAChD6E,MACC,SAAAyF,GAAQ,OAAInB,EAAUmB,EAAStF,SAEhCuF,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,wBAAyBF,MAGfL,OAErC,CAACnK,IA6NHG,qBACE,WACM8I,IACFC,GAAgB,GAChBkB,IAAMC,IAAN,UAAa9F,EAAb,wBACGM,MACC,SAAAyF,GACEhB,EAAYgB,EAAStF,MACrBwE,GAAoB3C,EAASgE,QAAO,SAAAC,GAAc,OAAIA,EAAe3D,OAAOrG,MAAQiI,EAAajI,OAAKiK,QACtGpB,GACEqB,aACE,kBAAMnB,IAAkB,SAAAD,GAAc,OAAIA,EAAkB,OAC5D,SAKPW,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,2BAA4BF,SAIvD,CAACvB,IAIH9I,qBACE,WACEiK,IAAMC,IAAN,UAAa9F,EAAb,wBACGM,MACC,SAAAyF,GACEhB,EAAYgB,EAAStF,MACrB,IAAMiG,EAA0BpE,EAASgE,QAAO,SAAAC,GAAc,OAAIA,EAAe3D,OAAOrG,MAAQiI,EAAajI,OAAKiK,OAC9GjE,GAAmBmE,IACrBzB,GAAoByB,GACpBxB,IAAgB,OAIrBc,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,2BAA4BF,QAGrD,CAACZ,KAIH,IAAMsB,GAAwB,kBAAMzB,IAAgB,IAsK9C0B,GAAe,WACnBf,IAAMgB,KAAN,UACK7G,EADL,eAEE,GACA,CAACoG,iBAAiB,IAEjB9F,MACC,WACEmE,EAAgB,MAChB4B,cAAclB,IACdM,GAAQqB,KAAK,QAGhBd,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,gBAAiBF,OAI1C,OAAI3B,EACF,qBAAK5H,MAAM,gCAAgCC,KAAK,SAAhD,SACE,sBAAMD,MAAM,kBAAZ,4BAKF,sBAAKA,MAAM,OAAX,UACE,cAAC,EAAD,CACEa,SAAUqJ,GACV5M,aAAcA,GACdD,KAAMyK,EACNvK,aAAcA,GACdC,YAAaA,KAEf,eAAC,IAAD,WACE,cAAC,IAAD,CAAO6M,OAAK,EAACC,KAAK,IAAlB,SACE,cAAC,EAAD,CACEtL,cAvegB,SAAAiF,GAAK,OAAIkE,EAASlE,EAAMsG,OAAO9K,QAwe/CR,oBAthBsB,WAC9B4J,GAAgB2B,KAAKC,MAAMrD,SAASsD,cAAc,YAAYC,wBAAwBC,SACtF9B,GAAe0B,KAAKC,MAAMrD,SAASsD,cAAc,YAAYC,wBAAwBC,UAqhB7E9L,OAAQA,EAAQC,MAAOA,EACvBxB,aAAcA,OAGlB,cAAC,IAAD,CAAO+M,KAAK,iBAAZ,SACA,cAAC,EAAD,CACEvJ,cA1dkB,SAAAkD,GACxBA,EAAMK,iBAD2B,MAE8BL,EAAMsG,OAA9DzK,EAF0B,EAE1BA,KAAMwB,EAFoB,EAEpBA,YAAaC,EAFO,EAEPA,KAAMsJ,EAFC,EAEDA,WAAYpJ,EAFX,EAEWA,SAAU1B,EAFrB,EAEqBA,MAChDX,EAAQyL,EAAWC,MAAM,GACzBC,EAAa,IAAIC,SACvBD,EAAWE,OAAO,QAAS7L,GAC3B+J,IAAMgB,KAAN,UAAc7G,EAAd,eAA2CyH,GACxCnH,MACC,SAAAyF,GAAa,IAAD,EACqBA,EAAStF,KAAjC3E,EADG,EACHA,MAAOoC,EADJ,EACIA,cACR0J,EAAW,CACfpL,KAAMA,EAAKL,MACX6B,YAAaA,EAAY7B,MACzB8B,KAAMA,EAAK9B,MACXL,QACAoC,gBACAC,SAAUA,EAAShC,MACnBM,MAAOA,EAAMN,OAEf0J,IAAMgB,KAAN,UACK7G,EADL,sBAEE4H,EACA,CAACxB,iBAAiB,IAEjB9F,MACC,SAAAyF,GACEnB,EAAU,CAACmB,EAAStF,MAAX,mBAAoBjF,KAC7BiK,GAAQqB,KAAK,QAGhBd,OACC,SAAAC,GAAG,OAAIxG,GAASwG,EAAIF,SAAStF,KAAK5D,aAIzCmJ,OACC,SAAAC,GAAG,OAAIxG,GAASwG,EAAIF,SAAStF,KAAK5D,WAubhCE,aAAc4I,GACd5L,KAAMyK,EACNvK,aAAcA,GACdC,YAAaA,GACb2C,MAAOA,OAGX,cAAC,IAAD,CAAOmK,KAAK,wBAAZ,SACE,cAAC,EAAD,CACEpJ,YA3bgB,SAAAE,GACtB+H,IAAMC,IAAN,UACK9F,EADL,4BACuClC,GACrC,CAACsI,iBAAiB,IAEjB9F,MACC,SAAAyF,GAAQ,OAAIjB,EAASiB,EAAStF,SAE/BuF,OACC,kBAAME,QAAQC,IAAI,yBAmbhBtI,cA1TkB,SAACC,EAASI,GAClC,IAAM2J,EAAmB,CACvB3J,iBAEF2H,IAAMgB,KAAN,UACK7G,EADL,gBAEE6H,GAECvH,MACC,WACEuF,IAAMiC,OAAN,UAAgB9H,EAAhB,8BAAoDlC,IACjDwC,MACC,WACEsE,EAAUpJ,EAAO8K,QAAO,SAAAhK,GAAK,OAAIA,EAAMC,MAAQuB,MAC/C2H,GAAQqB,KAAK,KACbnM,gBAAOO,SAASjB,GAAeC,OAGlC8L,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,sBAAuBF,SAIjDD,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,sBAAuBF,OAmSxC3J,MAAOA,EAAOvC,KAAMyK,EACpBvK,aAAcA,GACdC,YAAaA,OAGf,cAAC,IAAD,CAAO8M,KAAK,iBAAZ,SACE,cAAC,EAAD,CACEzI,aAtbe,SAAAoC,GACvB,IAAMoH,EAAa3H,KAAK4H,MAAM5H,KAAKC,UAAU/D,IAC7CyL,EAAWvL,KAAOmE,EAAMsG,OAAO9K,MAC/B2I,EAASiD,IAobDvJ,oBAhbsB,SAAAmC,GAC9B,IAAMoH,EAAa3H,KAAK4H,MAAM5H,KAAKC,UAAU/D,IAC7CyL,EAAW/J,YAAc2C,EAAMsG,OAAO9K,MACtC2I,EAASiD,IA8aDtJ,aA1ae,SAAAkC,GACvB,IAAMoH,EAAa3H,KAAK4H,MAAM5H,KAAKC,UAAU/D,IAC7CyL,EAAW9J,KAAO0C,EAAMsG,OAAO9K,MAC/B2I,EAASiD,IAwaDrJ,cApagB,SAAAiC,GACxB,IAAMoH,EAAa3H,KAAK4H,MAAM5H,KAAKC,UAAU/D,IAC7CyL,EAAWtL,MAAQkE,EAAMsG,OAAO9K,MAChC2I,EAASiD,IAkaDpJ,iBA9ZmB,SAAAgC,GAC3B,IAAMoH,EAAa3H,KAAK4H,MAAM5H,KAAKC,UAAU/D,IAC7CyL,EAAW5J,SAAWwC,EAAMsG,OAAO9K,MACnC2I,EAASiD,IA4ZDnJ,cAxZgB,SAAA+B,GACxB,IAAM7E,EAAQ6E,EAAMsG,OAAOO,MAAM,GAE3BK,EAAmB,CACvB3J,cAFsB5B,EAAjB4B,eAIP2H,IAAMgB,KAAN,UACK7G,EADL,gBAEE6H,GAECvH,MACC,WACE,IAAMmH,EAAa,IAAIC,SACvBD,EAAWE,OAAO,QAAS7L,GAC3B+J,IAAMgB,KAAN,UACK7G,EADL,eAEEyH,GAECnH,MACC,SAAAyF,GACE,IAAMgC,EAAa3H,KAAK4H,MAAM5H,KAAKC,UAAU/D,IADnC,EAEqByJ,EAAStF,KAAjCvC,EAFG,EAEHA,cAAepC,EAFZ,EAEYA,MACtBiM,EAAW7J,cAAgBA,EAC3B6J,EAAWjM,MAAQA,EACnBgJ,EAASiD,MAGZ/B,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,sBAAuBF,SAIjDD,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,0BAA2BF,OAwX1CpH,cAnXgB,SAAAvC,GAAU,IAC3BC,EAAuED,EAAvEC,IAAKC,EAAkEF,EAAlEE,KAAMwB,EAA4D1B,EAA5D0B,YAAaC,EAA+C3B,EAA/C2B,KAAMnC,EAAyCQ,EAAzCR,MAAOoC,EAAkC5B,EAAlC4B,cAAeC,EAAmB7B,EAAnB6B,SAAU1B,EAASH,EAATG,MAC/DwL,EAAe,CACnBzL,OACAwB,cACAC,OACAnC,QACAoC,gBACAC,WACA1B,SAEFoJ,IAAMqC,MAAN,UACKlI,EADL,8BACyCzD,GACtC0L,GAEA3H,MACC,WACEsE,EACEpJ,EAAOa,KACL,SAAA8L,GAUE,OATIA,EAAY5L,MAAQA,IACtB4L,EAAY3L,KAAOA,EACnB2L,EAAYnK,YAAcA,EAC1BmK,EAAYlK,KAAOA,EACnBkK,EAAYrM,MAAQA,EACpBqM,EAAYjK,cAAgBA,EAC5BiK,EAAYhK,SAAWA,EACvBgK,EAAY1L,MAAQA,GAEf0L,MAIb1C,GAAQqB,KAAK,KACbnM,gBAAOO,SAASjB,GAAeC,OAGlC8L,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,sBAAuBF,OA8UtC3J,MAAOA,EAAOrC,aAAcA,GAC5BC,YAAaA,OAGjB,cAAC,IAAD,CAAO8M,KAAK,mBAAZ,SACE,cAAC,EAAD,CACEjI,WAlTa,WACrB8G,IAAMgB,KAAN,UACK7G,EADL,8BAEE,GACA,CAACoG,iBAAiB,IAEjB9F,MACC,kBAAMmF,GAAQqB,KAAK,QAEpBd,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,kBAAmBF,OAySlChM,aAAcA,GACdC,YAAaA,OAIjB,cAAC,IAAD,CAAO8M,KAAK,kBAAZ,SACE,cAAC,EAAD,CACExE,mBAvPqB,WAC7BqD,IAAMC,IAAN,UAAa9F,EAAb,wBACGM,MACC,SAAAyF,GAAQ,OAAIhB,EAAYgB,EAAStF,SAElCuF,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,2BAA4BF,OAkP3CjJ,kBAAmB2J,GACnB5M,KAAMyK,EAAclC,SAAUA,EAC9BC,iBAAkBA,OAGtB,cAAC,IAAD,CAAOyE,KAAK,mBAAZ,SACE,cAAC,EAAD,CACElE,gBApPkB,SAACnC,EAAOrE,GAClCqE,EAAMK,iBADsC,IAErCF,EAAWH,EAAMsG,OAAjBnG,QACAvE,EAAgBD,EAAhBC,IACD6L,EAAa,CACjBxF,OAFqBtG,EAAX8B,QAEM7B,IAChBD,MAAOC,EACPuE,QAASA,EAAQ3E,OAEnB0J,IAAMgB,KAAN,UACK7G,EADL,wBAEEoI,EACA,CAAChC,iBAAiB,IAEjB9F,MACC,SAAAyF,GACEhB,EAAY,CAACgB,EAAStF,MAAX,mBAAoB6B,KAC/BmD,GAAQqB,KAAR,uBAA6BxK,EAAMC,SAGtCyJ,OACC,SAAAC,GAAG,OAAIxG,GAASwG,EAAIF,SAAStF,KAAK5D,WAgO9BE,aAAc4I,GACd5L,KAAMyK,EACN3H,MAAOA,OAGX,cAAC,IAAD,CAAOmK,KAAK,4BAAZ,SACE,cAAC,EAAD,CACE9D,cAlOgB,SAAAE,GACxByC,IAAMC,IAAN,UACK9F,EADL,8BACyCoD,GACvC,CAACgD,iBAAiB,IAEjB9F,MACC,SAAAyF,GAAQ,OAAIf,GAAWe,EAAStF,SAEjCuF,OACC,kBAAME,QAAQC,IAAI,2BA0NdhD,gBAxKkB,SAAAC,GAC1ByC,IAAMiC,OAAN,UAAgB9H,EAAhB,gCAAsDoD,IACnD9C,MACC,WACEyE,EAAYzC,EAASgE,QAAO,SAAA5D,GAAO,OAAIA,EAAQnG,MAAQ6G,MACvD6B,IAAoB,SAAA1C,GAAgB,OAAIA,EAAoB,KAC5DkD,GAAQqB,KAAK,sBAGhBd,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,wBAAyBF,OA+JxCvD,QAASA,GACT3I,KAAMyK,MAGV,cAAC,IAAD,CAAOwC,KAAK,mBAAZ,SACE,cAAC,EAAD,CACEzD,cA5NgB,SAAA5C,GACxB,IAAM0H,EAAejI,KAAK4H,MAAM5H,KAAKC,UAAUqC,KAC/C2F,EAAahF,MAAQ1C,EAAMsG,OAAO9K,MAClC6I,GAAWqD,IA0NH7E,gBAtNkB,SAAAd,GAAY,IAC/BnG,EAA6CmG,EAA7CnG,IAAKoG,EAAwCD,EAAxCC,MAAOC,EAAiCF,EAAjCE,OAAQtG,EAAyBoG,EAAzBpG,MAAOwE,EAAkB4B,EAAlB5B,QAASuC,EAASX,EAATW,MACrCiF,EAAiB,CACrB3F,QACAC,SACAtG,QACAwE,UACAuC,SAEFwC,IAAMqC,MAAN,UACKlI,EADL,gCAC2CzD,GACzC+L,GAEChI,MACC,WACEyE,EACEzC,EAASjG,KACP,SAAAkM,GAQE,OAPIA,EAAchM,MAAQA,IACxBgM,EAAc5F,MAAQA,EACtB4F,EAAc3F,OAASA,EACvB2F,EAAcjM,MAAQA,EACtBiM,EAAczH,QAAUA,EACxByH,EAAclF,MAAQA,GAEjBkF,MAIb9C,GAAQqB,KAAR,yBAA+BvK,OAGlCyJ,OACC,SAAAC,GAAG,OAAIC,QAAQC,IAAI,wBAAyBF,OAsLxCvD,QAASA,OAIb,cAAC,IAAD,CAAOsE,KAAK,UAAZ,SACE,cAAC,EAAD,CACElK,SAtKW,SAAA6D,GACnBA,EAAMK,iBADsB,MAEQL,EAAMsG,OAAnC7L,EAFqB,EAErBA,SAAUoN,EAFW,EAEXA,MAAOC,EAFI,EAEJA,SAClBC,EAAU,CACdtN,SAAUA,EAASe,MACnBqM,MAAOA,EAAMrM,MAAMwM,cACnBF,SAAUA,EAAStM,OAErB0J,IAAMgB,KAAN,UACK7G,EADL,eAEE0I,GAECpI,MACC,SAAAyF,GACEtB,EAAgBsB,EAAStF,MACzBkE,GAAgB,GAChBc,GAAQqB,KAAK,QAGhBd,OACC,SAAAC,GAAG,OAAIxG,GAASwG,EAAIF,SAAStF,KAAK5D,WAmJ9BE,aAAc4I,GACd3I,kBAAmB2J,GACnB9J,MAAOA,OAGX,cAAC,IAAD,CAAOmK,KAAK,UAAZ,SACE,cAAC,EAAD,CACE3J,SArJW,SAAAsD,GACnBA,EAAMK,iBADsB,MAEFL,EAAMsG,OAAzBuB,EAFqB,EAErBA,MAAOC,EAFc,EAEdA,SACR1O,EAAO,CACXyO,MAAOA,EAAMrM,MACbsM,SAAUA,EAAStM,OAErB0J,IAAMgB,KAAN,UACK7G,EADL,eAEEjG,EACA,CAACqM,iBAAiB,IAEjB9F,MACC,SAAAyF,GACEtB,EAAgBsB,EAAStF,MACzBkE,GAAgB,GAChBc,GAAQqB,KAAK,QAGhBd,OACC,SAAAC,GAAG,OAAIxG,GAASwG,EAAIF,SAAStF,KAAK5D,WAkI9BE,aAAc4I,GACd3I,kBAAmB2J,GACnB9J,MAAOA,OAGX,cAAC,IAAD,CAAOmK,KAAK,UAAZ,SACC,cAAC,EAAD,CACGzJ,SAAUqJ,GACV5J,kBAAmB2J,OAIvB,cAAC,IAAD,CAAOiC,UAAWnF,OAEpB,cAAC,EAAD,IACA,cAAC,EAAD,U,MCpqBNoF,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJjF,SAASsD,cAAc,Y","file":"static/js/main.d3992e93.chunk.js","sourcesContent":["export default {API_URL: process.env.REACT_APP_SERVER_URL};","import React from \"react\";\r\nimport {Navbar, Nav} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst NavBar = ({user, isNewRequest, headerHeight, aboutHeight}) => {\r\n  return (\r\n    <div>\r\n      <Navbar className=\"pl-5\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n        <Navbar.Brand> <Link to=\"/\" onClick={scroll.scrollToTop}> JungleSwap </Link> </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <div>\r\n              <Link to=\"/\" className=\"p-2\" onClick={() => scroll.scrollTo(headerHeight + aboutHeight)}> All Plants </Link>\r\n            </div>\r\n            {\r\n              user && (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/plants/create\"> Create Plant </Link>\r\n                  <Link className={isNewRequest ? \"p-2 alertColor\" : \"p-2\"} to=\"/requests/fetch\" title={isNewRequest ? \"new message\" : null}> Messages </Link>\r\n                </div>\r\n              )\r\n            }\r\n            {\r\n              user ? (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/logout\" title={user.username}> Log out </Link>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/signin\"> Sign in </Link>\r\n                  <Link className=\"p-2\" to=\"/signup\"> Sign up </Link>\r\n                </div>\r\n              )\r\n            }\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-row\">\r\n      <footer> \r\n        © 2021 \r\n        <Link href=\"https://www.linkedin.com/in/christian-gerbig/\"> Christian Gerbig </Link> \r\n        & \r\n        <Link href=\"https://www.linkedin.com/in/lisa-montebaur/\"> Lisa Montebaur </Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/JungleSwap_Home.c4ed9b4c.png\";","export default __webpack_public_path__ + \"static/media/JungleSwap_Icon.a6c7c44a.png\";","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\nimport image from \"../images/JungleSwap_Home.png\";\r\nimport icon from \"../images/JungleSwap_Icon.png\";\r\n\r\nconst Home = ({plants, query, headerHeight, onSearchPlant, onGetElementsHeight}) => {\r\n  // Get height of header and about elements as soon as page loads\r\n  useEffect(\r\n    () => onGetElementsHeight(),\r\n    []\r\n  );\r\n\r\n  if (!plants) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div>\r\n      <header className=\"text-center pt-5 pb-5 headerImg\" id=\"titleId\">\r\n        <div className=\"row my-5\">\r\n          <div className=\"col-6 offset-3 my-5 borderAround\">\r\n            <h2 className=\"title mb-2\"> JungleSwap </h2>\r\n            <h5 className=\"mt-3 mb-5\"> Share your green heart </h5>\r\n            <div className=\"mb-5\">\r\n              <Link className=\"biggerFontSize\" onClick={() => scroll.scrollTo(headerHeight)}> Try it! </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      <section id=\"aboutId\">\r\n        <div className=\"about centered container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 col-md-5 col-lg-6\">\r\n              <img className=\"image\" src={image} alt=\"plants\"/>\r\n            </div>\r\n            <br />\r\n            <div className=\"about col-sm-6 col-md-5 col-lg-6 px-5 noOverflow\">\r\n              <h4> Welcome to JungleSwap! </h4>\r\n              <h5> Add green to your Home </h5>\r\n              <p> It\"s easy-peasy. <br/>\r\n                Share your plant offshoots. <br/>\r\n                Make money! <br/>\r\n                Or swap them for another plant. <br/>\r\n                Don\"t have any baby plants? <br/>\r\n                You can simply shop and give a plant a new home.\r\n              </p>\r\n              <img className=\"icon\" src={icon} alt=\"icon\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n\r\n      <section>\r\n        <div className=\"container mt-5\">\r\n          <div className=\"mt-5 mb-3\">\r\n            <h2> Plants </h2>\r\n            <hr/>\r\n            <h4> Search a plant </h4>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <input className=\"smallWidth form-control\" type=\"text\" placeholder=\"Search...\" value={query} onChange={onSearchPlant}/>\r\n          </div>\r\n          <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n            {\r\n              plants.map(\r\n                plant => {\r\n                  const {_id, name, image, price} = plant;\r\n                  return (\r\n                    <div className=\"col mb-5\" key={_id}>\r\n                      <div className=\"card card-medium-width text-center h-100\">\r\n                        <img className=\"card-img-top mediumPicSize\" src={image} alt={name}/>\r\n                        <div className=\"card-body mb-5\">\r\n                          <h5> {name} </h5>\r\n                          <p> {price} € </p>\r\n                          <Link className=\"btn btn-outline-dark\" to={`/plants/read/${_id}`}> Details </Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst SignUp = ({error, onSignUp, onClearError, onClearNewRequest}) => {\r\n  // Clear values and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      onClearNewRequest();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Sign Up </h2>\r\n        <form onSubmit={onSignUp}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputUsername\"> Username </label>\r\n            <input type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputEmail\"> Email address </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputPassword\"> Password </label>\r\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\"/>\r\n          </div>\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\" formnovalidate=\"formnovalidate\"> Sign up </button>\r\n          <p className=\"padding\"> Already have an account? </p>\r\n          <Link to={\"/signin\"}> Sign in </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import React, {useEffect} from \"react\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst SignIn = ({error, onSignIn, onClearError, onClearNewRequest}) => {\r\n  // Clear values and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      onClearNewRequest();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5 custom fullscreen\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Sign In </h2>\r\n        <form onSubmit={onSignIn}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputEmail\"> Email address </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputPassword\"> Password </label>\r\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\"/>\r\n          </div>\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\" formnovalidate=\"formnovalidate\"> Sign in </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React, {useEffect} from \"react\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst LogOut = ({onLogOut, onClearNewRequest}) => {\r\n  // Log out and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      onLogOut();\r\n      onClearNewRequest();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (<div/>);\r\n}\r\n\r\nexport default LogOut;","import React, {useEffect} from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst CreatePlantForm = ({user, headerHeight, aboutHeight, error, onCreatePlant, onClearError}) => {\r\n  // Scroll to top as soon as page loads and scroll to plants section during cleanup\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      scroll.scrollToTop();\r\n      return () => scroll.scrollTo(headerHeight + aboutHeight);\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={\"/signup\"}/>);\r\n\r\n  return (\r\n    <div className=\"container row mt-5 fullscreen\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-6\">\r\n        <h2 className=\"mb-5\"> Create a plant </h2>\r\n        <form onSubmit={onCreatePlant}>\r\n          <input className=\"mb-4\" name=\"name\" type=\"text\" placeholder=\"Enter name\"/>\r\n          <input className=\"mb-4\" name=\"description\" type=\"text\" placeholder=\"Enter description\"/>\r\n          <input className=\"mb-4 smallWidth\" name=\"size\" type=\"number\" min=\"1\" placeholder=\"Size\"/> cm <br/>\r\n          <select className=\"mb-4 p-1\" name=\"location\" type=\"text\">\r\n            <option> Select location </option>\r\n            <option value=\"sun\"> sun </option>\r\n            <option value=\"shade\"> shade </option>\r\n            <option value=\"sun and shade\"> sun and shade </option>\r\n          </select>\r\n          <br/>\r\n          <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" placeholder=\"Price\"/> € <br/>\r\n          <input className=\"mb-4\" name=\"plantImage\" type=\"file\"/>\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <div className=\"col-12\">\r\n            <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\" > Create </button>\r\n            <Link to={\"/\"}> <button className=\"btn btn-sm mx-5\"> Go back </button> </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePlantForm;","import React, {useEffect} from \"react\";\r\nimport {Link, Redirect, useParams} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst PlantDetails = ({user, plant, headerHeight, aboutHeight, onReadPlant, onDeletePlant}) => {\r\n  const {plantId} = useParams();\r\n  // Read plant data and scroll to top as soon as page loads  \r\n  useEffect(\r\n    () => {\r\n      onReadPlant(plantId);\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={\"/signup\"}/>);\r\n\r\n  const {_id, name, description, size, image, imagePublicId, location, price, creator} = plant;\r\n  if (!creator) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div className=\"container mt-5 row row-md-10 offset-md-4\">\r\n      <div className=\"mt-4 mb-3 pt-4 container\">\r\n        <h2> Plant details </h2>\r\n      </div>\r\n      <div className=\"col\">\r\n        <div className=\"card cardMediumWidth\">\r\n          {image && (<img className=\"card-img-top mediumPicSize\" src={image} alt={name}/>)}\r\n          <div className=\"ml-2 mt-2\"> <span> Name: </span> {name} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Description: </span> {description} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Size: </span> {size} cm </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Likes: </span> {location} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Price: </span> {price} € </div>\r\n          <div className=\"ml-2 mt-2 col justify-content-center\">\r\n            <div className=\"row-2 justify-content-center\">\r\n              <div className=\"card-body\">\r\n                {\r\n                  user._id === creator._id ? (\r\n                    <div>\r\n                      <Link to={\"/plants/update\"}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Update </button> </Link>\r\n                      <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={() => onDeletePlant(_id, imagePublicId)}> Delete </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <Link to={{pathname: \"/plants/checkout\", plant: plant}}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Buy </button> </Link>\r\n                      <Link to={{pathname: \"/requests/create\", plant: plant}}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Swap </button> </Link>\r\n                    </div>\r\n                  )\r\n                }\r\n                <Link to={\"/\"} onClick={() => scroll.scrollTo(headerHeight + aboutHeight)}> <button className=\"btn btn-sm ml-2\"> Go back </button> </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlantDetails;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst UpdatePlantForm = ({plant, onNameChange, onDescriptionChange, onSizeChange, onPriceChange, onLocationChange, onImageChange, onUpdatePlant}) => {\r\n  // Scroll to top as soon as page loads\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n\r\n  const {_id, name, description, size, image, price} = plant;\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mt-5 mb-4\"> Update your plant </h2>\r\n        <div className=\"card cardSmallWidth mb-5\">\r\n          <img className=\"mb-2 smallPicSize\" src={image} alt={name}/>\r\n          <div className=\"card-body\">\r\n            <input className=\"mb-2\" onChange={onImageChange} type=\"file\"/>\r\n            <input className=\"mb-2\"  type=\"text\" onChange={onNameChange} value={ name }/>\r\n            <input className=\"mb-2\"  type=\"text\" onChange={onDescriptionChange} value={description}/>\r\n            <input className=\"mb-2 smallWidth\"  type=\"number\" onChange={onSizeChange} value={size}/> cm <br/>\r\n            <select  className=\"mb-2\" onChange={onLocationChange} name=\"location\" type=\"text\" placeholder=\"Select\">\r\n              <option value=\"sun\"> sun </option>\r\n              <option value=\"shade\"> shade </option>\r\n              <option value=\"sun and shade\"> sun and shade </option>\r\n            </select> <br/>\r\n            <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" onChange={onPriceChange} value={price}/> € \r\n            <div className=\"row justify-content-around\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" onClick={() => onUpdatePlant(plant)}> Save changes </button>\r\n              <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePlantForm;","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\nimport {CardElement, useStripe, useElements} from \"@stripe/react-stripe-js\";\r\nimport config from \"../config\";\r\n\r\nconst CheckoutForm = ({plant, headerHeight, aboutHeight, onCheckout}) => {\r\n  const [isSucceeded, setIsSucceeded] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [isDisabled, setIsDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  \r\n  // Create PaymentIntent as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      window\r\n        .fetch(\r\n          `${config.API_URL}/api/create-payment-intent`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({price: plant.price})\r\n          }\r\n        )\r\n        .then(\r\n          res => res.json()\r\n        )\r\n        .then(\r\n          data => setClientSecret(data.clientSecret)\r\n        );\r\n        return () => scroll.scrollTo(headerHeight + aboutHeight);\r\n    },\r\n    []\r\n  );\r\n\r\n  // Card styling\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {color: \"#32325d\"}\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Listen for changes in Card element and display any errors as customer types card details\r\n  const handleChange = async event => {\r\n    setIsDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  // Handle payment\r\n  const handleSubmitPayment = async event => {\r\n    event.preventDefault();\r\n    setIsProcessing(true);\r\n    const payload = await stripe.confirmCardPayment(\r\n      clientSecret,\r\n      {payment_method: {card: elements.getElement(CardElement)}}\r\n    );\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setIsProcessing(false);\r\n    }\r\n    else {\r\n      setError(null);\r\n      setIsProcessing(false);\r\n      setIsSucceeded(true);\r\n    }\r\n  }\r\n  \r\n  const {_id, name, price} = plant;\r\n  return (\r\n    <div className=\"container col-9\">\r\n      <form className=\"checkoutForm mt-5\" id=\"payment-form\" onSubmit={handleSubmitPayment}>\r\n        <h2 className=\"text-center mb-2 p-2\"> {name} </h2>\r\n        <h3 className=\"text-center mb-4 p-2\"> {price} € </h3>\r\n        <CardElement \r\n          className=\"p-2\" \r\n          id=\"card-element\" \r\n          options={cardStyle} \r\n          onChange={handleChange}\r\n        />\r\n        <div className=\"row justify-content-center\">\r\n          <button onClick={onCheckout} className=\"btn btn-sm mt-5 mb-4\" disabled={isProcessing || isDisabled || isSucceeded} id=\"submit\">\r\n            <span id=\"button-text\">\r\n              {isProcessing ? <div className=\"spinner\" id=\"spinner\"/> : \"Pay now\"}\r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* Show any error that happens when processing the payment */\r\n          error && (<div className=\"card-error\" role=\"alert\"> {error} </div>)\r\n        /* Show success message upon completion */}\r\n        <p className={isSucceeded ? \"result-message text-center\" : \"result-message hidden text-center\"}>\r\n          Payment succeeded.\r\n        </p>\r\n      </form>\r\n      <div className=\"row justify-content-center\">\r\n        {\r\n          isSucceeded ? (\r\n            <Link to={\"/\"}> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n          ) \r\n          : (\r\n            <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutForm;","import React, {useEffect} from \"react\";\r\nimport {useLocation} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\nimport {loadStripe} from \"@stripe/stripe-js\";\r\nimport {Elements} from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\n\r\nconst promise = loadStripe(\"pk_test_51IQBsPA6EAM4YnfDyrjHWnLHzZ5KkI9tsERzYhBGVoctZBrFUb4Sda035HvcQKpp7thFiqW6QmO8ytPbOAMTg33z00cHvcbojv\");\r\n\r\nconst CheckoutPage = ({headerHeight, aboutHeight, onCheckout}) => {\r\n  const location = useLocation();\r\n  // Scroll to top as soon as page loads\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n\r\n  const {plant} = location;\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-6 offset-1 offset-md-5 App\">\r\n        <Elements stripe={promise}>\r\n          <CheckoutForm \r\n            onCheckout={onCheckout} \r\n            plant={plant}\r\n            headerHeight={headerHeight} \r\n            aboutHeight={aboutHeight}\r\n          />\r\n        </Elements>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;","import React, {useEffect} from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst RequestsPage = ({user, requests, amountOfRequests, onFetchAllRequests, onClearNewRequest}) => {\r\n  // Fetch all requests and reset values as soon as page loads and reset values during cleanup\r\n  useEffect(\r\n    () => {\r\n      const handleResetAll = () => {\r\n        onClearNewRequest();\r\n        scroll.scrollToTop();\r\n      }\r\n\r\n      onFetchAllRequests();\r\n      handleResetAll();\r\n      return () => handleResetAll()\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={\"/signup\"}/>);\r\n\r\n  if (!requests) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 > Your messages </h2>\r\n        <h3 className=\"mb-4\"> [{amountOfRequests}] </h3>\r\n        <Link to={\"/\"}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n        {\r\n          requests.map(\r\n            request => {\r\n              const {_id, buyer, seller, plant} = request;\r\n              return (\r\n                seller._id === user._id && (\r\n                  <div className=\"card p-3 mt-4 \" key={_id}>\r\n                    <h4> Request for: {plant.name} </h4>\r\n                    <h5> by: {buyer.username} </h5>\r\n                    <div>\r\n                      <Link className=\"btn btn-outline-dark\" to={`/requests/read/${_id}`}> Details </Link>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              );\r\n            } \r\n          )\r\n        }\r\n        {amountOfRequests !== 0 && (<Link to={\"/\"}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>)}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestsPage;","import React, {useEffect} from \"react\";\r\nimport {Link, useLocation} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst CreateRequestForm = ({error, onCreateRequest, onClearError}) => {\r\n  const location = useLocation();\r\n  // Scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  const {plant} = location;\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-4\"> Your mesage </h2>\r\n        <h3 className=\"mb-4\"> {plant.name} </h3>\r\n        <form onSubmit={(event) => onCreateRequest(event, plant)}>\r\n          <div>\r\n            <textarea className=\"mb-4\" name=\"message\" cols=\"35\" rows=\"7\"/>\r\n          </div>\r\n          {error && (<p className=\"warningColor\"> {error} </p>)}\r\n          <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\"> Send </button>\r\n          <Link to={`/plants/read/${plant._id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateRequestForm;","import React, {useEffect}  from \"react\";\r\nimport {Link, useParams} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst RequestDetails = ({request, onReadRequest, onDeleteRequest}) => {\r\n  const {requestId} = useParams();\r\n  // Read request and scroll to top as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      onReadRequest(requestId);\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  const {_id, buyer, plant, message, reply} = request;\r\n  if (!buyer || !plant) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Your request </h2>\r\n        <h4> for: {plant.name} </h4>\r\n        <h5> by: {buyer.username} </h5>\r\n        <p> {message} </p>\r\n        {\r\n          reply && (\r\n            <div>\r\n              <h5> Your reply: </h5>\r\n              <p> {reply} </p>\r\n            </div>\r\n          )\r\n        }\r\n        <div>\r\n          {!reply && (<Link to={`/requests/update/${_id}`}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Reply </button> </Link>)}\r\n          <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={() => onDeleteRequest(_id)}> Delete </button>\r\n        </div>\r\n        <Link to={\"/requests/fetch\"} onClick={scroll.scrollToTop}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestDetails;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst UpdateRequestForm = ({request, onCreateReply, onUpdateRequest}) => {\r\n  // Scroll to top as soon as page loads\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n\r\n  const {_id, message} = request;\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mt-5 mb-4\"> Reply your request </h2>\r\n        <div className=\"card cardSmallWidth mb-5\">\r\n          <div className=\"card-body\">\r\n            <p> {message} </p>\r\n            <textarea className=\"mb-4\" name=\"reply\" cols=\"31\" rows=\"6\" placeholder=\"Your reply\" onChange={onCreateReply}/>\r\n            <div className=\"row justify-content-around\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" onClick={() => onUpdateRequest(request)}> Submit </button>\r\n              <Link to={`/requests/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateRequestForm;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"notFound\">\r\n      <div>\r\n        <h2> \r\n          Oh-oh! <br/> <br/>\r\n          We think you got lost in the jungle!\r\n        </h2>\r\n        <h3> 404 Not Found </h3>\r\n        <Link to={\"/\"}> <button className=\"btn btn-sm ml-2\"> Take me home </button> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React, {useEffect} from \"react\";\r\n\r\nconst KommunicateChat = () => {\r\n  // Create launcher icon as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      (\r\n        (d, m) => {\r\n          const kommunicateSettings = { \r\n            \"appId\": \"10b22c52854a305b79bbdecc356bea5\", \r\n            \"popupWidget\": true, \r\n            \"automaticChatOpenOnNavigation\": true \r\n          };\r\n          const s = document.createElement(\"script\"); \r\n          s.type = \"text/javascript\"; \r\n          s.async = true;\r\n          s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n          const h = document.getElementsByTagName(\"head\")[0]; \r\n          h.appendChild(s);\r\n          window.kommunicate = m; \r\n          m._globals = kommunicateSettings;\r\n        }\r\n      )\r\n      (\r\n        document, \r\n        window.kommunicate || {}\r\n      );\r\n    },\r\n    []\r\n  );\r\n\r\n  return (<div/>);\r\n}\r\n\r\nexport default KommunicateChat;","import React, {useState, useEffect} from \"react\";\r\nimport {Route, Switch, withRouter, useHistory} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\nimport config from \"./config\";\r\nimport axios from \"axios\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.min.css\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./components/Home\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport LogOut from \"./components/LogOut\";\r\nimport CreatePlantForm from \"./components/CreatePlantForm\";\r\nimport PlantDetails from \"./components/PlantDetails\";\r\nimport UpdatePlantForm from \"./components/UpdatePlantForm\";\r\nimport CheckoutPage from \"./components/CheckoutPage\";\r\nimport RequestsPage from \"./components/RequestsPage\";\r\nimport CreateRequestForm from \"./components/CreateRequestForm\";\r\nimport RequestDetails from \"./components/RequestDetails\";\r\nimport UpdateRequestForm from \"./components/UpdateRequestForm\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport KommunicateChat from \"./components/Chat\";\r\n\r\nconst App = () => {\r\n  const [isFetchingUser, setIsFetchingUser] = useState(true);\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const [isUserChange, setIsUserChange] = useState(false);\r\n  const [plants, setPlants] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [plant, setPlant] = useState({});\r\n  const [requests, setRequests] = useState([]);\r\n  const [request, setRequest] = useState({});\r\n  const [amountOfRequests, setAmountOfRequests] = useState(0);\r\n  const [isNewRequest, setIsNewRequest] = useState(false);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [minutesCounter, setMinutesCounter] = useState(0);\r\n  const [headerHeight, setHeaderHeight] = useState(0);\r\n  const [aboutHeight, setAboutHeight] = useState(0);\r\n  const [error, setError] = useState(null);\r\n\r\n  const history = useHistory();\r\n  \r\n  // Get height of header and about elements\r\n  const handleGetElementsHeight = () => {\r\n    setHeaderHeight(Math.round(document.querySelector(\"#titleId\").getBoundingClientRect().height));\r\n    setAboutHeight(Math.round(document.querySelector(\"#aboutId\").getBoundingClientRect().height));\r\n  }\r\n\r\n  // Clear error message\r\n  const handleClearError = () => setError(null)\r\n\r\n  // ---------- Plants ----------\r\n\r\n  // Fetch all plants\r\n  const handleFetchAllPlants = () => {\r\n    axios.get(`${config.API_URL}/api/plants/fetch`)\r\n      .then(\r\n        response => setPlants(response.data)\r\n      )\r\n      .catch(\r\n        err => console.log(\"Fetching plants failed\", err)\r\n      );\r\n  }\r\n\r\n  // Load plants and user data as soon as page loads\r\n  useEffect(\r\n    () => {\r\n      handleFetchAllPlants();\r\n      if (!loggedInUser) {\r\n        axios.get(`${config.API_URL}/api/user`, {withCredentials: true})\r\n          .then(\r\n            response => {\r\n              setLoggedInUser(response.data);\r\n              setIsFetchingUser(false);\r\n            }\r\n          )\r\n          .catch(\r\n            err => {\r\n              setIsFetchingUser(false);\r\n              console.log(\"Initializing fetching failed\", err);\r\n            }\r\n          );\r\n      }\r\n      return () => intervalId && clearInterval(intervalId);\r\n    },\r\n    []\r\n  );\r\n\r\n  // Search plant\r\n  const handleSearchPlant = event => setQuery(event.target.value)\r\n\r\n  // Handle plant search result\r\n  useEffect(\r\n    () => {\r\n      // Fetch query plants\r\n      const handleFetchQueryPlants = () => {\r\n        axios.get(`${config.API_URL}/api/plants/search?q=${query}`)\r\n          .then(\r\n            response => setPlants(response.data)\r\n          )\r\n          .catch(\r\n            err => console.log(\"Query fetching failed\", err)\r\n          );\r\n      }\r\n      query ? handleFetchQueryPlants() : handleFetchAllPlants()\r\n    },\r\n    [query]\r\n  );\r\n\r\n  // Create plant\r\n  const handleCreatePlant = event => {\r\n    event.preventDefault();\r\n    const {name, description, size, plantImage, location, price} = event.target;\r\n    const image = plantImage.files[0];\r\n    const uploadForm = new FormData();\r\n    uploadForm.append(\"image\", image);\r\n    axios.post(`${config.API_URL}/api/upload`, uploadForm)\r\n      .then(\r\n        response => {\r\n          const {image, imagePublicId} = response.data;\r\n          const newPlant = {\r\n            name: name.value,\r\n            description: description.value,\r\n            size: size.value,\r\n            image,\r\n            imagePublicId,\r\n            location: location.value,\r\n            price: price.value\r\n          };\r\n          axios.post(\r\n            `${config.API_URL}/api/plants/create`, \r\n            newPlant, \r\n            {withCredentials: true}\r\n          )\r\n            .then(\r\n              response => {\r\n                setPlants([response.data, ...plants]);\r\n                history.push(\"/\");\r\n              } \r\n            )\r\n            .catch(\r\n              err => setError(err.response.data.error)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        err => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Read plant\r\n  const handleReadPlant = plantId => {\r\n    axios.get(\r\n      `${config.API_URL}/api/plants/read/${plantId}`,\r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        response => setPlant(response.data)\r\n      )\r\n      .catch(\r\n        () => console.log(\"Read plant failed\")\r\n      );\r\n  }\r\n\r\n  // Plant name changed\r\n  const handleNameChange = event => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    clonePlant.name = event.target.value;\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant description changed\r\n  const handleDescriptionChange = event => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    clonePlant.description = event.target.value;\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant size changed\r\n  const handleSizeChange = event => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    clonePlant.size = event.target.value;\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant price changed\r\n  const handlePriceChange = event => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    clonePlant.price = event.target.value;\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant location changed\r\n  const handleLocationChange = event => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    clonePlant.location = event.target.value;\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant image changed\r\n  const handleImageChange = event => {\r\n    const image = event.target.files[0];\r\n    const {imagePublicId} = plant;\r\n    const destroyImageData = {\r\n      imagePublicId\r\n    }\r\n    axios.post(\r\n      `${config.API_URL}/api/destroy`, \r\n      destroyImageData\r\n    )\r\n      .then(\r\n        () => {\r\n          const uploadForm = new FormData();\r\n          uploadForm.append(\"image\", image);\r\n          axios.post(\r\n            `${config.API_URL}/api/upload`, \r\n            uploadForm\r\n          )\r\n            .then(\r\n              response => {\r\n                const clonePlant = JSON.parse(JSON.stringify(plant));\r\n                const {imagePublicId, image} = response.data;\r\n                clonePlant.imagePublicId = imagePublicId;\r\n                clonePlant.image = image;\r\n                setPlant(clonePlant);\r\n              }\r\n            )\r\n            .catch(\r\n              err => console.log(\"Image upload failed\", err)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Delete old image failed\", err)\r\n      );\r\n  }\r\n\r\n  // Update plant\r\n  const handleUpdatePlant = plant => {\r\n    const {_id, name, description, size, image, imagePublicId, location, price} = plant;\r\n    const updatedPlant = {\r\n      name,\r\n      description,\r\n      size,\r\n      image,\r\n      imagePublicId,\r\n      location,\r\n      price\r\n    };\r\n    axios.patch(\r\n      `${config.API_URL}/api/plants/update/${_id}`,\r\n       updatedPlant\r\n    )\r\n      .then(\r\n        () => {\r\n          setPlants(\r\n            plants.map(\r\n              singlePlant => {\r\n                if (singlePlant._id === _id) {\r\n                  singlePlant.name = name;\r\n                  singlePlant.description = description;\r\n                  singlePlant.size = size;\r\n                  singlePlant.image = image;\r\n                  singlePlant.imagePublicId = imagePublicId;\r\n                  singlePlant.location = location;\r\n                  singlePlant.price = price;\r\n                }\r\n                return singlePlant;\r\n              }\r\n            )\r\n          );\r\n          history.push(\"/\");\r\n          scroll.scrollTo(headerHeight + aboutHeight);\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Update plant failed\", err)\r\n      );\r\n  }\r\n\r\n  // Delete Plant\r\n  const handleDeletePlant = (plantId, imagePublicId) => {\r\n    const destroyImageData = {\r\n      imagePublicId\r\n    }\r\n    axios.post(\r\n      `${config.API_URL}/api/destroy`, \r\n      destroyImageData\r\n    )\r\n      .then(\r\n        () => {\r\n          axios.delete(`${config.API_URL}/api/plants/delete/${plantId}`)\r\n            .then(\r\n              () => {\r\n                setPlants(plants.filter(plant => plant._id !== plantId));\r\n                history.push(\"/\");\r\n                scroll.scrollTo(headerHeight + aboutHeight);\r\n              }\r\n            )\r\n            .catch(\r\n              err => console.log(\"Delete plant failed\", err)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Delete image failed\", err)\r\n      );\r\n  }  \r\n\r\n  // Plant payment\r\n  const handleCheckout = () => {\r\n    axios.post(\r\n      `${config.API_URL}/api/create-payment-intent`, \r\n      {}, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        () => history.push(\"/\")\r\n      )\r\n      .catch(\r\n        err => console.log(\"Checkout failed\", err)\r\n      );\r\n  }\r\n\r\n  // ---------- Requests ----------\r\n\r\n  // Start request check if user changes\r\n  useEffect(\r\n    () => {\r\n      if (isUserChange) {\r\n        setIsUserChange(false);\r\n        axios.get(`${config.API_URL}/api/requests/fetch`)\r\n          .then(\r\n            response => {\r\n              setRequests(response.data);\r\n              setAmountOfRequests(requests.filter(currentRequest => currentRequest.seller._id === loggedInUser._id).length);\r\n              setIntervalId(\r\n                setInterval(\r\n                  () => setMinutesCounter(minutesCounter => minutesCounter += 1), \r\n                  10000 // every minute\r\n                )\r\n              );\r\n            }\r\n          )\r\n          .catch(\r\n            err => console.log(\"Checking requests failed\", err)\r\n          );\r\n      }\r\n    },\r\n    [isUserChange]\r\n  );\r\n\r\n  // Check new requests for logged in user every minute\r\n  useEffect(\r\n    () => {\r\n      axios.get(`${config.API_URL}/api/requests/fetch`)\r\n        .then(\r\n          response => {\r\n            setRequests(response.data);\r\n            const currentAmountOfRequests = requests.filter(currentRequest => currentRequest.seller._id === loggedInUser._id).length;\r\n            if (amountOfRequests < currentAmountOfRequests) {\r\n              setAmountOfRequests(currentAmountOfRequests);\r\n              setIsNewRequest(true);\r\n            }\r\n          }\r\n        )\r\n        .catch(\r\n          err => console.log(\"Checking requests failed\", err)\r\n        );\r\n    },\r\n    [minutesCounter]\r\n  );\r\n\r\n  // Clear state for new received requests\r\n  const handleClearNewRequest = () => setIsNewRequest(false)\r\n  \r\n  // Fetch all requests\r\n  const handleFetchAllRequests = () => {\r\n    axios.get(`${config.API_URL}/api/requests/fetch`)\r\n      .then(\r\n        response => setRequests(response.data)\r\n      )\r\n      .catch(\r\n        err => console.log(\"Fetching requests failed\", err)\r\n      );\r\n  }\r\n\r\n  // Create request\r\n  const handleCreateRequest = (event, plant) => {\r\n    event.preventDefault();\r\n    const {message} = event.target;\r\n    const {_id, creator} = plant;\r\n    const newRequest = {\r\n      seller: creator._id,\r\n      plant: _id,\r\n      message: message.value\r\n    };\r\n    axios.post(\r\n      `${config.API_URL}/api/requests/create`, \r\n      newRequest, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        response => {\r\n          setRequests([response.data, ...requests]);\r\n          history.push(`/plants/read/${plant._id}`);\r\n        }\r\n      )\r\n      .catch(\r\n        err => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Read request\r\n  const handleReadRequest = requestId => {\r\n    axios.get(\r\n      `${config.API_URL}/api/requests/read/${requestId}`,\r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        response => setRequest(response.data)\r\n      )\r\n      .catch(\r\n        () => console.log(\"Read request failed\")\r\n      );\r\n  }\r\n\r\n  // Create reply\r\n  const handleCreateReply = event => {\r\n    const cloneRequest = JSON.parse(JSON.stringify(request));\r\n    cloneRequest.reply = event.target.value;\r\n    setRequest(cloneRequest);\r\n  }\r\n\r\n  // Update request\r\n  const handleUpdateRequest = request => {\r\n    const {_id, buyer, seller, plant, message, reply} = request;\r\n    const updatedRequest = {\r\n      buyer,\r\n      seller,\r\n      plant,\r\n      message,\r\n      reply\r\n    };\r\n    axios.patch(\r\n      `${config.API_URL}/api/requests/update/${_id}`, \r\n      updatedRequest\r\n    )\r\n      .then(\r\n        () => {\r\n          setRequests(\r\n            requests.map(\r\n              singleRequest => {\r\n                if (singleRequest._id === _id) {\r\n                  singleRequest.buyer = buyer;\r\n                  singleRequest.seller = seller;\r\n                  singleRequest.plant = plant;\r\n                  singleRequest.message = message;\r\n                  singleRequest.reply = reply;\r\n                }\r\n                return singleRequest;\r\n              }\r\n            )\r\n          );\r\n          history.push(`/requests/read/${_id}`);\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Update request failed\", err)\r\n      );\r\n  }\r\n\r\n  // Delete request\r\n  const handleDeleteRequest = requestId => {\r\n    axios.delete(`${config.API_URL}/api/requests/delete/${requestId}`)\r\n      .then(\r\n        () => {\r\n          setRequests(requests.filter(request => request._id !== requestId));\r\n          setAmountOfRequests(amountOfRequests => amountOfRequests -= 1);\r\n          history.push(\"/requests/fetch\");\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Delete request failed\", err)\r\n      );\r\n  }\r\n\r\n  // ---------- Authentification ----------\r\n\r\n  // Signup\r\n  const handleSignUp = event => {\r\n    event.preventDefault();\r\n    const {username, email, password} = event.target;\r\n    const newUser = {\r\n      username: username.value,\r\n      email: email.value.toLowerCase(),\r\n      password: password.value\r\n    };\r\n    axios.post(\r\n      `${config.API_URL}/api/signup`, \r\n      newUser\r\n    )\r\n      .then(\r\n        response => {\r\n          setLoggedInUser(response.data);\r\n          setIsUserChange(true);\r\n          history.push(\"/\");\r\n        }\r\n      )\r\n      .catch(\r\n        err => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Signin\r\n  const handleSignIn = event => {\r\n    event.preventDefault();\r\n    const {email, password} = event.target;\r\n    const user = {\r\n      email: email.value,\r\n      password: password.value\r\n    };\r\n    axios.post(\r\n      `${config.API_URL}/api/signin`, \r\n      user, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        response => {\r\n          setLoggedInUser(response.data);\r\n          setIsUserChange(true);\r\n          history.push(\"/\");\r\n        }\r\n      )\r\n      .catch(\r\n        err => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Logout\r\n  const handleLogOut = () => {\r\n    axios.post(\r\n      `${config.API_URL}/api/logout`, \r\n      {}, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        () => {\r\n          setLoggedInUser(null);\r\n          clearInterval(intervalId);\r\n          history.push(\"/\");\r\n        }\r\n      )\r\n      .catch(\r\n        err => console.log(\"Logout failed\", err)\r\n      );\r\n  }\r\n\r\n  if (isFetchingUser) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  \r\n  return (\r\n    <div class=\"main\">\r\n      <NavBar \r\n        onLogOut={handleLogOut} \r\n        isNewRequest={isNewRequest} \r\n        user={loggedInUser} \r\n        headerHeight={headerHeight} \r\n        aboutHeight={aboutHeight}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home \r\n            onSearchPlant={handleSearchPlant} \r\n            onGetElementsHeight={handleGetElementsHeight} \r\n            plants={plants} query={query} \r\n            headerHeight={headerHeight}\r\n          />\r\n        </Route>\r\n        <Route path=\"/plants/create\">\r\n        <CreatePlantForm \r\n          onCreatePlant={handleCreatePlant} \r\n          onClearError={handleClearError} \r\n          user={loggedInUser} \r\n          headerHeight={headerHeight} \r\n          aboutHeight={aboutHeight} \r\n          error={error} \r\n        />\r\n      </Route>\r\n      <Route path=\"/plants/read/:plantId\">\r\n        <PlantDetails \r\n          onReadPlant={handleReadPlant} \r\n          onDeletePlant={handleDeletePlant} \r\n          plant={plant} user={loggedInUser} \r\n          headerHeight={headerHeight} \r\n          aboutHeight={aboutHeight}\r\n        />\r\n      </Route>\r\n        <Route path=\"/plants/update\">\r\n          <UpdatePlantForm \r\n            onNameChange={handleNameChange} \r\n            onDescriptionChange={handleDescriptionChange} \r\n            onSizeChange={handleSizeChange} \r\n            onPriceChange={handlePriceChange} \r\n            onLocationChange={handleLocationChange} \r\n            onImageChange={handleImageChange} \r\n            onUpdatePlant={handleUpdatePlant} \r\n            plant={plant} headerHeight={headerHeight} \r\n            aboutHeight={aboutHeight}\r\n          />\r\n        </Route>\r\n        <Route path=\"/plants/checkout\">\r\n          <CheckoutPage \r\n            onCheckout={handleCheckout} \r\n            headerHeight={headerHeight} \r\n            aboutHeight={aboutHeight}\r\n          />\r\n        </Route>\r\n\r\n        <Route path=\"/requests/fetch\">\r\n          <RequestsPage \r\n            onFetchAllRequests={handleFetchAllRequests} \r\n            onClearNewRequest={handleClearNewRequest}  \r\n            user={loggedInUser} requests={requests} \r\n            amountOfRequests={amountOfRequests} \r\n          />\r\n        </Route>\r\n        <Route path=\"/requests/create\">\r\n          <CreateRequestForm \r\n            onCreateRequest={handleCreateRequest} \r\n            onClearError={handleClearError} \r\n            user={loggedInUser} \r\n            error={error}\r\n          />\r\n        </Route>\r\n        <Route path=\"/requests/read/:requestId\">\r\n          <RequestDetails \r\n            onReadRequest={handleReadRequest} \r\n            onDeleteRequest={handleDeleteRequest} \r\n            request={request} \r\n            user={loggedInUser}\r\n          />\r\n        </Route>\r\n        <Route path=\"/requests/update\">\r\n          <UpdateRequestForm \r\n            onCreateReply={handleCreateReply} \r\n            onUpdateRequest={handleUpdateRequest} \r\n            request={request}\r\n          />\r\n        </Route>\r\n\r\n        <Route path=\"/signup\">\r\n          <SignUp \r\n            onSignUp={handleSignUp} \r\n            onClearError={handleClearError} \r\n            onClearNewRequest={handleClearNewRequest} \r\n            error={error} \r\n          />\r\n        </Route>\r\n        <Route path=\"/signin\">\r\n          <SignIn \r\n            onSignIn={handleSignIn} \r\n            onClearError={handleClearError} \r\n            onClearNewRequest={handleClearNewRequest} \r\n            error={error}\r\n          />\r\n        </Route>\r\n        <Route path=\"/logout\">\r\n         <LogOut \r\n            onLogOut={handleLogOut} \r\n            onClearNewRequest={handleClearNewRequest} \r\n          />\r\n        </Route>\r\n\r\n        <Route component={NotFound}/>\r\n      </Switch>\r\n      <KommunicateChat/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\nimport App from \"./App\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}