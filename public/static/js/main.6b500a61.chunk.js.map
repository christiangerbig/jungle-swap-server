{"version":3,"sources":["config.js","components/NavBar.js","components/Footer.js","images/JungleSwap_Home.png","images/JungleSwap_Icon.png","components/Home.js","components/SignUp.js","components/SignIn.js","components/LogOut.js","components/CreatePlantForm.js","components/PlantDetails.js","components/UpdatePlantForm.js","components/CheckoutForm.js","components/CheckoutPage.js","components/RequestsPage.js","components/CreateRequestForm.js","components/RequestDetails.js","components/UpdateRequestForm.js","components/NotFound.js","components/Chat.js","App.js","index.js"],"names":["process","NavBar","user","newRequestsReceived","headerHeight","introHeight","onCheckRequests","useEffect","intervalId","setInterval","clearInterval","Navbar","className","variant","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","onClick","scroll","scrollTo","title","username","Footer","Home","plants","query","onSearchPlant","onHandleElementsHeight","src","image","alt","icon","type","placeholder","value","onChange","map","plant","_id","name","price","class","role","SignUp","error","onSignUp","onResetError","onResetNewRequestsReceived","scrollToTop","onSubmit","htmlFor","SignIn","onSignIn","LogOut","onLogOut","CreatePlantForm","onCreatePlant","min","PlantDetails","match","onReadPlant","onDeletePlant","params","plantId","description","size","imagePublicId","location","creator","pathname","UpdatePlantForm","onReadRequest","onNameChange","onDescriptionChange","onSizeChange","onPriceChange","onLocationChange","onImageChange","onUpdatePlant","requestId","CheckoutForm","onCheckout","useState","succeeded","setSucceeded","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","window","fetch","config","method","headers","body","JSON","stringify","then","res","json","data","handleChange","event","a","empty","message","handleSubmit","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","payload","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","promise","loadStripe","CheckoutPage","RequestsPage","requests","currentRequestsNumber","onFetchAllRequests","handleGoBack","request","buyer","seller","CreateRequestForm","onCreateRequest","cols","rows","RequestDetails","onDeleteRequest","reply","UpdateRequestForm","onCreateReply","onUpdateRequest","NotFound","KommunicateChat","d","m","s","document","createElement","async","getElementsByTagName","appendChild","kommunicate","_globals","Component","App","props","state","fetchingUser","loggedInUser","initRequestsNumber","handleElementsHeight","bind","resetError","fetchAllPlants","fetchQueryPlants","handleSearchPlant","handleCreatePlant","handleReadPlant","handleNameChange","handleDescriptionChange","handleSizeChange","handlePriceChange","handleLocationChange","handleImageChange","handleUpdatePlant","handleDeletePlant","handleCheckout","handleFetchAllRequests","handleCheckRequests","resetNewRequestsReceived","handleCreateRequest","handleReadRequest","handleCreateReply","handleUpdateRequest","handleDeleteRequest","handleSignUp","handleSignIn","handleLogOut","Math","round","querySelector","getBoundingClientRect","height","this","setState","axios","get","response","catch","err","console","log","withCredentials","ready","target","plantImage","files","uploadForm","FormData","append","post","newPlant","history","push","clonePlant","parse","destroyImageData","updatedPlant","patch","updatedPlants","singlePlant","delete","filteredPlants","filter","currentRequests","currentRequest","length","newRequest","cloneRequest","updatedRequest","updatedRequests","singleRequest","filteredRequests","email","password","newUser","toLowerCase","exact","path","render","routeProps","component","withRouter","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6b500a61.chunk.js","sourcesContent":["export default {API_URL: process.env.REACT_APP_SERVER_URL};","import React, {useEffect} from \"react\";\r\nimport {Navbar, Nav} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst NavBar = ({user, newRequestsReceived, headerHeight, introHeight, onCheckRequests}) => {\r\n  useEffect(\r\n    () => {\r\n      const intervalId =  setInterval(\r\n        () => onCheckRequests(), \r\n        10000 // check every minute\r\n      );\r\n      return () => clearInterval(intervalId);\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <Navbar className=\"pl-5\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n        <Navbar.Brand href=\"/\"> JungleSwap </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <div>\r\n              <Link to=\"/\" className=\"p-2\" onClick={() => scroll.scrollTo(headerHeight+introHeight)}> All Plants </Link>\r\n            </div>\r\n            {\r\n              user ? (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/plants/create\"> Create Plant </Link>\r\n                  <Link className={newRequestsReceived ? \"p-2 alertColor\" : \"p-2\"} to=\"/requests/fetch\" title={newRequestsReceived ? \"new message\" : null}> Messages </Link>\r\n                </div>\r\n              ) : null\r\n            }\r\n            {\r\n              user ? (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/logout\" title={user.username}> Log out </Link>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/signin\"> Sign in </Link>\r\n                  <Link className=\"p-2\" to=\"/signup\"> Sign up </Link>\r\n                </div>\r\n              )\r\n            }\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-row\">\r\n      <footer> \r\n        © 2021 \r\n        <Link href=\"https://www.linkedin.com/in/christian-gerbig/\"> Christian Gerbig </Link> \r\n        & \r\n        <Link href=\"https://www.linkedin.com/in/lisa-montebaur/\"> Lisa Montebaur </Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/JungleSwap_Home.c4ed9b4c.png\";","export default __webpack_public_path__ + \"static/media/JungleSwap_Icon.a6c7c44a.png\";","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\nimport image from \"../images/JungleSwap_Home.png\";\r\nimport icon from \"../images/JungleSwap_Icon.png\";\r\n\r\nconst Home = ({plants, query, headerHeight, onSearchPlant, onHandleElementsHeight}) => {\r\n  useEffect(\r\n    () => onHandleElementsHeight(),\r\n    []\r\n  );\r\n\r\n  if (!plants) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      {/* Title */}\r\n      <header className=\"text-center pt-5 pb-5 headerImg\" id=\"titleId\">\r\n        <div className=\"row my-5\">\r\n          <div className=\"col-6 offset-3 my-5 borderAround\">\r\n            <h2 className=\"title mb-2\"> JungleSwap </h2>\r\n            <h5 className=\"mt-3 mb-5\"> Share your green heart </h5>\r\n            <div className=\"mb-5\">\r\n              <Link className=\"biggerFontSize\" onClick={() => scroll.scrollTo(headerHeight)}> Try it! </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      {/* About */}\r\n      <section id=\"aboutId\">\r\n        <div className=\"about centered container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 col-md-5 col-lg-6\">\r\n              <img className=\"image\" src={image} alt=\"plants\"/>\r\n            </div>\r\n            <br />\r\n            <div className=\"about col-sm-6 col-md-5 col-lg-6 px-5 noOverflow\">\r\n              <h4> Welcome to JungleSwap! </h4>\r\n              <h5> Add green to your Home </h5>\r\n              <p> It\"s easy-peasy. <br/>\r\n                Share your plant offshoots. <br/>\r\n                Make money! <br/>\r\n                Or swap them for another plant. <br/>\r\n                Don\"t have any baby plants? <br/>\r\n                You can simply shop and give a plant a new home.\r\n              </p>\r\n              <img className=\"icon\" src={icon} alt=\"icon\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* Display plants */}\r\n      <section>\r\n        <div className=\"container mt-5\">\r\n          <div className=\"mt-5 mb-3\">\r\n            <h2> Plants </h2>\r\n            <hr/>\r\n            <h4> Search a plant </h4>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <input className=\"smallWidth form-control\" type=\"text\" placeholder=\"Search...\" value={query} onChange={onSearchPlant}/>\r\n          </div>\r\n          <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n            {\r\n              plants.map(\r\n                (plant) => {\r\n                  const {_id, name, image, price} = plant;\r\n                  return (\r\n                    <div className=\"col mb-5\" key={_id}>\r\n                      <div className=\"card card-medium-width text-center h-100\">\r\n                        <img className=\"card-img-top mediumPicSize\" src={image} alt={name}/>\r\n                        <div className=\"card-body mb-5\">\r\n                          <h5> {name} </h5>\r\n                          <p> {price} € </p>\r\n                          <Link className=\"btn btn-outline-dark\" to={`/plants/read/${_id}`}> Details </Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst SignUp = ({error, onSignUp, onResetError, onResetNewRequestsReceived}) => {\r\n  useEffect(\r\n    () => {\r\n      onResetError();\r\n      onResetNewRequestsReceived();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Sign Up </h2>\r\n        <form onSubmit={onSignUp}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputUsername\"> Username </label>\r\n            <input type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputEmail\"> Email address </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputPassword\"> Password </label>\r\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\"/>\r\n          </div>\r\n          {\r\n            error ? <p className=\"warningColor\"> {error} </p> : null            \r\n          }\r\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\"> Sign up </button>\r\n          <p className=\"padding\"> Already have an account? </p>\r\n          <Link to={\"/signin\"}> Sign in </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import React, {useEffect} from \"react\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst SignIn = ({error, onSignIn, onResetError, onResetNewRequestsReceived}) => {\r\n  useEffect(\r\n    () => {\r\n      onResetError();\r\n      onResetNewRequestsReceived();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5 custom fullscreen\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Sign In </h2>\r\n        <form onSubmit={onSignIn}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputEmail\"> Email address </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputPassword\"> Password </label>\r\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\"/>\r\n          </div>\r\n          {\r\n            error ? <p className=\"warningColor\"> {error} </p> : null            \r\n          }\r\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\"> Sign in </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React, {useEffect} from \"react\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst LogOut = ({onLogOut, onResetNewRequestsReceived}) => {\r\n  useEffect(\r\n    () => {\r\n      onLogOut();\r\n      onResetNewRequestsReceived();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (<div/>);\r\n}\r\n\r\nexport default LogOut;","import React, {useEffect} from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst CreatePlantForm = ({user, headerHeight, introHeight, error, onCreatePlant, onResetError}) => {\r\n  useEffect(\r\n    () => {\r\n      onResetError();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={\"/signup\"}/>);\r\n  return (\r\n    <div className=\"container row mt-5 fullscreen\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-6\">\r\n        <h2 className=\"mb-5\"> Create a plant </h2>\r\n        <form onSubmit={onCreatePlant}>\r\n          <input className=\"mb-4\" name=\"name\" type=\"text\" placeholder=\"Enter name\"/>\r\n          <input className=\"mb-4\" name=\"description\" type=\"text\" placeholder=\"Enter description\"/>\r\n          <input className=\"mb-4 smallWidth\" name=\"size\" type=\"number\" min=\"1\" placeholder=\"Size\"/> cm <br/>\r\n          <select className=\"mb-4 p-1\" name=\"location\" type=\"text\">\r\n            <option> Select location </option>\r\n            <option value=\"sun\"> sun </option>\r\n            <option value=\"shade\"> shade </option>\r\n            <option value=\"sun and shade\"> sun and shade </option>\r\n          </select>\r\n          <br/>\r\n          <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" placeholder=\"Price\"/> € <br/>\r\n          <input className=\"mb-4\" name=\"plantImage\" type=\"file\"/>\r\n          {\r\n            error ? <p className=\"warningColor\"> {error} </p> : null            \r\n          }\r\n          <div className=\"col-12\">\r\n            <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\" > Create </button>\r\n            <Link to={\"/\"} onClick={() => scroll.scrollTo(headerHeight+introHeight)}> <button className=\"btn btn-sm mx-5\"> Go back </button> </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePlantForm;","import React, {useEffect} from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst PlantDetails = ({match, user, plant, headerHeight, introHeight, onReadPlant, onDeletePlant}) => {\r\n  useEffect(\r\n    () => {\r\n      onReadPlant(match.params.plantId);\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={ \"/signup\" }/>);\r\n  const {_id, name, description, size, image, imagePublicId, location, price, creator} = plant;\r\n  if (!creator) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"container mt-5 row row-md-10 offset-md-4\">\r\n      <div className=\"mt-4 mb-3 pt-4 container\">\r\n        <h2> Plant details </h2>\r\n      </div>\r\n      <div className=\"col\">\r\n        <div className=\"card cardMediumWidth\">\r\n          {\r\n            image ? <img className=\"card-img-top mediumPicSize\" src={image} alt={name}/> : null\r\n          }\r\n          <div className=\"ml-2 mt-2\"> <span> Name: </span> {name} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Description: </span> {description} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Size: </span> {size} cm </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Likes: </span> {location} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Price: </span> {price} € </div>\r\n          <div className=\"ml-2 mt-2 col justify-content-center\">\r\n            <div className=\"row-2 justify-content-center\">\r\n              <div className=\"card-body\">\r\n                {\r\n                  user._id === creator._id ? (\r\n                    <div>\r\n                      <Link to={\"/plants/update\"}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Update </button> </Link>\r\n                      <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={() => onDeletePlant(_id, imagePublicId)}> Delete </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <Link to={{pathname: `/plants/checkout/${_id}`, plant: plant}}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Buy </button> </Link>\r\n                      <Link to={{pathname: \"/requests/create\", plant: plant}}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Swap </button> </Link>\r\n                    </div>\r\n                  )\r\n                }\r\n                <Link to={\"/\"} onClick={() => scroll.scrollTo(headerHeight+introHeight)}> <button className=\"btn btn-sm ml-2\"> Go back </button> </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlantDetails;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst UpdatePlantForm = ({match, plant, onReadRequest, onNameChange, onDescriptionChange, onSizeChange, onPriceChange, onLocationChange, onImageChange, onUpdatePlant}) => {\r\n  useEffect(\r\n    () => {\r\n      onReadRequest(match.params.requestId);\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  const {_id, name, description, size, image, price} = plant;\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mt-5 mb-4\"> Update your plant </h2>\r\n        <div className=\"card cardSmallWidth mb-5\">\r\n          <img className=\"mb-2 smallPicSize\" src={image} alt={name}/>\r\n          <div className=\"card-body\">\r\n            <input className=\"mb-2\" onChange={onImageChange} type=\"file\"/>\r\n            <input className=\"mb-2\"  type=\"text\" onChange={onNameChange} value={ name }/>\r\n            <input className=\"mb-2\"  type=\"text\" onChange={onDescriptionChange} value={description}/>\r\n            <input className=\"mb-2 smallWidth\"  type=\"number\" onChange={onSizeChange} value={size}/> cm <br/>\r\n            <select  className=\"mb-2\" onChange={onLocationChange} name=\"location\" type=\"text\" placeholder=\"Select\">\r\n              <option value=\"sun\"> sun </option>\r\n              <option value=\"shade\"> shade </option>\r\n              <option value=\"sun and shade\"> sun and shade </option>\r\n            </select> <br/>\r\n            <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" onChange={onPriceChange} value={price}/> € \r\n            <div className=\"row justify-content-around\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" onClick={() => onUpdatePlant(plant)}> Save changes </button>\r\n              <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePlantForm;","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\nimport {CardElement, useStripe, useElements} from \"@stripe/react-stripe-js\";\r\nimport config from \"../config\";\r\n\r\nconst CheckoutForm = ({plant, headerHeight, introHeight, onCheckout}) => {\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  \r\n  useEffect(\r\n    () => {\r\n      // Create PaymentIntent as soon as the page loads\r\n      window\r\n        .fetch(\r\n          `${config.API_URL}/api/create-payment-intent`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({price: plant.price})\r\n          }\r\n        )\r\n        .then(\r\n          res => {\r\n            return res.json();\r\n          }\r\n        )\r\n        .then(\r\n          data => setClientSecret(data.clientSecret)\r\n        );\r\n    },\r\n    []\r\n  );\r\n\r\n  // Card styling\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {color: \"#32325d\"}\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Listen for changes in Card element and display any errors as customer types card details\r\n  const handleChange = async event => {\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  // Handle payment\r\n  const handleSubmit = async event => {\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n    const payload = await stripe.confirmCardPayment(\r\n      clientSecret,\r\n      {payment_method: {card: elements.getElement(CardElement)}}\r\n    );\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setProcessing(false);\r\n    }\r\n    else {\r\n      setError(null);\r\n      setProcessing(false);\r\n      setSucceeded(true);\r\n    }\r\n  }\r\n  \r\n  const {_id, name, price} = plant;\r\n  return (\r\n    <div className=\"container col-9\">\r\n      <form className=\"checkoutForm mt-5\" id=\"payment-form\" onSubmit={handleSubmit}>\r\n        <h2 className=\"text-center mb-2 p-2\">  {name} </h2>\r\n        <h3 className=\"text-center mb-4 p-2\"> {price} € </h3>\r\n        <CardElement className=\"p-2\" id=\"card-element\" options={cardStyle} onChange={handleChange}/>\r\n        <div className=\"row justify-content-center\">\r\n          <button onClick={onCheckout} className=\"btn btn-sm mt-5 mb-4\" disabled={processing || disabled || succeeded} id=\"submit\">\r\n            <span id=\"button-text\">\r\n              {\r\n                processing ? <div className=\"spinner\" id=\"spinner\"/> : \"Pay now\"\r\n              }\r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* Show any error that happens when processing the payment */\r\n          error && (<div className=\"card-error\" role=\"alert\"> {error} </div>)\r\n        /* Show success message upon completion */}\r\n        <p className={succeeded ? \"result-message text-center\" : \"result-message hidden text-center\"}>\r\n          Payment succeeded.\r\n        </p>\r\n      </form>\r\n      <div className=\"row justify-content-center\">\r\n        {\r\n          succeeded ? (\r\n            <Link to={\"/\"} onClick={() => scroll.scrollTo(headerHeight+introHeight)}> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n          ) \r\n          : (\r\n            <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutForm;","import React, {useEffect} from \"react\";\r\nimport {loadStripe} from \"@stripe/stripe-js\";\r\nimport {Elements} from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst promise = loadStripe(\"pk_test_51IQBsPA6EAM4YnfDyrjHWnLHzZ5KkI9tsERzYhBGVoctZBrFUb4Sda035HvcQKpp7thFiqW6QmO8ytPbOAMTg33z00cHvcbojv\");\r\n\r\nconst CheckoutPage = ({location, headerHeight, introHeight, onCheckout}) => {\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-6 offset-1 offset-md-5 App\">\r\n        <Elements stripe={promise}>\r\n          <CheckoutForm onCheckout={onCheckout} plant={location.plant} headerHeight={headerHeight} introHeight={introHeight}/>\r\n        </Elements>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;","import React, {useEffect} from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst RequestsPage = ({user, requests, currentRequestsNumber, onFetchAllRequests, onResetNewRequestsReceived}) => {\r\n\r\n  const handleGoBack = () => {\r\n    onResetNewRequestsReceived();\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      onFetchAllRequests();\r\n      handleGoBack();\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={\"/signup\"}/>);\r\n  if (!requests) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Your messages </h2>\r\n        <Link to={\"/\"} onClick={handleGoBack}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n        {\r\n          requests.map(\r\n            (request) => {\r\n              const {_id, buyer, seller, plant} = request;\r\n              return (\r\n                seller._id === user._id ? (\r\n                  <div className=\"card p-3 mt-4 \" key={_id}>\r\n                    <h4> Request for: {plant.name} </h4>\r\n                    <h5> by: {buyer.username} </h5>\r\n                    <div>\r\n                      <Link className=\"btn btn-outline-dark\" to={`/requests/read/${_id}`}> Details </Link>\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              );\r\n            } \r\n          )\r\n        }\r\n        {\r\n          currentRequestsNumber === 0 ? null : <Link to={\"/\"} onClick={handleGoBack}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestsPage;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst CreateRequestForm = ({location, error, onCreateRequest, onResetError}) => {\r\n  useEffect(\r\n    () => {\r\n      onResetError();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  const {plant} = location;\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Your mesage </h2>\r\n        <form onSubmit={(event) => onCreateRequest(event, plant)}>\r\n          <div>\r\n            <textarea className=\"mb-4\" name=\"message\" cols=\"35\" rows=\"7\"/>\r\n          </div>\r\n          {\r\n            error ? <p className=\"warningColor\"> {error} </p> : null            \r\n          }\r\n          <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\"> Send </button>\r\n          <Link to={`/plants/read/${plant._id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateRequestForm;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst RequestDetails = ({match, request, onReadRequest, onDeleteRequest}) => {\r\n  useEffect(\r\n    () => {\r\n      onReadRequest(match.params.requestId);\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  const {_id, buyer, plant, message, reply} = request;\r\n  if (!buyer || !plant) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Your request </h2>\r\n        <h4> for: {plant.name} </h4>\r\n        <h5> by: {buyer.username} </h5>\r\n        <p> {message} </p>\r\n        {\r\n          reply ? (\r\n            <div>\r\n              <h5> Your reply: </h5>\r\n              <p> {reply} </p>\r\n            </div>\r\n          ) : null\r\n        }\r\n        <div>\r\n          {                  \r\n            reply ? null : <Link to={`/requests/update/${_id}`}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Reply </button> </Link>\r\n          }\r\n          <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={() => onDeleteRequest(_id)}> Delete </button>\r\n        </div>\r\n        <Link to={\"/requests/fetch\"} onClick={scroll.scrollToTop}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestDetails;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst UpdateRequestForm = ({match, request, onReadRequest, onCreateReply, onUpdateRequest}) => {\r\n  useEffect(\r\n    () => {\r\n      onReadRequest(match.params.requestId);\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  const {_id, message} = request;\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mt-5 mb-4\"> Reply your request </h2>\r\n        <div className=\"card cardSmallWidth mb-5\">\r\n          <div className=\"card-body\">\r\n            <p> {message} </p>\r\n            <textarea className=\"mb-4\" name=\"reply\" cols=\"31\" rows=\"6\" placeholder=\"Your reply\" onChange={onCreateReply}/>\r\n            <div className=\"row justify-content-around\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" onClick={() => onUpdateRequest(request)}> Submit </button>\r\n              <Link to={`/requests/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateRequestForm;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"notFound\">\r\n      <div>\r\n        <h2> \r\n          Oh-oh! <br/> <br/>\r\n          We think you got lost in the jungle!\r\n        </h2>\r\n        <h3> 404 Not Found </h3>\r\n        <Link to={\"/\"}> <button className=\"btn btn-sm ml-2\"> Take me home </button> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React, {Component} from \"react\";\r\n\r\nclass KommunicateChat extends Component {\r\n\r\n  componentDidMount() {\r\n    (\r\n      (d, m) => {\r\n        const kommunicateSettings = { \r\n          \"appId\": \"10b22c52854a305b79bbdecc356bea5\", \r\n          \"popupWidget\": true, \r\n          \"automaticChatOpenOnNavigation\": true \r\n        };\r\n        const s = document.createElement(\"script\"); \r\n        s.type = \"text/javascript\"; \r\n        s.async = true;\r\n        s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n        const h = document.getElementsByTagName(\"head\")[0]; \r\n        h.appendChild(s);\r\n        window.kommunicate = m; \r\n        m._globals = kommunicateSettings;\r\n      }\r\n    )\r\n    (\r\n      document, \r\n      window.kommunicate || {}\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    return (<div/>);\r\n  }\r\n}\r\n\r\nexport default KommunicateChat;","import React, {Component} from \"react\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\nimport config from \"./config\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./components/Home\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport LogOut from \"./components/LogOut\";\r\nimport CreatePlantForm from \"./components/CreatePlantForm\";\r\nimport PlantDetails from \"./components/PlantDetails\";\r\nimport UpdatePlantForm from \"./components/UpdatePlantForm\";\r\nimport CheckoutPage from \"./components/CheckoutPage\";\r\nimport RequestsPage from \"./components/RequestsPage\";\r\nimport CreateRequestForm from \"./components/CreateRequestForm\";\r\nimport RequestDetails from \"./components/RequestDetails\";\r\nimport UpdateRequestForm from \"./components/UpdateRequestForm\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport KommunicateChat from \"./components/Chat\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fetchingUser: true,\r\n      loggedInUser: null,\r\n      plants: [],\r\n      query: \"\",\r\n      plant: {},\r\n      requests: [],\r\n      request: {},\r\n      currentRequestsNumber: 0,\r\n      initRequestsNumber: true,\r\n      newRequestsReceived: false,\r\n      headerHeight: 0,\r\n      introHeight: 0,\r\n      error: null\r\n    };\r\n    this.handleElementsHeight = this.handleElementsHeight.bind(this);\r\n    this.resetError = this.resetError.bind(this);\r\n    // ---------- Plants -----------\r\n    this.fetchAllPlants = this.fetchAllPlants.bind(this);\r\n    this.fetchQueryPlants = this.fetchQueryPlants.bind(this);\r\n    this.handleSearchPlant = this.handleSearchPlant.bind(this);\r\n    this.handleCreatePlant = this.handleCreatePlant.bind(this);\r\n    this.handleReadPlant = this.handleReadPlant.bind(this);\r\n    this.handleNameChange = this.handleNameChange.bind(this);\r\n    this.handleDescriptionChange = this.handleDescriptionChange.bind(this);\r\n    this.handleSizeChange = this.handleSizeChange.bind(this);\r\n    this.handlePriceChange = this.handlePriceChange.bind(this);\r\n    this.handleLocationChange = this.handleLocationChange.bind(this);\r\n    this.handleImageChange = this.handleImageChange.bind(this);\r\n    this.handleUpdatePlant = this.handleUpdatePlant.bind(this);    \r\n    this.handleDeletePlant = this.handleDeletePlant.bind(this);\r\n    this.handleCheckout = this.handleCheckout.bind(this);\r\n    // ---------- Requests ----------\r\n    this.handleFetchAllRequests = this.handleFetchAllRequests.bind(this);\r\n    this.handleCheckRequests = this.handleCheckRequests.bind(this);\r\n    this.resetNewRequestsReceived = this.resetNewRequestsReceived.bind(this);\r\n    this.handleCreateRequest = this.handleCreateRequest.bind(this);\r\n    this.handleReadRequest = this.handleReadRequest.bind(this);\r\n    this.handleCreateReply = this.handleCreateReply.bind(this);\r\n    this.handleUpdateRequest = this.handleUpdateRequest.bind(this);\r\n    this.handleDeleteRequest = this.handleDeleteRequest.bind(this);\r\n    // ---------- Authentification ----------\r\n    this.handleSignUp = this.handleSignUp.bind(this);\r\n    this.handleSignIn = this.handleSignIn.bind(this);\r\n    this.handleLogOut = this.handleLogOut.bind(this);\r\n  }\r\n\r\n  // Get height of header and about elements\r\n  handleElementsHeight() {\r\n    const headerHeight = Math.round(document.querySelector(\"#titleId\").getBoundingClientRect().height);\r\n    const introHeight = Math.round(document.querySelector(\"#aboutId\").getBoundingClientRect().height);\r\n    this.setState(\r\n      {\r\n      headerHeight,\r\n      introHeight\r\n      }\r\n    );\r\n  }\r\n\r\n  // Clear error messages\r\n  resetError() {\r\n    this.setState({error: null});\r\n  }\r\n\r\n  // ---------- Plants ----------\r\n\r\n  // Fetch all plants\r\n  fetchAllPlants() {\r\n    axios.get(`${config.API_URL}/api/plants/fetch`)\r\n      .then(\r\n        (response) => this.setState({plants: response.data})\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Fetching plants failed\", err)\r\n      );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAllPlants();\r\n    if (!this.state.loggedInUser) {\r\n      axios.get(`${config.API_URL}/api/user`, { withCredentials: true })\r\n        .then(\r\n          (response) => this.setState(\r\n            {\r\n              loggedInUser: response.data,\r\n              fetchingUser: false\r\n            }\r\n          )\r\n        )\r\n        .catch(\r\n          (err) => {\r\n            this.setState({ fetchingUser: false });\r\n            console.log(\"Initializing fetching failed\", err);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  // Fetch query plants\r\n  fetchQueryPlants() {\r\n    axios.get(`${config.API_URL}/api/plants/search?q=${this.state.query}`)\r\n      .then(\r\n        (response) => this.setState(\r\n          {\r\n            plants: response.data,\r\n            ready: true\r\n          }\r\n        )\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Query fetching failed\", err)\r\n      );\r\n  }\r\n  \r\n  // Search plant\r\n  handleSearchPlant(event) {\r\n    const query = event.target.value;\r\n    this.setState(\r\n      {query},\r\n      () => (query) ? this.fetchQueryPlants() : this.fetchAllPlants()\r\n    );\r\n  }\r\n\r\n  // Create plant\r\n  handleCreatePlant(event) {\r\n    event.preventDefault();\r\n    const {name, description, size, plantImage, location, price} = event.target;\r\n    const image = plantImage.files[0];\r\n    const uploadForm = new FormData();\r\n    uploadForm.append(\"image\", image);\r\n    axios.post(`${config.API_URL}/api/upload`, uploadForm)\r\n      .then(\r\n        (response) => {\r\n          const {image, imagePublicId} = response.data;\r\n          const newPlant = {\r\n            name: name.value,\r\n            description: description.value,\r\n            size: size.value,\r\n            image,\r\n            imagePublicId,\r\n            location: location.value,\r\n            price: price.value\r\n          };\r\n          axios.post(\r\n            `${config.API_URL}/api/plants/create`, \r\n            newPlant, \r\n            {withCredentials: true}\r\n          )\r\n            .then(\r\n              (response) => this.setState(\r\n                {plants: [response.data, ...this.state.plants]},\r\n                () => {\r\n                  this.props.history.push(\"/\");\r\n                  const {headerHeight, introHeight} = this.state;\r\n                  scroll.scrollTo(headerHeight+introHeight);\r\n                }\r\n              )\r\n            )\r\n            .catch(\r\n              (err) => this.setState({error: err.response.data.error})\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => this.setState({error: err.response.data.error})\r\n      );\r\n  }\r\n\r\n  // Read plant\r\n  handleReadPlant(plantId) {\r\n    axios.get(\r\n      `${config.API_URL}/api/plants/read/${plantId}`,\r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        (response) => this.setState({plant: response.data})\r\n      )\r\n      .catch(\r\n        () => console.log(\"Read plant failed\")\r\n      );\r\n  }\r\n\r\n  // Plant name changed\r\n  handleNameChange(event) {\r\n    const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n    clonePlant.name = event.target.value;\r\n    this.setState({plant: clonePlant});\r\n  }\r\n\r\n  // Plant description changed\r\n  handleDescriptionChange(event) {\r\n    const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n    clonePlant.description = event.target.value;\r\n    this.setState({plant: clonePlant});\r\n  }\r\n\r\n  // Plant size changed\r\n  handleSizeChange(event) {\r\n    const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n    clonePlant.size = event.target.value;\r\n    this.setState({plant: clonePlant});\r\n  }\r\n\r\n  // Plant price changed\r\n  handlePriceChange(event) {\r\n    const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n    clonePlant.price = event.target.value;\r\n    this.setState({plant: clonePlant});\r\n  }\r\n\r\n  // Plant location changed\r\n  handleLocationChange(event) {\r\n    const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n    clonePlant.location = event.target.value;\r\n    this.setState({plant: clonePlant});\r\n  }\r\n\r\n  // Plant image changed\r\n  handleImageChange(event) {\r\n    const image = event.target.files[0];\r\n    const {imagePublicId} = this.state.plant;\r\n    const destroyImageData = {\r\n      imagePublicId\r\n    }\r\n    axios.post(\r\n      `${config.API_URL}/api/destroy`, \r\n      destroyImageData\r\n    )\r\n      .then(\r\n        () => {\r\n          const uploadForm = new FormData();\r\n          uploadForm.append(\"image\", image);\r\n          axios.post(\r\n            `${ config.API_URL }/api/upload`, \r\n            uploadForm\r\n          )\r\n            .then(\r\n              (response) => {\r\n                const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n                const {imagePublicId, image} = response.data;\r\n                clonePlant.imagePublicId = imagePublicId;\r\n                clonePlant.image = image;\r\n                this.setState({plant: clonePlant});\r\n              }\r\n            )\r\n            .catch(\r\n              (err) => console.log(\"Image upload failed\", err)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Delete old image failed\", err)\r\n      );\r\n  }\r\n\r\n  // Update plant\r\n  handleUpdatePlant(plant) {\r\n    const {_id, name, description, size, image, imagePublicId, location, price} = plant;\r\n    const updatedPlant = {\r\n      name,\r\n      description,\r\n      size,\r\n      image,\r\n      imagePublicId,\r\n      location,\r\n      price\r\n    };\r\n    axios.patch(\r\n      `${config.API_URL}/api/plants/update/${_id}`,\r\n       updatedPlant\r\n      )\r\n      .then(\r\n        () => {\r\n          const updatedPlants = this.state.plants.map(\r\n            (singlePlant) => {\r\n              if (singlePlant._id === _id) {\r\n                singlePlant.name = name;\r\n                singlePlant.description = description;\r\n                singlePlant.size = size;\r\n                singlePlant.image = image;\r\n                singlePlant.imagePublicId = imagePublicId;\r\n                singlePlant.location = location;\r\n                singlePlant.price = price;\r\n              }\r\n              return singlePlant;\r\n            }\r\n          );\r\n          this.setState(\r\n            {plants: updatedPlants},\r\n            () => {\r\n              this.props.history.push(\"/\");\r\n              const {headerHeight, introHeight} = this.state;\r\n              scroll.scrollTo(headerHeight+introHeight);\r\n            }\r\n          );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Update plant failed\", err)\r\n      );\r\n  }\r\n\r\n  // Delete Plant\r\n  handleDeletePlant(plantId, imagePublicId) {\r\n    const destroyImageData = {\r\n      imagePublicId\r\n    }\r\n    axios.post(\r\n      `${config.API_URL}/api/destroy`, \r\n      destroyImageData\r\n    )\r\n      .then(\r\n        () => {\r\n          axios.delete(`${config.API_URL}/api/plants/delete/${plantId}`)\r\n            .then(\r\n              () => {\r\n                const filteredPlants = this.state.plants.filter(\r\n                  (plant) => {\r\n                    return plant._id !== plantId;\r\n                  }\r\n                );\r\n                this.setState(\r\n                  {plants: filteredPlants},\r\n                  () => {\r\n                    this.props.history.push(\"/\");\r\n                    const {headerHeight, introHeight} = this.state;\r\n                    scroll.scrollTo(headerHeight+introHeight);\r\n                  }\r\n                );\r\n              }\r\n            )\r\n            .catch(\r\n              (err) => console.log(\"Delete plant failed\", err)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Delete image failed\", err)\r\n      );\r\n  }  \r\n\r\n  // Plant payment\r\n  handleCheckout(price) {\r\n    axios.post(\r\n      `${config.API_URL}/api/create-payment-intent`, \r\n      {}, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        () => this.setState(\r\n          () => {\r\n            this.props.history.push(\"/\");\r\n            const {headerHeight, introHeight} = this.state;\r\n            scroll.scrollTo(headerHeight+introHeight);\r\n          }\r\n        )\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Checkout failed\", err)\r\n      );\r\n  }\r\n\r\n  // ---------- Requests ----------\r\n\r\n  // Fetch all requests\r\n  handleFetchAllRequests() {\r\n    axios.get(`${config.API_URL}/api/requests/fetch`)\r\n      .then(\r\n        (response) => this.setState({requests: response.data})\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Fetching requests failed\", err)\r\n      );\r\n  }\r\n\r\n  // Check requests for logged in user\r\n  handleCheckRequests() {\r\n    const {loggedInUser} = this.state;\r\n    if (loggedInUser) {\r\n      axios.get(`${config.API_URL}/api/requests/fetch`)\r\n        .then(\r\n          (response) => {\r\n            this.setState({requests: response.data});\r\n            const currentRequests = this.state.requests.filter(\r\n              (currentRequest) => {\r\n                return currentRequest.seller._id === loggedInUser._id;\r\n              } \r\n            );\r\n            const currentRequestsNumber = currentRequests.length;\r\n            // Save number of requests only once at the beginning\r\n            if (this.state.initRequestsNumber) {\r\n              this.setState(\r\n                { \r\n                  currentRequestsNumber,\r\n                  initRequestsNumber: false\r\n                }\r\n              );\r\n            }\r\n            // Check if there are new requests and update number of requests\r\n            if ((this.state.currentRequestsNumber < currentRequestsNumber) && (this.state.initRequestsNumber === false) && (currentRequests[0].seller._id === loggedInUser._id)) {\r\n              this.setState(\r\n                { \r\n                  currentRequestsNumber,\r\n                  newRequestsReceived: true\r\n                }\r\n              );\r\n            }\r\n          }\r\n        )\r\n        .catch(\r\n          (err) => console.log(\"Checking requests failed\", err)\r\n        );\r\n    }\r\n  }\r\n\r\n  // Reset state for new received requests\r\n  resetNewRequestsReceived() {\r\n    this.setState({newRequestsReceived: false});\r\n  }\r\n\r\n  // Create request\r\n  handleCreateRequest(event, plant) {\r\n    event.preventDefault();\r\n    const {message} = event.target;\r\n    const newRequest = {\r\n      seller: plant.creator._id,\r\n      plant: plant._id,\r\n      message: message.value\r\n    };\r\n    axios.post(\r\n      `${config.API_URL}/api/requests/create`, \r\n      newRequest, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        (response) => this.setState(\r\n          {requests: [response.data, ...this.state.requests]},\r\n          () => this.props.history.push(`/plants/read/${plant._id}`)\r\n        )\r\n      )\r\n      .catch(\r\n        (err) => this.setState({error: err.response.data.error})\r\n      );\r\n  }\r\n\r\n  // Read request\r\n  handleReadRequest(requestId) {\r\n    axios.get(\r\n      `${config.API_URL}/api/requests/read/${requestId}`,\r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        (response) => this.setState({request: response.data})\r\n      )\r\n      .catch(\r\n        () => console.log(\"Read request failed\")\r\n      );\r\n  }\r\n\r\n  // Create reply\r\n  handleCreateReply(event) {\r\n    const cloneRequest = JSON.parse(JSON.stringify(this.state.request));\r\n    cloneRequest.reply = event.target.value;\r\n    this.setState({request: cloneRequest});\r\n  }\r\n\r\n  // Update request\r\n  handleUpdateRequest(request) {\r\n    const {_id, buyer, seller, plant, message, reply} = request;\r\n    const updatedRequest = {\r\n      buyer,\r\n      seller,\r\n      plant,\r\n      message,\r\n      reply\r\n    };\r\n    axios.patch(\r\n      `${config.API_URL}/api/requests/update/${_id}`, \r\n      updatedRequest\r\n    )\r\n      .then(\r\n        () => {\r\n          const updatedRequests = this.state.requests.map(\r\n            (singleRequest) => {\r\n              if (singleRequest._id === _id) {\r\n                singleRequest.buyer = buyer;\r\n                singleRequest.seller = seller;\r\n                singleRequest.plant = plant;\r\n                singleRequest.message = message;\r\n                singleRequest.reply = reply;\r\n              }\r\n              return singleRequest;\r\n            }\r\n          );\r\n          this.setState(\r\n            {requests: updatedRequests},\r\n            () => this.props.history.push(`/requests/read/${_id}`)\r\n          );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Update request failed\", err)\r\n      );\r\n  }\r\n\r\n  // Delete request\r\n  handleDeleteRequest(requestId) {\r\n    axios.delete(`${config.API_URL}/api/requests/delete/${requestId}`)\r\n      .then(\r\n        () => {\r\n          const filteredRequests = this.state.requests.filter(\r\n            (request) => {\r\n              return request._id !== requestId;\r\n            }\r\n          );\r\n          const currentRequestsNumber = filteredRequests.length;\r\n          this.setState(\r\n            { \r\n              requests: filteredRequests,\r\n              currentRequestsNumber\r\n            },\r\n            () => this.props.history.push(\"/requests/fetch\")\r\n          );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Delete requestfailed\", err)\r\n      );\r\n  }\r\n\r\n  // ---------- Authentification ----------\r\n\r\n  // Signup\r\n  handleSignUp(event) {\r\n    event.preventDefault();\r\n    const {username, email, password} = event.target;\r\n    const newUser = {\r\n      username: username.value,\r\n      email: email.value.toLowerCase(),\r\n      password: password.value\r\n    };\r\n    axios.post(\r\n      `${config.API_URL}/api/signup`, \r\n      newUser\r\n    )\r\n      .then(\r\n        (response) => this.setState(\r\n          {loggedInUser: response.data},\r\n          () => this.props.history.push(\"/\")\r\n        )\r\n      )\r\n      .catch(\r\n        (err) => this.setState({error: err.response.data.error})\r\n      );\r\n  }\r\n\r\n  // Signin\r\n  handleSignIn(event) {\r\n    event.preventDefault();\r\n    const {email, password} = event.target;\r\n    const user = {\r\n      email: email.value,\r\n      password: password.value\r\n    };\r\n    axios.post(\r\n      `${config.API_URL}/api/signin`, \r\n      user, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        (response) => this.setState(\r\n          {loggedInUser: response.data},\r\n          () => this.props.history.push(\"/\")\r\n        )\r\n      )\r\n      .catch(\r\n        (err) => this.setState({ error: err.response.data.error })\r\n      );\r\n  }\r\n\r\n  // Logout\r\n  handleLogOut() {\r\n    axios.post(\r\n      `${config.API_URL}/api/logout`, \r\n      {}, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        () => this.setState(\r\n          {loggedInUser: null},\r\n          () => this.props.history.push(\"/\")\r\n        )\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Logout failed\", err)\r\n      );\r\n  }\r\n\r\n  render() {\r\n    const {fetchingUser, loggedInUser, plants, query, plant, requests, request, headerHeight, introHeight, error, currentRequestsNumber, newRequestsReceived} = this.state;\r\n    if (fetchingUser) return (\r\n      <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n        <span class=\"visually-hidden\"> Loading... </span>\r\n      </div>\r\n    );\r\n    return (\r\n      <div class=\"main\">\r\n        <NavBar onLogOut={this.handleLogOut} onCheckRequests={this.handleCheckRequests} newRequestsReceived={newRequestsReceived} user={loggedInUser} headerHeight={headerHeight} introHeight={introHeight}/>\r\n        <Switch>\r\n          {/* ---------- Plants ---------- */}\r\n          <Route exact path=\"/\" render={\r\n            () => {\r\n              return <Home onSearchPlant={this.handleSearchPlant} onHandleElementsHeight={this.handleElementsHeight} plants={plants} query={query} headerHeight={headerHeight}/>\r\n            }\r\n          }/>\r\n          <Route path=\"/plants/create\" render={\r\n            (routeProps) => {\r\n              return <CreatePlantForm onCreatePlant={this.handleCreatePlant} onResetError={this.resetError} user={loggedInUser} headerHeight={headerHeight} introHeight={introHeight} error={error} {...routeProps}/>\r\n            }\r\n          }/>\r\n          <Route path=\"/plants/read/:plantId\" render={\r\n            (routeProps) => {\r\n              return <PlantDetails onReadPlant={this.handleReadPlant} onDeletePlant={this.handleDeletePlant} plant={plant} user={loggedInUser} headerHeight={headerHeight} introHeight={introHeight} {...routeProps}/>\r\n            }\r\n          }/>\r\n          <Route path=\"/plants/update\" render={\r\n            (routeProps) => {\r\n              return <UpdatePlantForm onNameChange={this.handleNameChange} onDescriptionChange={this.handleDescriptionChange} onSizeChange={this.handleSizeChange} onPriceChange={this.handlePriceChange} onLocationChange={this.handleLocationChange} onImageChange={this.handleImageChange} onUpdatePlant={this.handleUpdatePlant} plant={plant} headerHeight={headerHeight} introHeight={introHeight} {...routeProps}/>\r\n            }\r\n          }/>\r\n          <Route path=\"/plants/checkout/:plantId\" render={\r\n            (routeProps) => {\r\n              return <CheckoutPage onCheckout={this.handleCheckout} headerHeight={headerHeight} introHeight={introHeight} {...routeProps}/>\r\n            }\r\n          }/>\r\n          {/* ---------- Requests ---------- */}\r\n          <Route path=\"/requests/fetch\" render={\r\n              (routeProps) => {\r\n                return <RequestsPage onFetchAllRequests={this.handleFetchAllRequests} onResetNewRequestsReceived={this.resetNewRequestsReceived}  user={loggedInUser} requests={requests} currentRequestsNumber={currentRequestsNumber} {...routeProps}/>\r\n              }\r\n          }/>\r\n          <Route path=\"/requests/create\" render={\r\n            (routeProps) => {\r\n              return <CreateRequestForm onCreateRequest={this.handleCreateRequest} onResetError={this.resetError} user={loggedInUser} error={error} {...routeProps}/>\r\n            }\r\n          }/>\r\n          <Route path=\"/requests/read/:requestId\" render={\r\n            (routeProps) => {\r\n              return <RequestDetails onReadRequest={this.handleReadRequest} onDeleteRequest={this.handleDeleteRequest} request={request} user={loggedInUser} {...routeProps}/>\r\n            }\r\n          }/>\r\n          <Route path=\"/requests/update\" render={\r\n            (routeProps) => {\r\n              return <UpdateRequestForm onCreateReply={this.handleCreateReply} onUpdateRequest={this.handleUpdateRequest} request={request} {...routeProps}/>\r\n            }\r\n          }/>\r\n          {/* ---------- Authentication ---------- */}\r\n          <Route path=\"/signup\" render={\r\n            (routeProps) => {\r\n              return <SignUp onSignUp={this.handleSignUp} onResetError={this.resetError} onResetNewRequestsReceived={this.resetNewRequestsReceived} error={error} {...routeProps}/>\r\n            }\r\n          }/>\r\n          <Route path=\"/signin\" render={\r\n            (routeProps) => {\r\n              return <SignIn onSignIn={this.handleSignIn} onResetError={this.resetError} onResetNewRequestsReceived={this.resetNewRequestsReceived} error={error} {...routeProps}/>\r\n            }\r\n          }/>\r\n          <Route path=\"/logout\" render={\r\n            (routeProps) => {\r\n              return <LogOut onLogOut={this.handleLogOut} onResetNewRequestsReceived={this.resetNewRequestsReceived} {...routeProps}/>\r\n            }\r\n          }/>\r\n\r\n          <Route component={NotFound}/>\r\n        </Switch>\r\n        <KommunicateChat/>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}