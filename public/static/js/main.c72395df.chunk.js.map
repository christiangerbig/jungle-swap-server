{"version":3,"sources":["config.js","components/NavBar.js","components/Footer.js","images/JungleSwap_Home.png","images/JungleSwap_Icon.png","components/Home.js","components/SignUp.js","components/SignIn.js","components/LogOut.js","components/CreatePlantForm.js","components/PlantDetails.js","components/UpdatePlantForm.js","components/CheckoutForm.js","components/CheckoutPage.js","components/RequestsPage.js","components/CreateRequestForm.js","components/RequestDetails.js","components/UpdateRequestForm.js","components/NotFound.js","components/Chat.js","App.js","index.js"],"names":["process","NavBar","props","handleIntervalTimer","onCheckRequests","state","intervalId","setInterval","this","setState","clearInterval","user","newRequestsReceived","Navbar","className","variant","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","onClick","scroll","scrollTo","title","username","Component","Footer","Home","plants","query","onSearchPlant","src","image","alt","icon","type","placeholder","value","onChange","map","plant","_id","name","price","class","role","SignUp","onResetError","onResetNewRequestsReceived","scrollToTop","error","onSignUp","onSubmit","htmlFor","SignIn","onSignIn","LogOut","onLogOut","CreatePlantForm","onCreatePlant","min","PlantDetails","plantId","match","params","onReadPlant","onDeletePlant","description","size","location","creator","pathname","UpdatePlantForm","onNameChange","onDescriptionChange","onSizeChange","onPriceChange","onLocationChange","onImageChange","onUpdatePlant","CheckoutForm","useState","succeeded","setSucceeded","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","onCheckout","useEffect","window","fetch","config","method","headers","body","JSON","stringify","then","res","json","data","handleChange","event","a","empty","message","handleSubmit","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","payload","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","promise","loadStripe","CheckoutPage","RequestsPage","onFetchAllRequests","requests","currentRequestsNumber","request","buyer","seller","CreateRequestForm","onCreateRequest","cols","rows","RequestDetails","requestId","onReadRequest","onDeleteRequest","reply","UpdateRequestForm","onCreateReply","onUpdateRequest","NotFound","KommunicateChat","d","m","s","document","createElement","async","getElementsByTagName","appendChild","kommunicate","_globals","App","fetchAllPlants","axios","get","response","catch","err","console","log","fetchQueryPlants","ready","handleSearchPlant","target","handleCreatePlant","plantImage","files","uploadForm","FormData","append","post","imagePublicId","newPlant","withCredentials","history","push","handleReadPlant","handleNameChange","clonePlant","parse","handleDescriptionChange","handleSizeChange","handlePriceChange","handleLocationChange","handleImageChange","handleUpdatePlant","updatedPlant","patch","updatedPlants","singlePlant","handleDeletePlant","destroyData","public_id","delete","filteredPlants","filter","handleCheckout","handleFetchAllRequests","handleCheckRequests","loggedInUser","currentRequests","currentRequest","length","initRequestsNumber","resetNewRequestsReceived","handleCreateRequest","newRequest","handleReadRequest","handleCreateReply","cloneRequest","handleUpdateRequest","updatedRequest","updatedRequests","singleRequest","handleDeleteRequest","filteredRequests","resetError","handleSignUp","email","password","toLowerCase","handleSignIn","handleLogOut","fetchingUser","exact","path","render","routeProps","component","withRouter","ReactDOM","StrictMode","querySelector"],"mappings":"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","file":"static/js/main.c72395df.chunk.js","sourcesContent":["export default {\r\n  API_URL: process.env.REACT_APP_SERVER_URL\r\n}","import React, { Component } from \"react\";\r\nimport { Navbar, Nav } from \"react-bootstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass NavBar extends Component {\r\n  \r\n    constructor(props) {\r\n    super(props);\r\n    this.state = { intervalId: null };\r\n  }\r\n  \r\n  // Handler for interval timer\r\n  handleIntervalTimer = () => this.props.onCheckRequests()\r\n\r\n  componentDidMount() {\r\n    const intervalId = setInterval(\r\n      this.handleIntervalTimer, \r\n      10000 // every minute\r\n    );\r\n    this.setState({ intervalId: intervalId });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.state.intervalId);\r\n  }\r\n\r\n  render() {\r\n    const { user, newRequestsReceived } = this.props;\r\n      return (\r\n      <div>\r\n        <Navbar className=\"pl-5\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n          <Navbar.Brand href=\"/\"> JungleSwap </Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n          <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <div>\r\n              <Link to=\"/\" className=\"p-2\" onClick={ () => scroll.scrollTo(1520) }> All Plants </Link>\r\n            </div>\r\n            {\r\n              (user) ? (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/plants/create\"> Create Plant </Link>\r\n                  <Link className={ (newRequestsReceived) ? \"p-2 alertColor\" : \"p-2\" } to=\"/requests/fetch\" title={ (newRequestsReceived) ? \"new message\" : null }> Messages </Link>\r\n                </div>\r\n              ) : null\r\n            }\r\n            {\r\n              (user) ? (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/logout\" title={ user.username }> Log out </Link>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/signin\"> Sign in </Link>\r\n                  <Link className=\"p-2\" to=\"/signup\"> Sign up </Link>\r\n                </div>\r\n              )\r\n            }\r\n          </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;","import React, { Component } from \"react\";\r\n\r\nclass Footer extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"footer-row\">\r\n        <footer> © 2021 <a href=\"https://www.linkedin.com/in/christian-gerbig/\"> Christian Gerbig </a> & <a href=\"https://www.linkedin.com/in/lisa-montebaur/\">Lisa Montebaur</a> </footer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/JungleSwap_Home.c4ed9b4c.png\";","export default __webpack_public_path__ + \"static/media/JungleSwap_Icon.a6c7c44a.png\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport image from \"../images/JungleSwap_Home.png\";\r\nimport icon from \"../images/JungleSwap_Icon.png\";\r\n\r\nclass Home extends Component {\r\n  render() {\r\n    const { plants, query, onSearchPlant } = this.props;\r\n    if (!plants) {\r\n      return (\r\n        <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n          <span class=\"visually-hidden\"> Loading... </span>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div>\r\n        {/* Title */}\r\n        <header className=\"text-center pt-5 pb-5 headerImg\">\r\n          <div className=\"row my-5\">\r\n            <div className=\"col-6 offset-3 my-5 borderAround\">\r\n              <h2 className=\"title mb-2\"> JungleSwap </h2>\r\n              <h5 className=\"mt-3 mb-5\"> Share your green heart </h5>\r\n              <div className=\"mb-5\">\r\n                <Link className=\"biggerFontSize\" onClick={ () => scroll.scrollTo(800) }> Try it! </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n        {/* About */}\r\n        <div className=\"intro\">\r\n          <div className=\"intro-centered container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-sm-6 col-md-5 col-lg-6\">\r\n                <img className=\"image\" src={ image } alt=\"\"/>\r\n              </div>\r\n              <br />\r\n              <div className=\"intro col-sm-6 col-md-5 col-lg-6 px-5\">\r\n                <h4> Welcome to JungleSwap! </h4>\r\n                <h5> Add green to your Home </h5>\r\n                <p> It\"s easy-peasy. <br/>\r\n                  Share your plant offshoots. <br/>\r\n                  Make money! <br/>\r\n                  Or swap them for another plant. <br/>\r\n                  Don\"t have any baby plants? <br/>\r\n                  You can simply shop and give a plant a new home.\r\n                </p>\r\n                <img className=\"icon\" src={ icon } alt=\"icon\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* Display plants */}\r\n        <div className=\"container mt-5\">\r\n          <div className=\"mt-5 mb-3 pt-5\">\r\n            <h2> Plants </h2>\r\n            <hr/>\r\n            <h4> Search a plant </h4>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <input className=\"smallWidth form-control\" type=\"text\" placeholder=\"Search...\" value={ query } onChange={ onSearchPlant }/>\r\n          </div>\r\n          <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n            {\r\n              plants.map(\r\n                (plant) => {\r\n                  const { _id, name, image, price } = plant;\r\n                  return (\r\n                    <div className=\"col mb-5\" key={ _id }>\r\n                      <div className=\"card card-medium-width text-center\">\r\n                        <img className=\"card-img-top mediumPicSize\" src={ image } alt={ name }/>\r\n                        <div className=\"card-body mb-5\">\r\n                          <h5> { name } </h5>\r\n                          <p> { price } € </p>\r\n                          <Link className=\"btn btn-outline-dark\" to={ `/plants/read/${_id}` }> Details </Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Home;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass SignUp extends Component {\r\n\r\n  componentDidMount() {\r\n    const { onResetError, onResetNewRequestsReceived } = this.props;\r\n    onResetError();\r\n    onResetNewRequestsReceived();\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    const { error, onSignUp } = this.props;\r\n    return (\r\n      <div className=\"container row mt-5\">\r\n        <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n          <h2 className=\"mb-5\"> Sign Up </h2>\r\n          <form onSubmit={ onSignUp }>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"InputUsername\"> Username </label>\r\n              <input type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"InputEmail\"> Email address </label>\r\n              <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"InputPassword\"> Password </label>\r\n              <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\"/>\r\n            </div>\r\n            {\r\n              (error) ? <p className=\"warningColor\"> { error } </p> : null            \r\n            }\r\n            <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\"> Sign up </button>\r\n            <p className=\"padding\"> Already have an account? </p>\r\n            <Link to={ \"/signin\" }> Sign in </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignUp;","import React, { Component } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass SignIn extends Component {\r\n  \r\n  componentDidMount() {\r\n    const { onResetError, onResetNewRequestsReceived } = this.props;\r\n    onResetError();\r\n    onResetNewRequestsReceived();\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    const { error, onSignIn } = this.props;\r\n    return (\r\n      <div className=\"container row mt-5 custom fullscreen\">\r\n        <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n          <h2 className=\"mb-5\"> Sign In </h2>\r\n          <form onSubmit={ onSignIn }>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"InputEmail\"> Email address </label>\r\n              <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\"/>\r\n            </div>\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"InputPassword\"> Password </label>\r\n              <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\"/>\r\n            </div>\r\n            {\r\n              (error) ? <p className=\"warningColor\"> { error } </p> : null            \r\n            }\r\n            <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\"> Sign in </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SignIn;","import React, { Component } from \"react\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass LogOut extends Component {\r\n  \r\n  componentDidMount() {\r\n    const { onLogOut, onResetNewRequestsReceived } = this.props;\r\n    onLogOut();\r\n    onResetNewRequestsReceived();\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    return (<div/>);\r\n  }\r\n}\r\n\r\nexport default LogOut;","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass CreatePlantForm extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onResetError();\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    const { user, error, onCreatePlant } = this.props;\r\n    if (!user){\r\n      return (<Redirect to={ \"/signup\" }/>);\r\n    }\r\n    return (\r\n      <div className=\"container row mt-5 fullscreen\">\r\n        <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-6\">\r\n          <h2 className=\"mb-5\"> Create a plant </h2>\r\n          <form onSubmit={ onCreatePlant }>\r\n            <input className=\"mb-4\" name=\"name\" type=\"text\" placeholder=\"Enter name\"/>\r\n            <input className=\"mb-4\" name=\"description\" type=\"text\" placeholder=\"Enter description\"/>\r\n            <input className=\"mb-4 smallWidth\" name=\"size\" type=\"number\" min=\"1\" placeholder=\"Size\"/> cm <br/>\r\n            <select className=\"mb-4 p-1\" name=\"location\" type=\"text\">\r\n              <option> Select location </option>\r\n              <option value=\"sun\"> sun </option>\r\n              <option value=\"shade\"> shade </option>\r\n              <option value=\"sun and shade\"> sun and shade </option>\r\n            </select>\r\n            <br/>\r\n            <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" placeholder=\"Price\"/> € <br/>\r\n            <input className=\"mb-4\" name=\"plantImage\" type=\"file\"/>\r\n            {\r\n              (error) ? <p className=\"warningColor\"> { error } </p> : null            \r\n            }\r\n            <div className=\"col-12\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\" > Create </button>\r\n              <Link to={ \"/\" } onClick={ () => scroll.scrollTo(1520) }> <button className=\"btn btn-sm mx-5\"> Go back </button> </Link>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreatePlantForm;","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass PlantDetails extends Component {\r\n\r\n  componentDidMount() {\r\n    const { plantId } = this.props.match.params;\r\n    this.props.onReadPlant(plantId);\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    const { user, plant, onDeletePlant } = this.props;\r\n    if (!user) {\r\n      return (<Redirect to={ \"/signup\" }/>);\r\n    }\r\n    const { _id, name, description, size, image, location, price, creator } = plant;\r\n    if (!creator) {\r\n      return (\r\n        <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n          <span class=\"visually-hidden\"> Loading... </span>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container mt-5 row row-md-10 offset-md-4\">\r\n        <div className=\"mt-4 mb-3 pt-4 container\">\r\n          <h2> Plant details </h2>\r\n        </div>\r\n        <div className=\"col\">\r\n          <div className=\"card cardMediumWidth\">\r\n            {\r\n              (image) ? <img className=\"card-img-top mediumPicSize\" src={ image } alt={ name }/> : null\r\n            }\r\n            <div className=\"ml-2 mt-2\"> <span> Name: </span> { name } </div>\r\n            <div className=\"ml-2 mt-2\"> <span> Description: </span> { description } </div>\r\n            <div className=\"ml-2 mt-2\"> <span> Size: </span> { size } cm </div>\r\n            <div className=\"ml-2 mt-2\"> <span> Likes: </span> { location } </div>\r\n            <div className=\"ml-2 mt-2\"> <span> Price: </span> { price } € </div>\r\n            <div className=\"ml-2 mt-2 col justify-content-center\">\r\n              <div className=\"row-2 justify-content-center\">\r\n                <div className=\"card-body\">\r\n                  {\r\n                    (user._id === creator._id) ? (\r\n                      <div>\r\n                        <Link to={ \"/plants/update\" }> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Update </button> </Link>\r\n                        <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={ () => onDeletePlant(_id) }> Delete </button>\r\n                      </div>\r\n                    ) : (\r\n                      <div>\r\n                        <Link to={ {pathname: `/plants/checkout/${_id}`, plant: plant} }> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Buy </button> </Link>\r\n                        <Link to={ {pathname: \"/requests/create\", plant: plant} }> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Swap </button> </Link>\r\n                      </div>\r\n                    )\r\n                  }\r\n                  <Link to={ \"/\" } onClick={ () => scroll.scrollTo(1520) }> <button className=\"btn btn-sm ml-2\"> Go back </button> </Link>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlantDetails;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass UpdatePlantForm extends Component {\r\n\r\n  componentDidMount() {\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    const { plant, onNameChange, onDescriptionChange, onSizeChange, onPriceChange, onLocationChange, onImageChange, onUpdatePlant } = this.props;\r\n    const { _id, name, description, size, image, price } = plant;\r\n    return (\r\n      <div className=\"container row mt-5 \">\r\n        <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n          <h2 className=\"mt-5 mb-4\"> Update your plant </h2>\r\n          <div className=\"card cardSmallWidth mb-5\">\r\n            <img className=\"mb-2 smallPicSize\" src={ image } alt={ name }/>\r\n            <div className=\"card-body\">\r\n              <input className=\"mb-2\" onChange={ onImageChange } type=\"file\"/>\r\n              <input className=\"mb-2\"  type=\"text\" onChange={ onNameChange } value={ name }/>\r\n              <input className=\"mb-2\"  type=\"text\" onChange={ onDescriptionChange } value={ description }/>\r\n              <input className=\"mb-2 smallWidth\"  type=\"number\" onChange={ onSizeChange } value={ size }/> cm <br/>\r\n              <select  className=\"mb-2\" onChange={ onLocationChange } name=\"location\" type=\"text\" placeholder=\"Select\">\r\n                <option value=\"sun\"> sun </option>\r\n                <option value=\"shade\"> shade </option>\r\n                <option value=\"sun and shade\"> sun and shade </option>\r\n              </select> <br/>\r\n              <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" onChange={ onPriceChange } value={ price }/> € \r\n              <div className=\"row justify-content-around\">\r\n                <button className=\"btn btn-sm btn-outline-dark\" onClick={ () => onUpdatePlant(plant) }> Save changes </button>\r\n                <Link to={ `/plants/read/${_id}` }> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdatePlantForm;","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport { CardElement, useStripe, useElements } from \"@stripe/react-stripe-js\";\r\nimport config from \"../config\";\r\n\r\nconst CheckoutForm = (props) => {\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  const { plant, onCheckout } = props;\r\n  \r\n  useEffect(\r\n    () => {\r\n      // Create PaymentIntent as soon as the page loads\r\n      window\r\n        .fetch(\r\n          `${config.API_URL}/api/create-payment-intent`,\r\n          {\r\n            method: \"POST\",\r\n            headers: { \"Content-Type\": \"application/json\" },\r\n            body: JSON.stringify({ price: plant.price })\r\n          }\r\n        )\r\n        .then(\r\n          (res) => {\r\n            return (res.json());\r\n          }\r\n        )\r\n        .then(\r\n          (data) => setClientSecret(data.clientSecret)\r\n        );\r\n    },\r\n    [plant.price]\r\n  );\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": { color: \"#32325d\" }\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Listen for changes in Card element and display any errors as customer types card details\r\n  const handleChange = async (event) => {\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n    const payload = await stripe.confirmCardPayment(\r\n      clientSecret,\r\n      { payment_method: { card: elements.getElement(CardElement) } }\r\n    );\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setProcessing(false);\r\n    }\r\n    else {\r\n      setError(null);\r\n      setProcessing(false);\r\n      setSucceeded(true);\r\n    }\r\n  }\r\n  \r\n  const { _id, name, price } = plant;\r\n  return (\r\n    <div className=\"container col-9\">\r\n      <form className=\"checkoutForm mt-5\" id=\"payment-form\" onSubmit={ handleSubmit }>\r\n        <h2 className=\"text-center mb-2 p-2\">  { name } </h2>\r\n        <h3 className=\"text-center mb-4 p-2\"> { price } € </h3>\r\n        <CardElement className=\"p-2\" id=\"card-element\" options={ cardStyle } onChange={ handleChange } />\r\n        <div className=\"row justify-content-center\">\r\n          <button onClick={ onCheckout } className=\"btn btn-sm mt-5 mb-4\" disabled={ processing || disabled || succeeded } id=\"submit\">\r\n            <span id=\"button-text\">\r\n              {\r\n                (processing) ? <div className=\"spinner\" id=\"spinner\"/> : \"Pay now\"\r\n              }\r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* Show any error that happens when processing the payment */}\r\n        {\r\n          error && (<div className=\"card-error\" role=\"alert\"> { error } </div>)\r\n        }\r\n        {/* Show success message upon completion */}\r\n        <p className={ (succeeded) ? \"result-message text-center\" : \"result-message hidden text-center\" }>\r\n          Payment succeeded.\r\n        </p>\r\n      </form>\r\n      <div className=\"row justify-content-center\">\r\n        {\r\n          (succeeded) ? (\r\n            <Link to={ \"/\" } onClick={ () => scroll.scrollTo(1520) }> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n          ) \r\n          : (\r\n            <Link to={ `/plants/read/${_id}` }> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutForm;","import React, { Component } from \"react\";\r\nimport { loadStripe } from \"@stripe/stripe-js\";\r\nimport { Elements } from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nconst promise = loadStripe(\"pk_test_51IQBsPA6EAM4YnfDyrjHWnLHzZ5KkI9tsERzYhBGVoctZBrFUb4Sda035HvcQKpp7thFiqW6QmO8ytPbOAMTg33z00cHvcbojv\");\r\n\r\nclass CheckoutPage extends Component {\r\n\r\n  componentDidMount() {\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    const { onCheckout } = this.props;\r\n    const { plant } = this.props.location;\r\n    return (\r\n      <div className=\"container row mt-5\">\r\n        <div className=\"mt-5 col-11 col-md-6 offset-1 offset-md-5 App\">\r\n          <Elements stripe={ promise }>\r\n            <CheckoutForm onCheckout={ onCheckout } plant={ plant }/>\r\n          </Elements>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CheckoutPage;","import React, { Component } from \"react\";\r\nimport { Link, Redirect } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass RequestsPage extends Component {\r\n\r\n  componentDidMount() {\r\n    const { onFetchAllRequests, onResetNewRequestsReceived } = this.props;\r\n    onFetchAllRequests();\r\n    onResetNewRequestsReceived();\r\n    scroll.scrollToTop();\r\n  }\r\n  \r\n  render() {\r\n    const { user, requests, currentRequestsNumber, onResetNewRequestsReceived } = this.props;\r\n    if (!user) {\r\n      return (<Redirect to={ \"/signup\" }/>);\r\n    }\r\n    if (!requests) {\r\n      return (\r\n        <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n          <span class=\"visually-hidden\"> Loading... </span>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container row mt-5\">\r\n        <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n          <h2 className=\"mb-5\"> Your messages </h2>\r\n          <Link to={ \"/\" } onClick={ () => {onResetNewRequestsReceived(); scroll.scrollToTop();} }> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n          {\r\n            requests.map(\r\n              (request) => {\r\n                const { _id, buyer, seller, plant } = request;\r\n                return (\r\n                  (seller._id === user._id) ? (\r\n                    <div className=\"card p-3 mt-4 \" key={ _id }>\r\n                      <h4> Request for: { plant.name } </h4>\r\n                      <h5> by: { buyer.username } </h5>\r\n                      <div>\r\n                        <Link className=\"btn btn-outline-dark\" to={ `/requests/read/${_id}` }> Details </Link>\r\n                      </div>\r\n                    </div>\r\n                  ) : null\r\n                );\r\n              } \r\n            )\r\n          }\r\n          {\r\n            (currentRequestsNumber === 0) ? null : <Link to={ \"/\" } onClick={ () => {onResetNewRequestsReceived(); scroll.scrollToTop();} }> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n          }\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RequestsPage;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass CreateRequestForm extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.onResetError();\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    const { error, onCreateRequest } = this.props;\r\n    const { plant } = this.props.location;\r\n    return (\r\n      <div className=\"container row mt-5\">\r\n        <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n          <h2 className=\"mb-5\"> Your mesage </h2>\r\n          <form onSubmit={ (event) => onCreateRequest(event, plant) }>\r\n            <div>\r\n              <textarea className=\"mb-4\" name=\"message\" cols=\"35\" rows=\"7\" />\r\n            </div>\r\n            {\r\n              (error) ? <p className=\"warningColor\"> { error } </p> : null            \r\n            }\r\n            <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\"> Send </button>\r\n            <Link to={ `/plants/read/${plant._id}` }> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CreateRequestForm;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass RequestDetails extends Component {\r\n\r\n  componentDidMount() {\r\n    const { requestId } = this.props.match.params;\r\n    this.props.onReadRequest(requestId);\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    const { request, onDeleteRequest } = this.props;\r\n    const { _id, buyer, plant, message, reply } = request;\r\n    if (!buyer || !plant) {\r\n      return (\r\n        <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n          <span class=\"visually-hidden\"> Loading... </span>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"container row mt-5 \">\r\n        <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Your request </h2>\r\n        <h4> for: { plant.name } </h4>\r\n        <h5> by: { buyer.username } </h5>\r\n        <p> { message } </p>\r\n        {\r\n          (reply) ? (\r\n            <div>\r\n              <h5> Your reply: </h5>\r\n              <p> { reply } </p>\r\n            </div>\r\n          ) : null\r\n        }\r\n        <div>\r\n          {                  \r\n            (reply) ? null : <Link to={ `/requests/update/${_id}` }> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Reply </button> </Link>\r\n          }\r\n          <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={ () => onDeleteRequest(_id) }> Delete </button>\r\n        </div>\r\n        <Link to={ \"/requests/fetch\" } onClick={ scroll.scrollToTop }> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RequestDetails;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\n\r\nclass UpdateRequestForm extends Component {\r\n\r\n  componentDidMount() {\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  render() {\r\n    const { request, onCreateReply, onUpdateRequest } = this.props;\r\n    const { _id, message } = request;\r\n    return (\r\n      <div className=\"container row mt-5 \">\r\n        <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n          <h2 className=\"mt-5 mb-4\"> Reply your request </h2>\r\n          <div className=\"card cardSmallWidth mb-5\">\r\n            <div className=\"card-body\">\r\n              <p> { message } </p>\r\n                <textarea className=\"mb-4\" name=\"reply\" cols=\"31\" rows=\"6\" placeholder=\"Your reply\" onChange={ onCreateReply }/>\r\n                <div className=\"row justify-content-around\">\r\n                  <button className=\"btn btn-sm btn-outline-dark\" onClick={ () => onUpdateRequest(request) }> Submit </button>\r\n                  <Link to={ `/requests/read/${_id}` }> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UpdateRequestForm;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass NotFound extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"notFound\">\r\n        <div>\r\n          <h2> \r\n            Oh-oh! <br/> <br/>\r\n            We think you got lost in the jungle!\r\n          </h2>\r\n          <h3> 404 Not Found </h3>\r\n          <Link to={ \"/\" }> <button className=\"btn btn-sm ml-2\"> Take me home </button> </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;","import React, { Component } from \"react\";\r\n\r\nclass KommunicateChat extends Component {\r\n\r\n  componentDidMount() {\r\n    (\r\n      (d, m) => {\r\n        const kommunicateSettings = { \r\n          \"appId\": \"10b22c52854a305b79bbdecc356bea5\", \r\n          \"popupWidget\": true, \r\n          \"automaticChatOpenOnNavigation\": true \r\n        };\r\n        const s = document.createElement(\"script\"); \r\n        s.type = \"text/javascript\"; \r\n        s.async = true;\r\n        s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n        const h = document.getElementsByTagName(\"head\")[0]; \r\n        h.appendChild(s);\r\n        window.kommunicate = m; \r\n        m._globals = kommunicateSettings;\r\n      }\r\n    )\r\n    (\r\n      document, \r\n      window.kommunicate || {}\r\n    );\r\n  }\r\n  \r\n  render() {\r\n    return (<div/>);\r\n  }\r\n}\r\n\r\nexport default KommunicateChat;","import React, { Component } from \"react\";\r\nimport { Route, Switch, withRouter } from \"react-router-dom\";\r\nimport { animateScroll as scroll } from \"react-scroll\";\r\nimport config from \"./config\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./components/Home\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport LogOut from \"./components/LogOut\";\r\nimport CreatePlantForm from \"./components/CreatePlantForm\";\r\nimport PlantDetails from \"./components/PlantDetails\";\r\nimport UpdatePlantForm from \"./components/UpdatePlantForm\";\r\nimport CheckoutPage from \"./components/CheckoutPage\";\r\nimport RequestsPage from \"./components/RequestsPage\";\r\nimport CreateRequestForm from \"./components/CreateRequestForm\";\r\nimport RequestDetails from \"./components/RequestDetails\";\r\nimport UpdateRequestForm from \"./components/UpdateRequestForm\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport KommunicateChat from \"./components/Chat\";\r\n\r\nclass App extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      fetchingUser: true,\r\n      loggedInUser: null,\r\n      plants: [],\r\n      query: \"\",\r\n      plant: {},\r\n      requests: [],\r\n      request: {},\r\n      currentRequestsNumber: 0,\r\n      initRequestsNumber: true,\r\n      newRequestsReceived: false,\r\n      error: null\r\n    };\r\n  }\r\n\r\n  // ---------- Plants ----------\r\n\r\n  // Fetch all plants\r\n  fetchAllPlants = () => {\r\n    axios.get(`${config.API_URL}/api/plants/fetch`)\r\n      .then(\r\n        (response) => this.setState({ plants: response.data})\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Fetching plants failed\", err)\r\n      );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.fetchAllPlants();\r\n    if (!this.state.loggedInUser) {\r\n      axios.get(`${config.API_URL}/api/user`, { withCredentials: true })\r\n        .then(\r\n          (response) => this.setState(\r\n            {\r\n              loggedInUser: response.data,\r\n              fetchingUser: false\r\n            }\r\n          )\r\n        )\r\n        .catch(\r\n          (err) => {\r\n            this.setState({ fetchingUser: false });\r\n            console.log(\"Initializing fetching failed\", err);\r\n          }\r\n        );\r\n    }\r\n  }\r\n\r\n  // Fetch query plants\r\n  fetchQueryPlants = () => {\r\n    axios.get(`${config.API_URL}/api/plants/search?q=${this.state.query}`)\r\n      .then(\r\n        (response) => this.setState(\r\n          {\r\n            plants: response.data,\r\n            ready: true\r\n          }\r\n        )\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Query fetching failed\", err)\r\n      );\r\n  }\r\n  \r\n  // Search plant\r\n  handleSearchPlant = (event) => {\r\n    const query = event.target.value;\r\n    this.setState(\r\n      { query },\r\n      () => (query) ? this.fetchQueryPlants() : this.fetchAllPlants()\r\n    );\r\n  }\r\n\r\n  // Create plant\r\n  handleCreatePlant = (event) => {\r\n    event.preventDefault();\r\n    const  { name, description, size, plantImage, location, price } = event.target;\r\n    const image = plantImage.files[0];\r\n    const uploadForm = new FormData();\r\n    uploadForm.append(\"image\", image);\r\n    axios.post(`${config.API_URL}/api/upload`, uploadForm)\r\n      .then(\r\n        (response) => {\r\n          console.log(\"Response\",response.data.imagePublicId);\r\n          const newPlant = {\r\n            name: name.value,\r\n            description: description.value,\r\n            size: size.value,\r\n            image: response.data.image,\r\n            location: location.value,\r\n            price: price.value\r\n          };\r\n          axios.post(`${config.API_URL}/api/plants/create`, newPlant, { withCredentials: true })\r\n            .then(\r\n              (response) => this.setState(\r\n                { plants: [response.data, ...this.state.plants] },\r\n                () => this.props.history.push(\"/\")\r\n              )\r\n            )\r\n            .catch(\r\n              (err) => this.setState({ error: err.response.data.error })\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => this.setState({ error: err.response.data.error })\r\n      );\r\n  }\r\n\r\n  // Read plant\r\n  handleReadPlant = (plantId) => {\r\n    axios.get(\r\n      `${config.API_URL}/api/plants/read/${plantId}`,\r\n      { withCredentials: true }\r\n    )\r\n      .then(\r\n        (response) => this.setState({ plant: response.data })\r\n      )\r\n      .catch(\r\n        () => console.log(\"Read plant failed\")\r\n      );\r\n  }\r\n\r\n  // Plant name changed\r\n  handleNameChange = (event) => {\r\n    const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n    clonePlant.name = event.target.value;\r\n    this.setState({ plant: clonePlant });\r\n  }\r\n\r\n  // Plant description changed\r\n  handleDescriptionChange = (event) => {\r\n    const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n    clonePlant.description = event.target.value;\r\n    this.setState({ plant: clonePlant });\r\n  }\r\n\r\n  // Plant size changed\r\n  handleSizeChange = (event) => {\r\n    const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n    clonePlant.size = event.target.value;\r\n    this.setState({ plant: clonePlant });\r\n  }\r\n\r\n  // Plant price changed\r\n  handlePriceChange = (event) => {\r\n    const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n    clonePlant.price = event.target.value;\r\n    this.setState({ plant: clonePlant });\r\n  }\r\n\r\n  // Plant location changed\r\n  handleLocationChange = (event) => {\r\n    const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n    clonePlant.location = event.target.value;\r\n    this.setState({ plant: clonePlant });\r\n  }\r\n\r\n  // Plant image changed\r\n  handleImageChange = (event) => {\r\n    const image = event.target.files[0];\r\n    const uploadForm = new FormData();\r\n    uploadForm.append(\"image\", image);\r\n    axios.post(`${ config.API_URL }/api/upload`, uploadForm)\r\n      .then(\r\n        (response) => {\r\n          const clonePlant = JSON.parse(JSON.stringify(this.state.plant));\r\n          clonePlant.image = response.data.image;\r\n          this.setState({ plant: clonePlant });\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Image upload failed\", err)\r\n      );\r\n  }\r\n\r\n  // Update plant\r\n  handleUpdatePlant = (plant) => {\r\n    const { _id, name, description, size, image, location, price } = plant;\r\n    const updatedPlant = {\r\n      name,\r\n      description,\r\n      size,\r\n      image,\r\n      location,\r\n      price\r\n    };\r\n    axios.patch(`${config.API_URL}/api/plants/update/${_id}`, updatedPlant)\r\n      .then(\r\n        () => {\r\n          const updatedPlants = this.state.plants.map(\r\n            (singlePlant) => {\r\n              if (singlePlant._id === _id) {\r\n                singlePlant.name = name;\r\n                singlePlant.description = description;\r\n                singlePlant.size = size;\r\n                singlePlant.image = image;\r\n                singlePlant.location = location;\r\n                singlePlant.price = price;\r\n              }\r\n              return singlePlant;\r\n            }\r\n          );\r\n          this.setState(\r\n            { plants: updatedPlants },\r\n            () => this.props.history.push(\"/\")\r\n          );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Update plant failed\", err)\r\n      );\r\n  }\r\n\r\n  // Delete Plant\r\n  handleDeletePlant = (plantId) => {\r\n    const public_id = \"g0nmildklkor3gjljnws\";\r\n    const destroyData = {\r\n      public_id\r\n    }\r\n    console.log(destroyData);\r\n    axios.post(`${config.API_URL}/api/destroy`, destroyData)\r\n      .then(\r\n        () => {\r\n          axios.delete(`${config.API_URL}/api/plants/delete/${plantId}`)\r\n            .then(\r\n              () => {\r\n                const filteredPlants = this.state.plants.filter(\r\n                  (plant) => {\r\n                    return (plant._id !== plantId)\r\n                  }\r\n                );\r\n                this.setState(\r\n                  { plants: filteredPlants },\r\n                  () => {\r\n                    this.props.history.push(\"/\");\r\n                    scroll.scrollTo(1520);\r\n                  }\r\n                );\r\n              }\r\n            )\r\n            .catch(\r\n              (err) => console.log(\"Delete plant failed\", err)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Delete image failed\", err)\r\n      );\r\n  }  \r\n\r\n  // Payment\r\n  handleCheckout = (price) => {\r\n    axios.post(`${config.API_URL}/api/create-payment-intent`, {}, { withCredentials: true })\r\n      .then(\r\n        () => this.setState(() => this.props.history.push(\"/\"))\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Checkout failed\", err)\r\n      );\r\n  }\r\n\r\n  // ---------- Requests ----------\r\n\r\n  // Fetch all requests\r\n  handleFetchAllRequests = () => {\r\n    axios.get(`${config.API_URL}/api/requests/fetch`)\r\n      .then(\r\n        (response) => this.setState({ requests: response.data })\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Fetching requests failed\", err)\r\n      );\r\n  }\r\n\r\n  // Check requests for logged in user\r\n  handleCheckRequests = () => {\r\n    const { loggedInUser } = this.state;\r\n    if (loggedInUser) {\r\n      axios.get(`${config.API_URL}/api/requests/fetch`)\r\n        .then(\r\n          (response) => {\r\n            this.setState({ requests: response.data });\r\n            const currentRequests = this.state.requests.filter(\r\n              (currentRequest) => {\r\n                return (currentRequest.seller._id === loggedInUser._id) \r\n              } \r\n            );\r\n            const currentRequestsNumber = currentRequests.length;\r\n            // Save number of requests only once at the beginning\r\n            if (this.state.initRequestsNumber) {\r\n              this.setState(\r\n                { \r\n                  currentRequestsNumber: currentRequestsNumber,\r\n                  initRequestsNumber: false\r\n                }\r\n              );\r\n            }\r\n            // Check if there are new requests and update number of requests\r\n            if ((this.state.currentRequestsNumber < currentRequestsNumber) && (this.state.initRequestsNumber === false) && (currentRequests[0].seller._id === loggedInUser._id)) {\r\n              this.setState(\r\n                { \r\n                  currentRequestsNumber: currentRequestsNumber,\r\n                  newRequestsReceived: true\r\n                }\r\n              );\r\n            }\r\n          }\r\n        )\r\n        .catch(\r\n          (err) => console.log(\"Checking requests failed\", err)\r\n        );\r\n    }\r\n  }\r\n\r\n  // Reset state for new received requests\r\n  resetNewRequestsReceived = () => this.setState({ newRequestsReceived: false })\r\n\r\n  // Create request\r\n  handleCreateRequest = (event, plant) => {\r\n    event.preventDefault();\r\n    const { message } = event.target;\r\n    const newRequest = {\r\n      seller: plant.creator._id,\r\n      plant: plant._id,\r\n      message: message.value\r\n    };\r\n    axios.post(`${config.API_URL}/api/requests/create`, newRequest, { withCredentials: true })\r\n      .then(\r\n        (response) => this.setState(\r\n          { requests: [response.data, ...this.state.requests] },\r\n          () => this.props.history.push(`/plants/read/${plant._id}`)\r\n        )\r\n      )\r\n      .catch(\r\n        (err) => this.setState({ error: err.response.data.error })\r\n      );\r\n  }\r\n\r\n  // Read request\r\n  handleReadRequest = (requestId) => {\r\n    axios.get(\r\n      `${config.API_URL}/api/requests/read/${requestId}`,\r\n      { withCredentials: true }\r\n    )\r\n      .then(\r\n        (response) => this.setState({ request: response.data })\r\n      )\r\n      .catch(\r\n        () => console.log(\"Read request failed\")\r\n      );\r\n  }\r\n\r\n  // Create reply\r\n  handleCreateReply = (event) => {\r\n    const cloneRequest = JSON.parse(JSON.stringify(this.state.request));\r\n    cloneRequest.reply = event.target.value;\r\n    this.setState({ request: cloneRequest });\r\n  }\r\n\r\n  // Update request\r\n  handleUpdateRequest = (request) => {\r\n    const { _id, buyer, seller, plant, message, reply } = request;\r\n    const updatedRequest = {\r\n      buyer,\r\n      seller,\r\n      plant,\r\n      message,\r\n      reply\r\n    };\r\n    axios.patch(`${config.API_URL}/api/requests/update/${_id}`, updatedRequest)\r\n      .then(\r\n        () => {\r\n          const updatedRequests = this.state.requests.map(\r\n            (singleRequest) => {\r\n              if (singleRequest._id === _id) {\r\n                singleRequest.buyer = buyer;\r\n                singleRequest.seller = seller;\r\n                singleRequest.plant = plant;\r\n                singleRequest.message = message;\r\n                singleRequest.reply = reply;\r\n              }\r\n              return singleRequest;\r\n            }\r\n          );\r\n          this.setState(\r\n            { requests: updatedRequests },\r\n            () => this.props.history.push(`/requests/read/${_id}`)\r\n          );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Update request failed\", err)\r\n      );\r\n  }\r\n\r\n  // Delete request\r\n  handleDeleteRequest = (requestId) => {\r\n    axios.delete(`${config.API_URL}/api/requests/delete/${requestId}`)\r\n      .then(\r\n        () => {\r\n          const filteredRequests = this.state.requests.filter(\r\n            (request) => {\r\n              return (request._id !== requestId)\r\n            }\r\n          );\r\n          const currentRequestsNumber = filteredRequests.length;\r\n          this.setState(\r\n            { \r\n              requests: filteredRequests,\r\n              currentRequestsNumber: currentRequestsNumber\r\n            },\r\n            () => this.props.history.push(\"/requests/fetch\")\r\n          );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Delete requestfailed\", err)\r\n      );\r\n  }\r\n\r\n  // ---------- Authentification ----------\r\n\r\n    // Clear error messages\r\n    resetError = () => this.setState({ error: null })\r\n\r\n    // Signup\r\n    handleSignUp = (event) => {\r\n      event.preventDefault();\r\n      const { username, email, password } = event.target;\r\n      const user = {\r\n        username: username.value,\r\n        email: email.value.toLowerCase(),\r\n        password: password.value\r\n      };\r\n      axios.post(`${config.API_URL}/api/signup`, user)\r\n        .then(\r\n          (response) => this.setState(\r\n            { loggedInUser: response.data },\r\n            () => this.props.history.push(\"/\")\r\n          )\r\n        )\r\n        .catch(\r\n          (err) => this.setState({ error: err.response.data.error })\r\n        );\r\n    }\r\n  \r\n    // Signin\r\n    handleSignIn = (event) => {\r\n      event.preventDefault();\r\n      const { email, password } = event.target;\r\n      const user = {\r\n        email: email.value,\r\n        password: password.value\r\n      };\r\n      axios.post(`${config.API_URL}/api/signin`, user, { withCredentials: true })\r\n        .then(\r\n          (response) => this.setState(\r\n            { loggedInUser: response.data },\r\n            () => this.props.history.push(\"/\")\r\n          )\r\n        )\r\n        .catch(\r\n          (err) => this.setState({ error: err.response.data.error })\r\n        );\r\n    }\r\n  \r\n    // Logout\r\n    handleLogOut = () => {\r\n      axios.post(`${config.API_URL}/api/logout`, {}, { withCredentials: true })\r\n        .then(\r\n          () => this.setState(\r\n            { loggedInUser: null },\r\n            () => this.props.history.push(\"/\")\r\n          )\r\n        )\r\n        .catch(\r\n          (err) => console.log(\"Logout failed\", err)\r\n        );\r\n    }\r\n\r\n  render() {\r\n    const { fetchingUser, loggedInUser, plants, query, plant, requests, request, currentRequestsNumber, newRequestsReceived, error } = this.state;\r\n    if (fetchingUser) {\r\n      return (\r\n        <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n          <span class=\"visually-hidden\"> Loading... </span>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div class=\"main\">\r\n        <NavBar onLogOut={ this.handleLogOut } onCheckRequests={this.handleCheckRequests} newRequestsReceived={ newRequestsReceived } user={ loggedInUser }/>\r\n        <Switch>\r\n          <Route exact path=\"/\" render={\r\n            () => {\r\n              return <Home onSearchPlant={ this.handleSearchPlant } plants={ plants } query={ query }/>\r\n            }\r\n          }/>\r\n          <Route path=\"/signup\" render={\r\n            (routeProps) => {\r\n              return <SignUp onSignUp={ this.handleSignUp } onResetError={ this.resetError } onResetNewRequestsReceived={ this.resetNewRequestsReceived } error={ error } { ...routeProps }/>\r\n            }\r\n          }/>\r\n          <Route path=\"/signin\" render={\r\n            (routeProps) => {\r\n              return <SignIn onSignIn={ this.handleSignIn } onResetError={ this.resetError } onResetNewRequestsReceived={ this.resetNewRequestsReceived } error={ error } { ...routeProps }/>\r\n            }\r\n          }/>\r\n          <Route path=\"/logout\" render={\r\n            (routeProps) => {\r\n              return <LogOut onLogOut={ this.handleLogOut } onResetNewRequestsReceived={ this.resetNewRequestsReceived } { ...routeProps }/>\r\n            }\r\n          }/>\r\n          <Route path=\"/plants/create\" render={\r\n            (routeProps) => {\r\n              return <CreatePlantForm onCreatePlant={ this.handleCreatePlant } onResetError={ this.resetError } user={ loggedInUser } error={ error } { ...routeProps }/>\r\n            }\r\n          }/>\r\n          <Route path=\"/plants/read/:plantId\" render={\r\n            (routeProps) => {\r\n              return <PlantDetails onReadPlant={ this.handleReadPlant } onDeletePlant={ this.handleDeletePlant } plant={ plant } user={ loggedInUser } { ...routeProps }/>\r\n            }\r\n          }/>\r\n          <Route path=\"/plants/update\" render={\r\n            (routeProps) => {\r\n              return <UpdatePlantForm onNameChange={ this.handleNameChange } onDescriptionChange={ this.handleDescriptionChange } onSizeChange={ this.handleSizeChange } onPriceChange={ this.handlePriceChange } onLocationChange={ this.handleLocationChange } onImageChange={ this.handleImageChange } onUpdatePlant={ this.handleUpdatePlant } plant={ plant } { ...routeProps }/>\r\n            }\r\n          }/>\r\n          <Route path=\"/plants/checkout/:plantId\" render={\r\n            (routeProps) => {\r\n              return <CheckoutPage onCheckout={ this.handleCheckout } { ...routeProps }/>\r\n            }\r\n          }/>\r\n          <Route path=\"/requests/fetch\" render={\r\n              (routeProps) => {\r\n                return <RequestsPage onFetchAllRequests={ this.handleFetchAllRequests } onResetNewRequestsReceived={ this.resetNewRequestsReceived }  user={ loggedInUser } requests={ requests } currentRequestsNumber={ currentRequestsNumber } { ...routeProps }/>\r\n              }\r\n          }/>\r\n          <Route path=\"/requests/create\" render={\r\n            (routeProps) => {\r\n              return <CreateRequestForm onCreateRequest={ this.handleCreateRequest } onResetError={ this.resetError } user={ loggedInUser } error={ error } { ...routeProps }/>\r\n            }\r\n          }/>\r\n          <Route path=\"/requests/read/:requestId\" render={\r\n            (routeProps) => {\r\n              return <RequestDetails onReadRequest={ this.handleReadRequest } onDeleteRequest={ this.handleDeleteRequest } request={ request } user={ loggedInUser } { ...routeProps }/>\r\n            }\r\n          }/>\r\n          <Route path=\"/requests/update\" render={\r\n            (routeProps) => {\r\n              return <UpdateRequestForm onCreateReply={ this.handleCreateReply } onUpdateRequest={ this.handleUpdateRequest } request={ request } { ...routeProps }/>\r\n            }\r\n          }/>\r\n          <Route component={ NotFound }/>\r\n        </Switch>\r\n        <KommunicateChat/>\r\n        <Footer/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(App);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}