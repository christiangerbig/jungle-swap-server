{"version":3,"sources":["config.js","components/NavBar.js","components/Footer.js","images/JungleSwap_Home.png","images/JungleSwap_Icon.png","components/Home.js","components/SignUp.js","components/SignIn.js","components/LogOut.js","components/CreatePlantForm.js","components/PlantDetails.js","components/UpdatePlantForm.js","components/CheckoutForm.js","components/CheckoutPage.js","components/RequestsPage.js","components/CreateRequestForm.js","components/RequestDetails.js","components/UpdateRequestForm.js","components/NotFound.js","components/Chat.js","App.js","index.js"],"names":["process","NavBar","user","newRequestsReceived","headerHeight","aboutHeight","Navbar","className","variant","expand","fixed","Brand","href","Toggle","aria-controls","Collapse","id","Nav","to","onClick","scroll","scrollTo","title","username","Footer","Home","plants","query","onSearchPlant","onGetElementsHeight","useEffect","src","image","alt","icon","type","placeholder","value","onChange","map","plant","_id","name","price","class","role","SignUp","error","onSignUp","onClearError","onClearRequestsReceived","scrollToTop","onSubmit","htmlFor","formnovalidate","SignIn","onSignIn","LogOut","onLogOut","CreatePlantForm","onCreatePlant","min","PlantDetails","match","onReadPlant","onDeletePlant","params","plantId","description","size","imagePublicId","location","creator","pathname","UpdatePlantForm","onNameChange","onDescriptionChange","onSizeChange","onPriceChange","onLocationChange","onImageChange","onUpdatePlant","CheckoutForm","onCheckout","useState","succeeded","setSucceeded","setError","processing","setProcessing","disabled","setDisabled","clientSecret","setClientSecret","stripe","useStripe","elements","useElements","window","fetch","config","method","headers","body","JSON","stringify","then","res","json","data","handleChange","event","a","empty","message","handleSubmitPayment","preventDefault","confirmCardPayment","payment_method","card","getElement","CardElement","payload","options","style","base","color","fontFamily","fontSmoothing","fontSize","invalid","iconColor","promise","loadStripe","CheckoutPage","RequestsPage","requests","requestsNumber","onFetchAllRequests","handleResetAll","request","buyer","seller","CreateRequestForm","onCreateRequest","cols","rows","RequestDetails","onReadRequest","onDeleteRequest","requestId","reply","UpdateRequestForm","onCreateReply","onUpdateRequest","NotFound","KommunicateChat","d","m","s","document","createElement","async","getElementsByTagName","appendChild","kommunicate","_globals","withRouter","props","fetchingUser","setFetchingUser","loggedInUser","setLoggedInUser","userChange","setUserChange","setPlants","setQuery","setPlant","setRequests","setRequest","setRequestsNumber","setNewRequestsReceived","intervalId","setIntervalId","counter","setCounter","setHeaderHeight","setAboutHeight","handleGetElementsHeight","Math","round","querySelector","getBoundingClientRect","height","handleClearError","handleFetchAllPlants","axios","get","response","catch","err","console","log","withCredentials","clearInterval","handleSearchPlant","target","handleCreatePlant","plantImage","files","uploadForm","FormData","append","post","newPlant","history","push","handleReadPlant","handleNameChange","clonePlant","parse","handleDescriptionChange","handleSizeChange","handlePriceChange","handleLocationChange","handleImageChange","destroyImageData","handleUpdatePlant","updatedPlant","patch","updatedPlants","singlePlant","handleDeletePlant","delete","filteredPlants","filter","handleCheckout","currentRequests","currentRequest","length","interval","setInterval","currentRequestsNumber","handleClearRequestsReceived","handleFetchAllRequests","handleCreateRequest","newRequest","handleReadRequest","handleCreateReply","cloneRequest","handleUpdateRequest","updatedRequest","updatedRequests","singleRequest","handleDeleteRequest","filteredRequests","handleSignUp","email","password","newUser","toLowerCase","handleSignIn","handleLogOut","exact","path","render","routeProps","component","ReactDOM","StrictMode"],"mappings":"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","file":"static/js/main.6d533c7e.chunk.js","sourcesContent":["export default {API_URL: process.env.REACT_APP_SERVER_URL};","import React from \"react\";\r\nimport {Navbar, Nav} from \"react-bootstrap\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst NavBar = ({user, newRequestsReceived, headerHeight, aboutHeight}) => {\r\n  return (\r\n    <div>\r\n      <Navbar className=\"pl-5\" variant=\"dark\" expand=\"lg\" fixed=\"top\">\r\n        <Navbar.Brand href=\"/\"> JungleSwap </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <div>\r\n              <Link to=\"/\" className=\"p-2\" onClick={() => scroll.scrollTo(headerHeight + aboutHeight)}> All Plants </Link>\r\n            </div>\r\n            {\r\n              user ? (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/plants/create\"> Create Plant </Link>\r\n                  <Link className={newRequestsReceived ? \"p-2 alertColor\" : \"p-2\"} to=\"/requests/fetch\" title={newRequestsReceived ? \"new message\" : null}> Messages </Link>\r\n                </div>\r\n              ) : null\r\n            }\r\n            {\r\n              user ? (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/logout\" title={user.username}> Log out </Link>\r\n                </div>\r\n              ) : (\r\n                <div>\r\n                  <Link className=\"p-2\" to=\"/signin\"> Sign in </Link>\r\n                  <Link className=\"p-2\" to=\"/signup\"> Sign up </Link>\r\n                </div>\r\n              )\r\n            }\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NavBar;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <div className=\"footer-row\">\r\n      <footer> \r\n        © 2021 \r\n        <Link href=\"https://www.linkedin.com/in/christian-gerbig/\"> Christian Gerbig </Link> \r\n        & \r\n        <Link href=\"https://www.linkedin.com/in/lisa-montebaur/\"> Lisa Montebaur </Link>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","export default __webpack_public_path__ + \"static/media/JungleSwap_Home.c4ed9b4c.png\";","export default __webpack_public_path__ + \"static/media/JungleSwap_Icon.a6c7c44a.png\";","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\nimport image from \"../images/JungleSwap_Home.png\";\r\nimport icon from \"../images/JungleSwap_Icon.png\";\r\n\r\nconst Home = ({plants, query, headerHeight, onSearchPlant, onGetElementsHeight}) => {\r\n  useEffect(\r\n    () => onGetElementsHeight(),\r\n    []\r\n  );\r\n\r\n  if (!plants) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  return (\r\n    <div>\r\n      {/* Title */}\r\n      <header className=\"text-center pt-5 pb-5 headerImg\" id=\"titleId\">\r\n        <div className=\"row my-5\">\r\n          <div className=\"col-6 offset-3 my-5 borderAround\">\r\n            <h2 className=\"title mb-2\"> JungleSwap </h2>\r\n            <h5 className=\"mt-3 mb-5\"> Share your green heart </h5>\r\n            <div className=\"mb-5\">\r\n              <Link className=\"biggerFontSize\" onClick={() => scroll.scrollTo(headerHeight)}> Try it! </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </header>\r\n      {/* About */}\r\n      <section id=\"aboutId\">\r\n        <div className=\"about centered container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-sm-6 col-md-5 col-lg-6\">\r\n              <img className=\"image\" src={image} alt=\"plants\"/>\r\n            </div>\r\n            <br />\r\n            <div className=\"about col-sm-6 col-md-5 col-lg-6 px-5 noOverflow\">\r\n              <h4> Welcome to JungleSwap! </h4>\r\n              <h5> Add green to your Home </h5>\r\n              <p> It\"s easy-peasy. <br/>\r\n                Share your plant offshoots. <br/>\r\n                Make money! <br/>\r\n                Or swap them for another plant. <br/>\r\n                Don\"t have any baby plants? <br/>\r\n                You can simply shop and give a plant a new home.\r\n              </p>\r\n              <img className=\"icon\" src={icon} alt=\"icon\"/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n      {/* Display plants */}\r\n      <section>\r\n        <div className=\"container mt-5\">\r\n          <div className=\"mt-5 mb-3\">\r\n            <h2> Plants </h2>\r\n            <hr/>\r\n            <h4> Search a plant </h4>\r\n          </div>\r\n          <div className=\"mb-4\">\r\n            <input className=\"smallWidth form-control\" type=\"text\" placeholder=\"Search...\" value={query} onChange={onSearchPlant}/>\r\n          </div>\r\n          <div className=\"row row-cols-1 row-cols-md-3 g-4\">\r\n            {\r\n              plants.map(\r\n                (plant) => {\r\n                  const {_id, name, image, price} = plant;\r\n                  return (\r\n                    <div className=\"col mb-5\" key={_id}>\r\n                      <div className=\"card card-medium-width text-center h-100\">\r\n                        <img className=\"card-img-top mediumPicSize\" src={image} alt={name}/>\r\n                        <div className=\"card-body mb-5\">\r\n                          <h5> {name} </h5>\r\n                          <p> {price} € </p>\r\n                          <Link className=\"btn btn-outline-dark\" to={`/plants/read/${_id}`}> Details </Link>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  );\r\n                }\r\n              )\r\n            }\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst SignUp = ({error, onSignUp, onClearError, onClearRequestsReceived}) => {\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      onClearRequestsReceived();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Sign Up </h2>\r\n        <form onSubmit={onSignUp}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputUsername\"> Username </label>\r\n            <input type=\"text\" className=\"form-control\" id=\"InputUsername\" name=\"username\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputEmail\"> Email address </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputPassword\"> Password </label>\r\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\"/>\r\n          </div>\r\n          {\r\n            error ? <p className=\"warningColor\"> {error} </p> : null            \r\n          }\r\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\" formnovalidate=\"formnovalidate\"> Sign up </button>\r\n          <p className=\"padding\"> Already have an account? </p>\r\n          <Link to={\"/signin\"}> Sign in </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignUp;","import React, {useEffect} from \"react\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst SignIn = ({error, onSignIn, onClearError, onClearRequestsReceived}) => {\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      onClearRequestsReceived();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (\r\n    <div className=\"container row mt-5 custom fullscreen\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Sign In </h2>\r\n        <form onSubmit={onSignIn}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputEmail\"> Email address </label>\r\n            <input type=\"email\" className=\"form-control\" id=\"InputEmail\" name=\"email\"/>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"InputPassword\"> Password </label>\r\n            <input name=\"password\" type=\"password\" className=\"form-control\" id=\"InputPassword\"/>\r\n          </div>\r\n          {\r\n            error ? <p className=\"warningColor\"> {error} </p> : null            \r\n          }\r\n          <button type=\"submit\" className=\"btn btn-primary mt-4 btn-outline-dark\" formnovalidate=\"formnovalidate\"> Sign in </button>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignIn;","import React, {useEffect} from \"react\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst LogOut = ({onLogOut, onClearRequestsReceived}) => {\r\n  useEffect(\r\n    () => {\r\n      onLogOut();\r\n      onClearRequestsReceived();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  return (<div/>);\r\n}\r\n\r\nexport default LogOut;","import React, {useEffect} from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst CreatePlantForm = ({user, headerHeight, aboutHeight, error, onCreatePlant, onClearError}) => {\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      scroll.scrollToTop();\r\n      return () => scroll.scrollTo(headerHeight + aboutHeight)\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={\"/signup\"}/>);\r\n  return (\r\n    <div className=\"container row mt-5 fullscreen\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-6\">\r\n        <h2 className=\"mb-5\"> Create a plant </h2>\r\n        <form onSubmit={onCreatePlant}>\r\n          <input className=\"mb-4\" name=\"name\" type=\"text\" placeholder=\"Enter name\"/>\r\n          <input className=\"mb-4\" name=\"description\" type=\"text\" placeholder=\"Enter description\"/>\r\n          <input className=\"mb-4 smallWidth\" name=\"size\" type=\"number\" min=\"1\" placeholder=\"Size\"/> cm <br/>\r\n          <select className=\"mb-4 p-1\" name=\"location\" type=\"text\">\r\n            <option> Select location </option>\r\n            <option value=\"sun\"> sun </option>\r\n            <option value=\"shade\"> shade </option>\r\n            <option value=\"sun and shade\"> sun and shade </option>\r\n          </select>\r\n          <br/>\r\n          <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" placeholder=\"Price\"/> € <br/>\r\n          <input className=\"mb-4\" name=\"plantImage\" type=\"file\"/>\r\n          {\r\n            error ? <p className=\"warningColor\"> {error} </p> : null            \r\n          }\r\n          <div className=\"col-12\">\r\n            <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\" > Create </button>\r\n            <Link to={\"/\"}> <button className=\"btn btn-sm mx-5\"> Go back </button> </Link>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatePlantForm;","import React, {useEffect} from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst PlantDetails = ({match, user, plant, headerHeight, aboutHeight, onReadPlant, onDeletePlant}) => {\r\n  useEffect(\r\n    () => {\r\n      onReadPlant(match.params.plantId);\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={ \"/signup\" }/>);\r\n  const {_id, name, description, size, image, imagePublicId, location, price, creator} = plant;\r\n  if (!creator) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"container mt-5 row row-md-10 offset-md-4\">\r\n      <div className=\"mt-4 mb-3 pt-4 container\">\r\n        <h2> Plant details </h2>\r\n      </div>\r\n      <div className=\"col\">\r\n        <div className=\"card cardMediumWidth\">\r\n          {\r\n            image ? <img className=\"card-img-top mediumPicSize\" src={image} alt={name}/> : null\r\n          }\r\n          <div className=\"ml-2 mt-2\"> <span> Name: </span> {name} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Description: </span> {description} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Size: </span> {size} cm </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Likes: </span> {location} </div>\r\n          <div className=\"ml-2 mt-2\"> <span> Price: </span> {price} € </div>\r\n          <div className=\"ml-2 mt-2 col justify-content-center\">\r\n            <div className=\"row-2 justify-content-center\">\r\n              <div className=\"card-body\">\r\n                {\r\n                  user._id === creator._id ? (\r\n                    <div>\r\n                      <Link to={\"/plants/update\"}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Update </button> </Link>\r\n                      <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={() => onDeletePlant(_id, imagePublicId)}> Delete </button>\r\n                    </div>\r\n                  ) : (\r\n                    <div>\r\n                      <Link to={{pathname: `/plants/checkout/${_id}`, plant: plant}}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Buy </button> </Link>\r\n                      <Link to={{pathname: \"/requests/create\", plant: plant}}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Swap </button> </Link>\r\n                    </div>\r\n                  )\r\n                }\r\n                <Link to={\"/\"} onClick={() => scroll.scrollTo(headerHeight + aboutHeight)}> <button className=\"btn btn-sm ml-2\"> Go back </button> </Link>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PlantDetails;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst UpdatePlantForm = ({plant, onNameChange, onDescriptionChange, onSizeChange, onPriceChange, onLocationChange, onImageChange, onUpdatePlant}) => {\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n\r\n  const {_id, name, description, size, image, price} = plant;\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mt-5 mb-4\"> Update your plant </h2>\r\n        <div className=\"card cardSmallWidth mb-5\">\r\n          <img className=\"mb-2 smallPicSize\" src={image} alt={name}/>\r\n          <div className=\"card-body\">\r\n            <input className=\"mb-2\" onChange={onImageChange} type=\"file\"/>\r\n            <input className=\"mb-2\"  type=\"text\" onChange={onNameChange} value={ name }/>\r\n            <input className=\"mb-2\"  type=\"text\" onChange={onDescriptionChange} value={description}/>\r\n            <input className=\"mb-2 smallWidth\"  type=\"number\" onChange={onSizeChange} value={size}/> cm <br/>\r\n            <select  className=\"mb-2\" onChange={onLocationChange} name=\"location\" type=\"text\" placeholder=\"Select\">\r\n              <option value=\"sun\"> sun </option>\r\n              <option value=\"shade\"> shade </option>\r\n              <option value=\"sun and shade\"> sun and shade </option>\r\n            </select> <br/>\r\n            <input className=\"mb-4 smallWidth\" name=\"price\" type=\"number\" min=\"1\" onChange={onPriceChange} value={price}/> € \r\n            <div className=\"row justify-content-around\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" onClick={() => onUpdatePlant(plant)}> Save changes </button>\r\n              <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdatePlantForm;","import React, {useState, useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\nimport {CardElement, useStripe, useElements} from \"@stripe/react-stripe-js\";\r\nimport config from \"../config\";\r\n\r\nconst CheckoutForm = ({plant, headerHeight, aboutHeight, onCheckout}) => {\r\n  const [succeeded, setSucceeded] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const [processing, setProcessing] = useState(\"\");\r\n  const [disabled, setDisabled] = useState(true);\r\n  const [clientSecret, setClientSecret] = useState(\"\");\r\n  const stripe = useStripe();\r\n  const elements = useElements();\r\n  \r\n  useEffect(\r\n    () => {\r\n      // Create PaymentIntent as soon as the page loads\r\n      window\r\n        .fetch(\r\n          `${config.API_URL}/api/create-payment-intent`,\r\n          {\r\n            method: \"POST\",\r\n            headers: {\"Content-Type\": \"application/json\"},\r\n            body: JSON.stringify({price: plant.price})\r\n          }\r\n        )\r\n        .then(\r\n          res => res.json()\r\n        )\r\n        .then(\r\n          data => setClientSecret(data.clientSecret)\r\n        );\r\n        return () => scroll.scrollTo(headerHeight + aboutHeight)\r\n    },\r\n    []\r\n  );\r\n\r\n  // Card styling\r\n  const cardStyle = {\r\n    style: {\r\n      base: {\r\n        color: \"#32325d\",\r\n        fontFamily: \"Arial, sans-serif\",\r\n        fontSmoothing: \"antialiased\",\r\n        fontSize: \"16px\",\r\n        \"::placeholder\": {color: \"#32325d\"}\r\n      },\r\n      invalid: {\r\n        color: \"#fa755a\",\r\n        iconColor: \"#fa755a\"\r\n      }\r\n    }\r\n  };\r\n\r\n  // Listen for changes in Card element and display any errors as customer types card details\r\n  const handleChange = async event => {\r\n    setDisabled(event.empty);\r\n    setError(event.error ? event.error.message : \"\");\r\n  };\r\n\r\n  // Handle payment\r\n  const handleSubmitPayment = async event => {\r\n    event.preventDefault();\r\n    setProcessing(true);\r\n    const payload = await stripe.confirmCardPayment(\r\n      clientSecret,\r\n      {payment_method: {card: elements.getElement(CardElement)}}\r\n    );\r\n    if (payload.error) {\r\n      setError(`Payment failed ${payload.error.message}`);\r\n      setProcessing(false);\r\n    }\r\n    else {\r\n      setError(null);\r\n      setProcessing(false);\r\n      setSucceeded(true);\r\n    }\r\n  }\r\n  \r\n  const {_id, name, price} = plant;\r\n  return (\r\n    <div className=\"container col-9\">\r\n      <form className=\"checkoutForm mt-5\" id=\"payment-form\" onSubmit={handleSubmitPayment}>\r\n        <h2 className=\"text-center mb-2 p-2\">  {name} </h2>\r\n        <h3 className=\"text-center mb-4 p-2\"> {price} € </h3>\r\n        <CardElement className=\"p-2\" id=\"card-element\" options={cardStyle} onChange={handleChange}/>\r\n        <div className=\"row justify-content-center\">\r\n          <button onClick={onCheckout} className=\"btn btn-sm mt-5 mb-4\" disabled={processing || disabled || succeeded} id=\"submit\">\r\n            <span id=\"button-text\">\r\n              {\r\n                processing ? <div className=\"spinner\" id=\"spinner\"/> : \"Pay now\"\r\n              }\r\n            </span>\r\n          </button>\r\n        </div>\r\n        {/* Show any error that happens when processing the payment */\r\n          error && (<div className=\"card-error\" role=\"alert\"> {error} </div>)\r\n        /* Show success message upon completion */}\r\n        <p className={succeeded ? \"result-message text-center\" : \"result-message hidden text-center\"}>\r\n          Payment succeeded.\r\n        </p>\r\n      </form>\r\n      <div className=\"row justify-content-center\">\r\n        {\r\n          succeeded ? (\r\n            <Link to={\"/\"}> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n          ) \r\n          : (\r\n            <Link to={`/plants/read/${_id}`}> <button className=\"btn btn-sm\"> Go back </button> </Link>\r\n          )\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutForm;","import React, {useEffect} from \"react\";\r\nimport {loadStripe} from \"@stripe/stripe-js\";\r\nimport {Elements} from \"@stripe/react-stripe-js\";\r\nimport CheckoutForm from \"./CheckoutForm\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst promise = loadStripe(\"pk_test_51IQBsPA6EAM4YnfDyrjHWnLHzZ5KkI9tsERzYhBGVoctZBrFUb4Sda035HvcQKpp7thFiqW6QmO8ytPbOAMTg33z00cHvcbojv\");\r\n\r\nconst CheckoutPage = ({location, headerHeight, aboutHeight, onCheckout}) => {\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-6 offset-1 offset-md-5 App\">\r\n        <Elements stripe={promise}>\r\n          <CheckoutForm onCheckout={onCheckout} plant={location.plant} headerHeight={headerHeight} aboutHeight={aboutHeight}/>\r\n        </Elements>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CheckoutPage;","import React, {useEffect} from \"react\";\r\nimport {Link, Redirect} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst RequestsPage = ({user, requests, requestsNumber, onFetchAllRequests, onClearRequestsReceived}) => {\r\n\r\n  // Handle go back\r\n  const handleResetAll = () => {\r\n    onClearRequestsReceived();\r\n    scroll.scrollToTop();\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      onFetchAllRequests();\r\n      handleResetAll();\r\n      return () => handleResetAll()\r\n    },\r\n    []\r\n  );\r\n\r\n  if (!user) return (<Redirect to={\"/signup\"}/>);\r\n  if (!requests) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 > Your messages </h2>\r\n        <h3 className=\"mb-4\"> [{requestsNumber}] </h3>\r\n        <Link to={\"/\"}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n        {\r\n          requests.map(\r\n            (request) => {\r\n              const {_id, buyer, seller, plant} = request;\r\n              return (\r\n                seller._id === user._id ? (\r\n                  <div className=\"card p-3 mt-4 \" key={_id}>\r\n                    <h4> Request for: {plant.name} </h4>\r\n                    <h5> by: {buyer.username} </h5>\r\n                    <div>\r\n                      <Link className=\"btn btn-outline-dark\" to={`/requests/read/${_id}`}> Details </Link>\r\n                    </div>\r\n                  </div>\r\n                ) : null\r\n              );\r\n            } \r\n          )\r\n        }\r\n        {\r\n          requestsNumber === 0 ? null : <Link to={\"/\"}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestsPage;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst CreateRequestForm = ({location, error, onCreateRequest, onClearError}) => {\r\n  useEffect(\r\n    () => {\r\n      onClearError();\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  const {plant} = location;\r\n  return (\r\n    <div className=\"container row mt-5\">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Your mesage </h2>\r\n        <form onSubmit={(event) => onCreateRequest(event, plant)}>\r\n          <div>\r\n            <textarea className=\"mb-4\" name=\"message\" cols=\"35\" rows=\"7\"/>\r\n          </div>\r\n          {\r\n            error ? <p className=\"warningColor\"> {error} </p> : null            \r\n          }\r\n          <button className=\"btn btn-sm btn-outline-dark\" type=\"submit\"> Send </button>\r\n          <Link to={`/plants/read/${plant._id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreateRequestForm;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst RequestDetails = ({match, request, onReadRequest, onDeleteRequest}) => {\r\n  useEffect(\r\n    () => {\r\n      onReadRequest(match.params.requestId);\r\n      scroll.scrollToTop();\r\n    },\r\n    []\r\n  );\r\n\r\n  const {_id, buyer, plant, message, reply} = request;\r\n  if (!buyer || !plant) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-5 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mb-5\"> Your request </h2>\r\n        <h4> for: {plant.name} </h4>\r\n        <h5> by: {buyer.username} </h5>\r\n        <p> {message} </p>\r\n        {\r\n          reply ? (\r\n            <div>\r\n              <h5> Your reply: </h5>\r\n              <p> {reply} </p>\r\n            </div>\r\n          ) : null\r\n        }\r\n        <div>\r\n          {                  \r\n            reply ? null : <Link to={`/requests/update/${_id}`}> <button className=\"btn btn-sm ml-2 btn-outline-dark\"> Reply </button> </Link>\r\n          }\r\n          <button className=\"btn btn-sm ml-2 btn-outline-dark\" onClick={() => onDeleteRequest(_id)}> Delete </button>\r\n        </div>\r\n        <Link to={\"/requests/fetch\"} onClick={scroll.scrollToTop}> <button className=\"btn btn-sm mt-4\"> Go back </button> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default RequestDetails;","import React, {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\n\r\nconst UpdateRequestForm = ({request, onCreateReply, onUpdateRequest}) => {\r\n  useEffect(\r\n    () => scroll.scrollToTop(),\r\n    []\r\n  );\r\n\r\n  const {_id, message} = request;\r\n  return (\r\n    <div className=\"container row mt-5 \">\r\n      <div className=\"mt-2 col-11 col-md-5 offset-1 offset-md-5\">\r\n        <h2 className=\"mt-5 mb-4\"> Reply your request </h2>\r\n        <div className=\"card cardSmallWidth mb-5\">\r\n          <div className=\"card-body\">\r\n            <p> {message} </p>\r\n            <textarea className=\"mb-4\" name=\"reply\" cols=\"31\" rows=\"6\" placeholder=\"Your reply\" onChange={onCreateReply}/>\r\n            <div className=\"row justify-content-around\">\r\n              <button className=\"btn btn-sm btn-outline-dark\" onClick={() => onUpdateRequest(request)}> Submit </button>\r\n              <Link to={`/requests/read/${_id}`}> <button className=\"btn btn-sm mx-2\"> Go back </button> </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UpdateRequestForm;","import React from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"notFound\">\r\n      <div>\r\n        <h2> \r\n          Oh-oh! <br/> <br/>\r\n          We think you got lost in the jungle!\r\n        </h2>\r\n        <h3> 404 Not Found </h3>\r\n        <Link to={\"/\"}> <button className=\"btn btn-sm ml-2\"> Take me home </button> </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React, {useEffect} from \"react\";\r\n\r\nconst KommunicateChat = () => {\r\n  useEffect(\r\n    () => {\r\n      (\r\n        (d, m) => {\r\n          const kommunicateSettings = { \r\n            \"appId\": \"10b22c52854a305b79bbdecc356bea5\", \r\n            \"popupWidget\": true, \r\n            \"automaticChatOpenOnNavigation\": true \r\n          };\r\n          const s = document.createElement(\"script\"); \r\n          s.type = \"text/javascript\"; \r\n          s.async = true;\r\n          s.src = \"https://widget.kommunicate.io/v2/kommunicate.app\";\r\n          const h = document.getElementsByTagName(\"head\")[0]; \r\n          h.appendChild(s);\r\n          window.kommunicate = m; \r\n          m._globals = kommunicateSettings;\r\n        }\r\n      )\r\n      (\r\n        document, \r\n        window.kommunicate || {}\r\n      );\r\n    },\r\n    []\r\n  );\r\n\r\n  return (<div/>);\r\n}\r\n\r\nexport default KommunicateChat;","import React, {useState, useEffect} from \"react\";\r\nimport {Route, Switch, withRouter} from \"react-router-dom\";\r\nimport {animateScroll as scroll} from \"react-scroll\";\r\nimport config from \"./config\";\r\nimport axios from \"axios\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./App.css\";\r\n\r\nimport NavBar from \"./components/NavBar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Home from \"./components/Home\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport SignIn from \"./components/SignIn\";\r\nimport LogOut from \"./components/LogOut\";\r\nimport CreatePlantForm from \"./components/CreatePlantForm\";\r\nimport PlantDetails from \"./components/PlantDetails\";\r\nimport UpdatePlantForm from \"./components/UpdatePlantForm\";\r\nimport CheckoutPage from \"./components/CheckoutPage\";\r\nimport RequestsPage from \"./components/RequestsPage\";\r\nimport CreateRequestForm from \"./components/CreateRequestForm\";\r\nimport RequestDetails from \"./components/RequestDetails\";\r\nimport UpdateRequestForm from \"./components/UpdateRequestForm\";\r\nimport NotFound from \"./components/NotFound\";\r\nimport KommunicateChat from \"./components/Chat\";\r\n\r\nconst App = (props) => {\r\n  const [fetchingUser, setFetchingUser] = useState(true);\r\n  const [loggedInUser, setLoggedInUser] = useState(null);\r\n  const [userChange, setUserChange] = useState(false);\r\n  const [plants, setPlants] = useState([]);\r\n  const [query, setQuery] = useState(\"\");\r\n  const [plant, setPlant] = useState({});\r\n  const [requests, setRequests] = useState([]);\r\n  const [request, setRequest] = useState({});\r\n  const [requestsNumber, setRequestsNumber] = useState(0);\r\n  const [newRequestsReceived, setNewRequestsReceived] = useState(false);\r\n  const [intervalId, setIntervalId] = useState(null);\r\n  const [counter, setCounter] = useState(0);\r\n  const [headerHeight, setHeaderHeight] = useState(0);\r\n  const [aboutHeight, setAboutHeight] = useState(0);\r\n  const [error, setError] = useState(null);\r\n   \r\n  // Get height of header and about elements\r\n  const handleGetElementsHeight = () => {\r\n    setHeaderHeight(Math.round(document.querySelector(\"#titleId\").getBoundingClientRect().height));\r\n    setAboutHeight(Math.round(document.querySelector(\"#aboutId\").getBoundingClientRect().height));\r\n  }\r\n\r\n  // Clear error message\r\n  const handleClearError = () => setError(null)\r\n\r\n  // ---------- Plants ----------\r\n\r\n  // Fetch all plants\r\n  const handleFetchAllPlants = () => {\r\n    axios.get(`${config.API_URL}/api/plants/fetch`)\r\n      .then(\r\n        (response) => setPlants(response.data)\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Fetching plants failed\", err)\r\n      );\r\n  }\r\n\r\n  // Initialize page\r\n  useEffect(\r\n    () => {\r\n      handleFetchAllPlants();\r\n      if (!loggedInUser) {\r\n        axios.get(`${config.API_URL}/api/user`, {withCredentials: true})\r\n          .then(\r\n            (response) => {\r\n              setLoggedInUser(response.data);\r\n              setFetchingUser(false);\r\n            }\r\n          )\r\n          .catch(\r\n            (err) => {\r\n              setFetchingUser(false);\r\n              console.log(\"Initializing fetching failed\", err);\r\n            }\r\n          );\r\n      }\r\n      return () => {\r\n        if (intervalId) clearInterval(intervalId);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  // Fetch query plants\r\n  const handleFetchQueryPlants = () => {\r\n    axios.get(`${config.API_URL}/api/plants/search?q=${query}`)\r\n      .then(\r\n        (response) => setPlants(response.data)\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Query fetching failed\", err)\r\n      );\r\n  }\r\n\r\n  // Search plant\r\n  const handleSearchPlant = event => {\r\n    const query = event.target.value;\r\n    setQuery(query);\r\n  }\r\n\r\n  // Handle plant search result\r\n  useEffect(\r\n    () => query ? handleFetchQueryPlants() : handleFetchAllPlants(),\r\n    [query]\r\n  );\r\n\r\n  // Create plant\r\n  const handleCreatePlant = event => {\r\n    event.preventDefault();\r\n    const {name, description, size, plantImage, location, price} = event.target;\r\n    const image = plantImage.files[0];\r\n    const uploadForm = new FormData();\r\n    uploadForm.append(\"image\", image);\r\n    axios.post(`${config.API_URL}/api/upload`, uploadForm)\r\n      .then(\r\n        (response) => {\r\n          const {image, imagePublicId} = response.data;\r\n          const newPlant = {\r\n            name: name.value,\r\n            description: description.value,\r\n            size: size.value,\r\n            image,\r\n            imagePublicId,\r\n            location: location.value,\r\n            price: price.value\r\n          };\r\n          axios.post(\r\n            `${config.API_URL}/api/plants/create`, \r\n            newPlant, \r\n            {withCredentials: true}\r\n          )\r\n            .then(\r\n              (response) => {\r\n                setPlants([response.data, ...plants]);\r\n                props.history.push(\"/\");\r\n              } \r\n            )\r\n            .catch(\r\n              (err) => setError(err.response.data.error)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Read plant\r\n  const handleReadPlant = plantId => {\r\n    axios.get(\r\n      `${config.API_URL}/api/plants/read/${plantId}`,\r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        (response) => setPlant(response.data)\r\n      )\r\n      .catch(\r\n        () => console.log(\"Read plant failed\")\r\n      );\r\n  }\r\n\r\n  // Plant name changed\r\n  const handleNameChange = event => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    clonePlant.name = event.target.value;\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant description changed\r\n  const handleDescriptionChange = event => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    clonePlant.description = event.target.value;\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant size changed\r\n  const handleSizeChange = event => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    clonePlant.size = event.target.value;\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant price changed\r\n  const handlePriceChange = event => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    clonePlant.price = event.target.value;\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant location changed\r\n  const handleLocationChange = event => {\r\n    const clonePlant = JSON.parse(JSON.stringify(plant));\r\n    clonePlant.location = event.target.value;\r\n    setPlant(clonePlant);\r\n  }\r\n\r\n  // Plant image changed\r\n  const handleImageChange = event => {\r\n    const image = event.target.files[0];\r\n    const {imagePublicId} = plant;\r\n    const destroyImageData = {\r\n      imagePublicId\r\n    }\r\n    axios.post(\r\n      `${config.API_URL}/api/destroy`, \r\n      destroyImageData\r\n    )\r\n      .then(\r\n        () => {\r\n          const uploadForm = new FormData();\r\n          uploadForm.append(\"image\", image);\r\n          axios.post(\r\n            `${ config.API_URL }/api/upload`, \r\n            uploadForm\r\n          )\r\n            .then(\r\n              (response) => {\r\n                const clonePlant = JSON.parse(JSON.stringify(plant));\r\n                const {imagePublicId, image} = response.data;\r\n                clonePlant.imagePublicId = imagePublicId;\r\n                clonePlant.image = image;\r\n                setPlant(clonePlant);\r\n              }\r\n            )\r\n            .catch(\r\n              (err) => console.log(\"Image upload failed\", err)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Delete old image failed\", err)\r\n      );\r\n  }\r\n\r\n  // Update plant\r\n  const handleUpdatePlant = plant => {\r\n    const {_id, name, description, size, image, imagePublicId, location, price} = plant;\r\n    const updatedPlant = {\r\n      name,\r\n      description,\r\n      size,\r\n      image,\r\n      imagePublicId,\r\n      location,\r\n      price\r\n    };\r\n    axios.patch(\r\n      `${config.API_URL}/api/plants/update/${_id}`,\r\n       updatedPlant\r\n      )\r\n      .then(\r\n        () => {\r\n          const updatedPlants = plants.map(\r\n            (singlePlant) => {\r\n              if (singlePlant._id === _id) {\r\n                singlePlant.name = name;\r\n                singlePlant.description = description;\r\n                singlePlant.size = size;\r\n                singlePlant.image = image;\r\n                singlePlant.imagePublicId = imagePublicId;\r\n                singlePlant.location = location;\r\n                singlePlant.price = price;\r\n              }\r\n              return singlePlant;\r\n            }\r\n          );\r\n          setPlants(updatedPlants);\r\n          props.history.push(\"/\");\r\n          scroll.scrollTo(headerHeight + aboutHeight);\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Update plant failed\", err)\r\n      );\r\n  }\r\n\r\n  // Delete Plant\r\n  const handleDeletePlant = (plantId, imagePublicId) => {\r\n    const destroyImageData = {\r\n      imagePublicId\r\n    }\r\n    axios.post(\r\n      `${config.API_URL}/api/destroy`, \r\n      destroyImageData\r\n    )\r\n      .then(\r\n        () => {\r\n          axios.delete(`${config.API_URL}/api/plants/delete/${plantId}`)\r\n            .then(\r\n              () => {\r\n                const filteredPlants = plants.filter(\r\n                  (plant) => {\r\n                    return plant._id !== plantId;\r\n                  }\r\n                );\r\n                setPlants(filteredPlants);\r\n                props.history.push(\"/\");\r\n                scroll.scrollTo(headerHeight + aboutHeight);\r\n              }\r\n            )\r\n            .catch(\r\n              (err) => console.log(\"Delete plant failed\", err)\r\n            );\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Delete image failed\", err)\r\n      );\r\n  }  \r\n\r\n  // Plant payment\r\n  const handleCheckout = () => {\r\n    axios.post(\r\n      `${config.API_URL}/api/create-payment-intent`, \r\n      {}, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        () => props.history.push(\"/\")\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Checkout failed\", err)\r\n      );\r\n  }\r\n\r\n  // ---------- Requests ----------\r\n\r\n  // Start requests check if user changes\r\n  useEffect(\r\n    () => {\r\n      if (loggedInUser && userChange) {\r\n          setUserChange(false);\r\n          axios.get(`${config.API_URL}/api/requests/fetch`)\r\n          .then(\r\n            (response) => {\r\n              setRequests(response.data);\r\n              const currentRequests = requests.filter(\r\n                (currentRequest) => {\r\n                  return currentRequest.seller._id === loggedInUser._id;\r\n                } \r\n              );\r\n              setRequestsNumber(currentRequests.length);\r\n              const interval = setInterval(\r\n                () => setCounter(counter => counter + 1), \r\n                10000 // every minute\r\n              );\r\n              setIntervalId(interval);\r\n            }\r\n          )\r\n          .catch(\r\n            (err) => console.log(\"Checking requests failed\", err)\r\n          );\r\n      }\r\n    },\r\n    [loggedInUser]\r\n  );\r\n\r\n  // Check new requests for logged in user every minute\r\n  useEffect(\r\n    () => {\r\n      axios.get(`${config.API_URL}/api/requests/fetch`)\r\n      .then(\r\n        (response) => {\r\n          setRequests(response.data);\r\n          const currentRequests = requests.filter(\r\n            (currentRequest) => {\r\n              return currentRequest.seller._id === loggedInUser._id;\r\n            } \r\n          );\r\n          const currentRequestsNumber = currentRequests.length;\r\n          if (requestsNumber < currentRequestsNumber) {\r\n            setRequestsNumber(currentRequestsNumber);\r\n            setNewRequestsReceived(true);\r\n          }\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Checking requests failed\", err)\r\n      );\r\n    },\r\n    [counter]\r\n  );\r\n\r\n  // Clear state for new received requests\r\n  const handleClearRequestsReceived = () => setNewRequestsReceived(false)\r\n  \r\n  // Fetch all requests\r\n  const handleFetchAllRequests = () => {\r\n    axios.get(`${config.API_URL}/api/requests/fetch`)\r\n      .then(\r\n        (response) => setRequests(response.data)\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Fetching requests failed\", err)\r\n      );\r\n  }\r\n\r\n  // Create request\r\n  const handleCreateRequest = (event, plant) => {\r\n    event.preventDefault();\r\n    const {message} = event.target;\r\n    const newRequest = {\r\n      seller: plant.creator._id,\r\n      plant: plant._id,\r\n      message: message.value\r\n    };\r\n    axios.post(\r\n      `${config.API_URL}/api/requests/create`, \r\n      newRequest, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        (response) => {\r\n          setRequests([response.data, ...requests]);\r\n          props.history.push(`/plants/read/${plant._id}`);\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Read request\r\n  const handleReadRequest = requestId => {\r\n    axios.get(\r\n      `${config.API_URL}/api/requests/read/${requestId}`,\r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        (response) => setRequest(response.data)\r\n      )\r\n      .catch(\r\n        () => console.log(\"Read request failed\")\r\n      );\r\n  }\r\n\r\n  // Create reply\r\n  const handleCreateReply = event => {\r\n    const cloneRequest = JSON.parse(JSON.stringify(request));\r\n    cloneRequest.reply = event.target.value;\r\n    setRequest(cloneRequest);\r\n  }\r\n\r\n  // Update request\r\n  const handleUpdateRequest = request => {\r\n    const {_id, buyer, seller, plant, message, reply} = request;\r\n    const updatedRequest = {\r\n      buyer,\r\n      seller,\r\n      plant,\r\n      message,\r\n      reply\r\n    };\r\n    axios.patch(\r\n      `${config.API_URL}/api/requests/update/${_id}`, \r\n      updatedRequest\r\n    )\r\n      .then(\r\n        () => {\r\n          const updatedRequests = requests.map(\r\n            (singleRequest) => {\r\n              if (singleRequest._id === _id) {\r\n                singleRequest.buyer = buyer;\r\n                singleRequest.seller = seller;\r\n                singleRequest.plant = plant;\r\n                singleRequest.message = message;\r\n                singleRequest.reply = reply;\r\n              }\r\n              return singleRequest;\r\n            }\r\n          );\r\n          setRequests(updatedRequests);\r\n          props.history.push(`/requests/read/${_id}`);\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Update request failed\", err)\r\n      );\r\n  }\r\n\r\n  // Delete request\r\n  const handleDeleteRequest = requestId => {\r\n    axios.delete(`${config.API_URL}/api/requests/delete/${requestId}`)\r\n      .then(\r\n        () => {\r\n          const filteredRequests = requests.filter(\r\n            (request) => {\r\n              return request._id !== requestId;\r\n            }\r\n          );\r\n          setRequests(filteredRequests);\r\n          setRequestsNumber((requestsNumber) => requestsNumber - 1);\r\n          props.history.push(\"/requests/fetch\");\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Delete request failed\", err)\r\n      );\r\n  }\r\n\r\n  // ---------- Authentification ----------\r\n\r\n  // Signup\r\n  const handleSignUp = event => {\r\n    event.preventDefault();\r\n    const {username, email, password} = event.target;\r\n    const newUser = {\r\n      username: username.value,\r\n      email: email.value.toLowerCase(),\r\n      password: password.value\r\n    };\r\n    axios.post(\r\n      `${config.API_URL}/api/signup`, \r\n      newUser\r\n    )\r\n      .then(\r\n        (response) => {\r\n          setLoggedInUser(response.data);\r\n          setUserChange(true);\r\n          props.history.push(\"/\");\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Signin\r\n  const handleSignIn = event => {\r\n    event.preventDefault();\r\n    const {email, password} = event.target;\r\n    const user = {\r\n      email: email.value,\r\n      password: password.value\r\n    };\r\n    axios.post(\r\n      `${config.API_URL}/api/signin`, \r\n      user, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        (response) => {\r\n          setLoggedInUser(response.data);\r\n          setUserChange(true);\r\n          props.history.push(\"/\");\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => setError(err.response.data.error)\r\n      );\r\n  }\r\n\r\n  // Logout\r\n  const handleLogOut = () => {\r\n    axios.post(\r\n      `${config.API_URL}/api/logout`, \r\n      {}, \r\n      {withCredentials: true}\r\n    )\r\n      .then(\r\n        () => {\r\n          setLoggedInUser(null);\r\n          clearInterval(intervalId);\r\n          props.history.push(\"/\");\r\n        }\r\n      )\r\n      .catch(\r\n        (err) => console.log(\"Logout failed\", err)\r\n      );\r\n  }\r\n\r\n  if (fetchingUser) return (\r\n    <div class=\"spinner-grow text-success m-5\" role=\"status\">\r\n      <span class=\"visually-hidden\"> Loading... </span>\r\n    </div>\r\n  );\r\n  return (\r\n    <div class=\"main\">\r\n      <NavBar onLogOut={handleLogOut} newRequestsReceived={newRequestsReceived} user={loggedInUser} headerHeight={headerHeight} aboutHeight={aboutHeight}/>\r\n      <Switch>\r\n        {/* ---------- Plants ---------- */}\r\n        <Route exact path=\"/\" render={\r\n          () => {\r\n            return <Home onSearchPlant={handleSearchPlant} onGetElementsHeight={handleGetElementsHeight} plants={plants} query={query} headerHeight={headerHeight}/>\r\n          }\r\n        }/>\r\n        <Route path=\"/plants/create\" render={\r\n          (routeProps) => {\r\n            return <CreatePlantForm onCreatePlant={handleCreatePlant} onClearError={handleClearError} user={loggedInUser} headerHeight={headerHeight} aboutHeight={aboutHeight} error={error} {...routeProps}/>\r\n          }\r\n        }/>\r\n        <Route path=\"/plants/read/:plantId\" render={\r\n          (routeProps) => {\r\n            return <PlantDetails onReadPlant={handleReadPlant} onDeletePlant={handleDeletePlant} plant={plant} user={loggedInUser} headerHeight={headerHeight} aboutHeight={aboutHeight} {...routeProps}/>\r\n          }\r\n        }/>\r\n        <Route path=\"/plants/update\" render={\r\n          (routeProps) => {\r\n            return <UpdatePlantForm onNameChange={handleNameChange} onDescriptionChange={handleDescriptionChange} onSizeChange={handleSizeChange} onPriceChange={handlePriceChange} onLocationChange={handleLocationChange} onImageChange={handleImageChange} onUpdatePlant={handleUpdatePlant} plant={plant} headerHeight={headerHeight} aboutHeight={aboutHeight} {...routeProps}/>\r\n          }\r\n        }/>\r\n        <Route path=\"/plants/checkout/:plantId\" render={\r\n          (routeProps) => {\r\n            return <CheckoutPage onCheckout={handleCheckout} headerHeight={headerHeight} aboutHeight={aboutHeight} {...routeProps}/>\r\n          }\r\n        }/>\r\n        {/* ---------- Requests ---------- */}\r\n        <Route path=\"/requests/fetch\" render={\r\n            (routeProps) => {\r\n              return <RequestsPage onFetchAllRequests={handleFetchAllRequests} onClearRequestsReceived={handleClearRequestsReceived}  user={loggedInUser} requests={requests} requestsNumber={requestsNumber} {...routeProps}/>\r\n            }\r\n        }/>\r\n        <Route path=\"/requests/create\" render={\r\n          (routeProps) => {\r\n            return <CreateRequestForm onCreateRequest={handleCreateRequest} onClearError={handleClearError} user={loggedInUser} error={error} {...routeProps}/>\r\n          }\r\n        }/>\r\n        <Route path=\"/requests/read/:requestId\" render={\r\n          (routeProps) => {\r\n            return <RequestDetails onReadRequest={handleReadRequest} onDeleteRequest={handleDeleteRequest} request={request} user={loggedInUser} {...routeProps}/>\r\n          }\r\n        }/>\r\n        <Route path=\"/requests/update\" render={\r\n          (routeProps) => {\r\n            return <UpdateRequestForm onCreateReply={handleCreateReply} onUpdateRequest={handleUpdateRequest} request={request} {...routeProps}/>\r\n          }\r\n        }/>\r\n        {/* ---------- Authentication ---------- */}\r\n        <Route path=\"/signup\" render={\r\n          (routeProps) => {\r\n            return <SignUp onSignUp={handleSignUp} onClearError={handleClearError} onClearRequestsReceived={handleClearRequestsReceived} error={error} {...routeProps}/>\r\n          }\r\n        }/>\r\n        <Route path=\"/signin\" render={\r\n          (routeProps) => {\r\n            return <SignIn onSignIn={handleSignIn} onClearError={handleClearError} onClearRequestsReceived={handleClearRequestsReceived} error={error} {...routeProps}/>\r\n          }\r\n        }/>\r\n        <Route path=\"/logout\" render={\r\n          (routeProps) => {\r\n            return <LogOut onLogOut={handleLogOut} onClearRequestsReceived={handleClearRequestsReceived} {...routeProps}/>\r\n          }\r\n        }/>\r\n\r\n        <Route component={NotFound}/>\r\n      </Switch>\r\n      <KommunicateChat/>\r\n      <Footer/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default withRouter(App);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport {BrowserRouter} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App/>\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.querySelector(\"#root\")\r\n);"],"sourceRoot":""}